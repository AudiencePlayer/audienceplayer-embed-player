{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://audienceplayer-embed-player/webpack/bootstrap","webpack://audienceplayer-embed-player/webpack/runtime/define property getters","webpack://audienceplayer-embed-player/webpack/runtime/hasOwnProperty shorthand","webpack://audienceplayer-embed-player/./node_modules/detect-browser/es/index.js","webpack://audienceplayer-embed-player/./src/models/player.ts","webpack://audienceplayer-embed-player/./src/models/play-config.ts","webpack://audienceplayer-embed-player/./src/logging/player-log-processor.ts","webpack://audienceplayer-embed-player/./src/logging/player-logger-service.ts","webpack://audienceplayer-embed-player/./src/video-player/video-player.ts","webpack://audienceplayer-embed-player/./src/utils/platform.ts","webpack://audienceplayer-embed-player/./src/utils/eme.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-sender.ts","webpack://audienceplayer-embed-player/./src/api/graph-request.ts","webpack://audienceplayer-embed-player/./src/api/converters.ts","webpack://audienceplayer-embed-player/./src/api/api-service.ts","webpack://audienceplayer-embed-player/./src/api/queries.ts","webpack://audienceplayer-embed-player/./src/embed-player.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-controls.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","export var PlayingState;\n(function (PlayingState) {\n    PlayingState[PlayingState[\"loading\"] = 0] = \"loading\";\n    PlayingState[PlayingState[\"playing\"] = 1] = \"playing\";\n    PlayingState[PlayingState[\"paused\"] = 2] = \"paused\";\n    PlayingState[PlayingState[\"idle\"] = 3] = \"idle\";\n    PlayingState[PlayingState[\"buffering\"] = 4] = \"buffering\";\n    PlayingState[PlayingState[\"error\"] = 5] = \"error\";\n})(PlayingState || (PlayingState = {}));\nexport class PlayerLogPayload {\n}\n// generic abstraction of player events that are taken from the video player, Chromecast and mobile implementations\nexport var PlayerEventTypes;\n(function (PlayerEventTypes) {\n    PlayerEventTypes[\"playStart\"] = \"playStart\";\n    PlayerEventTypes[\"playing\"] = \"playing\";\n    PlayerEventTypes[\"pause\"] = \"pause\";\n    PlayerEventTypes[\"error\"] = \"error\";\n    PlayerEventTypes[\"stopped\"] = \"stopped\";\n    PlayerEventTypes[\"timeupdate\"] = \"timeupdate\";\n    PlayerEventTypes[\"buffering\"] = \"buffering\";\n    PlayerEventTypes[\"durationChanged\"] = \"durationChanged\";\n    PlayerEventTypes[\"textTrackChanged\"] = \"textTrackChanged\";\n    PlayerEventTypes[\"audioTrackChanged\"] = \"audioTrackChanged\";\n})(PlayerEventTypes || (PlayerEventTypes = {}));\nexport var PlayerDeviceTypes;\n(function (PlayerDeviceTypes) {\n    PlayerDeviceTypes[\"chromecast\"] = \"chromecast\";\n    PlayerDeviceTypes[\"airplay\"] = \"airplay\";\n    PlayerDeviceTypes[\"mob_android\"] = \"mob_android\";\n    PlayerDeviceTypes[\"mob_ios\"] = \"mob_ios\";\n    PlayerDeviceTypes[\"default\"] = \"\";\n})(PlayerDeviceTypes || (PlayerDeviceTypes = {}));\nexport var PlayerEventTypePayloads;\n(function (PlayerEventTypePayloads) {\n    PlayerEventTypePayloads[\"play\"] = \"play\";\n    PlayerEventTypePayloads[\"playing\"] = \"playing\";\n    PlayerEventTypePayloads[\"paused\"] = \"paused\";\n    PlayerEventTypePayloads[\"stop\"] = \"stop\";\n    PlayerEventTypePayloads[\"error\"] = \"error\";\n    PlayerEventTypePayloads[\"configure\"] = \"configure\";\n})(PlayerEventTypePayloads || (PlayerEventTypePayloads = {}));\nexport var PulseMode;\n(function (PulseMode) {\n    PulseMode[\"live\"] = \"live\";\n    PulseMode[\"archive\"] = \"archive\";\n    PulseMode[\"offline\"] = \"offline\";\n})(PulseMode || (PulseMode = {}));\n","export var ArticlePlayErrors;\n(function (ArticlePlayErrors) {\n    ArticlePlayErrors[\"noPlayableAsset\"] = \"noPlayableAsset\";\n    ArticlePlayErrors[\"notAuthenticated\"] = \"notAuthenticated\";\n    ArticlePlayErrors[\"needEntitlement\"] = \"needEntitlement\";\n    ArticlePlayErrors[\"paymentNotAuthorizedInApp\"] = \"paymentNotAuthorizedInApp\";\n    ArticlePlayErrors[\"notAuthorized\"] = \"notAuthorized\";\n    ArticlePlayErrors[\"serverError\"] = \"serverError\";\n    ArticlePlayErrors[\"offlineError\"] = \"offlineError\";\n    ArticlePlayErrors[\"playerError\"] = \"playerError\";\n    ArticlePlayErrors[\"inAppBrowserError\"] = \"inAppBrowserError\";\n    ArticlePlayErrors[\"maxConcurrentStreamNumberError\"] = \"maxConcurrentStreamNumberError\";\n})(ArticlePlayErrors || (ArticlePlayErrors = {}));\n","import { PlayerEventTypePayloads, PlayerEventTypes, PlayingState, PulseMode, } from '../models/player';\nconst MAX_EVENTS = 30;\nexport class PlayerLogProcessor {\n    constructor() {\n        this.playLogs = [];\n        this.apiCallInProgress = false;\n        this.intervalHandle = null;\n    }\n    init(baseUrl, projectId) {\n        this.apiUrl = `${baseUrl}/service/${projectId}/analytics/stream/pulse/log`.replace(/\\/*$/, '');\n        if (this.intervalHandle === null) {\n            this.intervalHandle = setInterval(() => {\n                this.processFirstPlayLog();\n            }, 3000);\n        }\n    }\n    processPlaySession(playSession, timeStamp) {\n        if (!playSession) {\n            return;\n        }\n        const eventStack = playSession.eventStack;\n        if (eventStack.length === 0) {\n            return;\n        }\n        const eventStackPayload = [];\n        let i = 0, sumDelta = 0, lastEventWasProcessed = false;\n        while (i < eventStack.length) {\n            const currentEvent = eventStack[i];\n            if (this.isEventTypeWithoutTimeDelta(currentEvent.eventType)) {\n                // directly process these events. they have no sumDelta and do not affect the play state\n                eventStackPayload.push(this.convertEventToEventPayload(currentEvent));\n                lastEventWasProcessed = true;\n            }\n            else {\n                lastEventWasProcessed = false;\n                if (i - 1 >= 0) {\n                    const previousEvent = eventStack[i - 1];\n                    sumDelta += currentEvent.timeStamp - previousEvent.timeStamp;\n                    if (currentEvent.state !== previousEvent.state) {\n                        eventStackPayload.push(this.createDeltaEventPayload(previousEvent, previousEvent.timeStamp, sumDelta));\n                        sumDelta = 0;\n                    }\n                }\n            }\n            i++;\n        }\n        const lastEvent = eventStack[eventStack.length - 1];\n        if (sumDelta > 0 || !lastEventWasProcessed) {\n            eventStackPayload.push(this.createDeltaEventPayload(lastEvent, timeStamp, sumDelta));\n        }\n        if (eventStackPayload.length > 0) {\n            if (eventStackPayload.length > MAX_EVENTS) {\n                // if event stack too big, add error with runaway info and slice nr of items\n                const lastLogEvent = eventStackPayload[eventStackPayload.length - 1];\n                eventStackPayload.splice(MAX_EVENTS - 1);\n                lastLogEvent.event_type = PlayerEventTypePayloads.error;\n                lastLogEvent.event_payload = '{code: 429, message: \"Too many events\"}'; // runaway\n                eventStackPayload.push(lastLogEvent);\n            }\n            // check if there is already a log for this session\n            let playLogPayload = this.getPlayerLogPayloadWithPulseToken(playSession.pulseToken);\n            if (!playLogPayload) {\n                playLogPayload = {\n                    event_stack: [],\n                    pulse_token: playSession.pulseToken,\n                    pulse_mode: playSession.isLive ? PulseMode.live : PulseMode.offline,\n                    device_type: playSession.deviceType,\n                };\n                this.playLogs.push(playLogPayload);\n            }\n            // keep the event_stack pointer in tact by using push\n            eventStackPayload.forEach(e => playLogPayload.event_stack.push(e));\n            this.processPlayLog(playLogPayload, playSession);\n        }\n    }\n    processFirstPlayLog() {\n        if (this.playLogs.length > 0) {\n            this.processPlayLog(this.playLogs[0], null);\n        }\n    }\n    processPlayLog(currentLog, playSession) {\n        if (!currentLog || this.apiCallInProgress) {\n            return;\n        }\n        if (currentLog.event_stack.length === 0) {\n            this.removePlayLog(currentLog);\n            return;\n        }\n        const logToSend = {\n            ...currentLog,\n            event_stack: [],\n        };\n        let eventStackIndex = 0, isStopCutOff = false;\n        while (eventStackIndex < currentLog.event_stack.length && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            const currentEvent = currentLog.event_stack[eventStackIndex];\n            eventStackIndex++;\n            logToSend.event_stack.push(currentEvent);\n            if (currentEvent.event_type === PlayerEventTypePayloads.stop) {\n                isStopCutOff = true;\n            }\n        }\n        // for offline logging, always accumulate until MAX_EVENTS before sending unless it's a stop cut off.\n        if (logToSend.pulse_mode === PulseMode.offline && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            return;\n        }\n        // transaction start\n        this.apiCallInProgress = true;\n        return fetch(this.apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            },\n            body: JSON.stringify(logToSend),\n        })\n            .then(() => {\n            return true;\n        })\n            .catch(error => {\n            return error.status !== 0;\n        })\n            .then(response => {\n            if (response) {\n                currentLog.event_stack.splice(0, eventStackIndex);\n                if (currentLog.event_stack.length === 0) {\n                    this.removePlayLog(currentLog);\n                }\n            }\n            else {\n                currentLog.pulse_mode = PulseMode.archive;\n            }\n            this.apiCallInProgress = false;\n        });\n    }\n    getPlayerLogPayloadWithPulseToken(pulseToken) {\n        return this.playLogs.find(log => log.pulse_token === pulseToken);\n    }\n    removePlayLog(logPayload) {\n        const index = this.playLogs.findIndex(log => log.pulse_token === logPayload.pulse_token);\n        if (index >= 0) {\n            this.playLogs.splice(index, 1);\n        }\n    }\n    isEventTypeWithoutTimeDelta(eventType) {\n        return [PlayerEventTypes.textTrackChanged, PlayerEventTypes.audioTrackChanged, PlayerEventTypes.playStart].indexOf(eventType) >= 0;\n    }\n    createBaseEventPayload(playerEvent, eventType) {\n        return {\n            timestamp: playerEvent.timeStamp,\n            event_type: eventType,\n            appa: playerEvent.playPosition,\n            appr: Math.min(playerEvent.playPosition / playerEvent.mediaDuration, 1),\n        };\n    }\n    convertEventToEventPayload(playerEvent) {\n        if (playerEvent.eventType === PlayerEventTypes.playStart) {\n            return {\n                timestamp: playerEvent.timeStamp,\n                event_type: PlayerEventTypePayloads.play,\n            };\n        }\n        const eventType = this.convertEventTypeToEventTypePayload(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.audioTrackChanged:\n                return {\n                    ...baseEvent,\n                    audio_locale: playerEvent.audioTrack,\n                };\n            case PlayerEventTypes.textTrackChanged:\n                return {\n                    ...baseEvent,\n                    subtitle_locale: playerEvent.textTrack,\n                };\n            default:\n                return baseEvent;\n        }\n    }\n    createDeltaEventPayload(playerEvent, timestamp, timeDelta) {\n        const eventType = this.getEventTypePayloadFromEventState(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        const errorPart = playerEvent.state === PlayingState.error ? { event_payload: playerEvent.error } : {};\n        return {\n            ...baseEvent,\n            ...errorPart,\n            timestamp,\n            time_delta: timeDelta / 1000,\n        };\n    }\n    getEventTypePayloadFromEventState(playerEvent) {\n        switch (playerEvent.state) {\n            case PlayingState.playing:\n                return PlayerEventTypePayloads.playing;\n            case PlayingState.paused:\n                return PlayerEventTypePayloads.paused;\n            case PlayingState.error:\n                return PlayerEventTypePayloads.error;\n            case PlayingState.buffering:\n            case PlayingState.loading:\n                return PlayerEventTypePayloads.paused; // buffering and loading converted to paused for API\n            case PlayingState.idle:\n                return PlayerEventTypePayloads.stop;\n        }\n    }\n    convertEventTypeToEventTypePayload(playerEvent) {\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.playStart:\n                return PlayerEventTypePayloads.play;\n            case PlayerEventTypes.audioTrackChanged:\n            case PlayerEventTypes.textTrackChanged:\n                return PlayerEventTypePayloads.configure;\n            // because e.g. `timeupdate` events can happen while paused / playing, base the rest on state.\n            default: {\n                this.getEventTypePayloadFromEventState(playerEvent);\n            }\n        }\n    }\n}\n","import { PlayerLogProcessor } from './player-log-processor';\nimport { PlayerEventTypes, PlayingState } from '../models/player';\nexport class PlayerLoggerService {\n    constructor() {\n        this.intervalHandle = 0;\n        this.playerLogProcessor = new PlayerLogProcessor();\n        this.reset();\n    }\n    init(baseUrl, projectId) {\n        this.playerLogProcessor.init(baseUrl, projectId);\n    }\n    onStart(pulseToken, deviceType, localTimeDelta, isLive, onStopCallback) {\n        this.reset();\n        this.playSession = {\n            pulseToken,\n            deviceType,\n            eventStack: [],\n            localTimeDelta,\n            isLive,\n            onStopCallback,\n        };\n    }\n    onCurrentTimeUpdated(currentTime) {\n        this.playerProperties.playPosition = currentTime;\n        if (this.playerProperties.mediaDuration > 0 && this.playerProperties.state !== PlayingState.idle) {\n            this.logEvent(PlayerEventTypes.timeupdate);\n        }\n    }\n    onDurationUpdated(duration) {\n        this.playerProperties.mediaDuration = duration;\n    }\n    onPlaying() {\n        if (this.playerProperties.state !== PlayingState.playing) {\n            if (this.playerProperties.state === PlayingState.idle) {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playStart);\n                this.processPlaySession();\n                this.startInterval();\n            }\n            else {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playing);\n            }\n        }\n    }\n    onPause() {\n        if (this.playerProperties.state !== PlayingState.paused) {\n            this.playerProperties.state = PlayingState.paused;\n            this.logEvent(PlayerEventTypes.pause);\n        }\n    }\n    onError(error) {\n        if (this.playerProperties.state !== PlayingState.error) {\n            this.playerProperties.state = PlayingState.error;\n            this.playerProperties.error = error;\n            this.logEvent(PlayerEventTypes.error);\n        }\n    }\n    onStop() {\n        if (this.playerProperties.state !== PlayingState.idle) {\n            this.playerProperties.state = PlayingState.idle;\n            this.logEvent(PlayerEventTypes.stopped);\n            this.stopInterval();\n            this.processPlaySession();\n        }\n    }\n    onTextTrackChanged(textTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.textTrack = textTrack;\n        this.logEvent(PlayerEventTypes.textTrackChanged);\n    }\n    onAudioTrackChanged(audioTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.audioTrack = audioTrack;\n        this.logEvent(PlayerEventTypes.audioTrackChanged);\n    }\n    updateProperties(playerProperties) {\n        this.playerProperties = {\n            ...this.playerProperties,\n            ...playerProperties,\n        };\n    }\n    startInterval() {\n        this.stopInterval();\n        // @ts-ignore\n        this.intervalHandle = setInterval(() => {\n            this.processPlaySession();\n        }, 30000);\n    }\n    stopInterval() {\n        if (this.intervalHandle) {\n            clearInterval(this.intervalHandle);\n        }\n    }\n    processPlaySession() {\n        this.playerLogProcessor.processPlaySession({ ...this.playSession }, this.getTimeStamp());\n        this.playSession.eventStack = [];\n    }\n    logEvent(eventType) {\n        if (this.playSession) {\n            this.playSession.eventStack.push({\n                ...this.playerProperties,\n                eventType,\n                timeStamp: this.getTimeStamp(),\n            });\n        }\n    }\n    reset() {\n        this.playSession = null;\n        this.playerProperties = {\n            state: PlayingState.idle,\n            error: null,\n            mediaDuration: 0,\n            playPosition: 0,\n            audioTrack: null,\n            textTrack: null,\n        };\n    }\n    getTimeStamp() {\n        return Date.now() - (this.playSession ? this.playSession.localTimeDelta : 0);\n    }\n}\n","import { willPlayHls } from '../utils/platform';\nimport { PlayerLoggerService } from '../logging/player-logger-service';\nimport { PlayerDeviceTypes } from '../models/player';\nimport { getEmeOptionsFromEntitlement } from '../utils/eme';\nexport class VideoPlayer {\n    constructor() {\n        this.player = null;\n        this.playerLoggerService = new PlayerLoggerService();\n    }\n    init(selector, baseUrl, projectId, options) {\n        this.destroy();\n        this.firstPlayingEvent = true;\n        this.playerLoggerService.init(baseUrl, projectId);\n        const videoContainer = selector instanceof Element ? selector : document.querySelector(selector);\n        const videoElement = document.createElement('video');\n        videoElement.setAttribute('class', ['video-js', 'vjs-default-skin'].join(' '));\n        videoElement.setAttribute('tabIndex', '0');\n        videoElement.setAttribute('width', '100%');\n        videoElement.setAttribute('height', '100%');\n        videoContainer.appendChild(videoElement);\n        const playOptions = {\n            fluid: true,\n            autoplay: true,\n            controls: true,\n            controlBar: {\n                pictureInPictureToggle: false,\n                currentTimeDisplay: true,\n                durationDisplay: true,\n                timeDivider: false,\n                skipButtons: {\n                    forward: 5,\n                },\n                // order of elements:\n                children: [\n                    'playToggle',\n                    'volumeMenuButton',\n                    'currentTimeDisplay',\n                    //\"timeDivider\",\n                    'progressControl',\n                    'durationDisplay',\n                    'liveDisplay',\n                    //\"remainingTimeDisplay\",\n                    'customControlSpacer',\n                    'playbackRateMenuButton',\n                    'chaptersButton',\n                    'descriptionsButton',\n                    'subtitlesButton',\n                    'captionsButton',\n                    'audioTrackButton',\n                    'fullscreenToggle',\n                ],\n            },\n            aspectRatio: '16:9',\n            ...options,\n        };\n        this.player = videojs(videoElement, playOptions);\n        const vhs = this.player.tech().vhs;\n        this.player.eme();\n        this.bindEvents();\n    }\n    play(playConfig, posterUrl, fullscreen) {\n        this.articlePlayConfig = playConfig;\n        this.playerLoggerService.onStart(playConfig.pulseToken, PlayerDeviceTypes.default, playConfig.localTimeDelta, true);\n        const hlsSources = playConfig.entitlements.filter(entitlement => entitlement.type === 'application/vnd.apple.mpegurl');\n        const configureHLSOnly = willPlayHls() && hlsSources.length > 0; // make sure there is actually HLS\n        const playSources = playConfig.entitlements\n            .map(entitlement => {\n            const emeOptions = getEmeOptionsFromEntitlement(entitlement);\n            return {\n                src: entitlement.src,\n                type: entitlement.type,\n                ...emeOptions,\n            };\n        })\n            .filter(playOption => {\n            return (playOption.type === 'application/vnd.apple.mpegurl' && configureHLSOnly) || !configureHLSOnly;\n        });\n        this.player.src(playSources);\n        if (fullscreen) {\n            this.player.requestFullscreen();\n        }\n        if (!configureHLSOnly) {\n            // non HLS only needs the text tracks\n            playConfig.subtitles.forEach(track => {\n                this.player.addRemoteTextTrack({\n                    kind: track.kind,\n                    src: track.src,\n                    srclang: track.srclang,\n                    label: track.label,\n                    enabled: track.srclang === playConfig.subtitleLocale,\n                });\n            });\n        }\n    }\n    destroy() {\n        if (this.player) {\n            if (false === this.player.ended()) {\n                // only if we have not already caught the 'ended' event\n                // Be aware that the `stopped` emit also send along all kinds of info, so call _before_ disposing player\n                this.playerLoggerService.onStop();\n            }\n            this.player.dispose();\n        }\n    }\n    getPlayer() {\n        return this.player;\n    }\n    bindEvents() {\n        // same trick as azure media player; set label to language\n        this.player.on('loadeddata', () => {\n            const audioTracks = this.player.audioTracks();\n            for (let i = 0; i < audioTracks.length; i++) {\n                const element = audioTracks[i];\n                try {\n                    // readonly property in some cases\n                    element.label = element.language;\n                }\n                catch (e) { }\n            }\n        });\n        this.player.on('error', () => {\n            this.playerLoggerService.onError(JSON.stringify(this.player.error()));\n        });\n        this.player.on('playing', () => {\n            if (this.firstPlayingEvent) {\n                this.firstPlayingEvent = false;\n                if (this.articlePlayConfig.currentTime > 0) {\n                    this.player.currentTime(this.articlePlayConfig.currentTime);\n                }\n            }\n            this.checkSelectedTracks();\n            this.playerLoggerService.onPlaying();\n        });\n        this.player.on('pause', () => {\n            this.checkSelectedTracks();\n            if (this.player.paused() && !this.player.ended()) {\n                this.playerLoggerService.onPause();\n            }\n        });\n        this.player.on('ended', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onStop();\n        });\n        this.player.on('timeupdate', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onCurrentTimeUpdated(this.player.currentTime() || 0);\n        });\n        this.player.on('durationchange', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onDurationUpdated(this.player.duration());\n        });\n        this.player.on('loadedmetadata', () => {\n            const audioTrackList = this.player.audioTracks();\n            if (audioTrackList && audioTrackList.length > 0) {\n                // set default tracks when available\n                this.setDefaultAudioTrack();\n                this.setDefaultTextTrack();\n                this.metadataLoaded = true;\n            }\n            else {\n                // unfortunately there is no reliable way to know when iOS native binding to text-tracks is done\n                // (even after first play event, this is not true), so we resort to an old fashioned timeout\n                setTimeout(() => {\n                    this.setDefaultAudioTrack();\n                    this.setDefaultTextTrack();\n                    this.metadataLoaded = true;\n                }, 1000);\n            }\n        });\n    }\n    checkSelectedTracks() {\n        if (!this.metadataLoaded) {\n            return false;\n        }\n        let selectedAudioTrack = '';\n        let selectedTextTrack = '';\n        const tracks = this.player.textTracks();\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i].mode === 'showing' && tracks[i].kind === 'subtitles') {\n                selectedTextTrack = tracks[i].language;\n            }\n        }\n        const audioTracks = this.player.audioTracks();\n        for (let i = 0; i < audioTracks.length; i++) {\n            if (audioTracks[i].enabled) {\n                selectedAudioTrack = audioTracks[i].language;\n                break;\n            }\n        }\n        this.playerLoggerService.updateProperties({\n            textTrack: selectedTextTrack,\n            audioTrack: selectedAudioTrack,\n        });\n        if (this.currentTextTrack !== null && this.currentTextTrack !== selectedTextTrack) {\n            this.playerLoggerService.onTextTrackChanged(selectedTextTrack);\n        }\n        this.currentTextTrack = selectedTextTrack;\n        if (this.currentAudioTrack !== null && this.currentAudioTrack !== selectedAudioTrack) {\n            this.playerLoggerService.onAudioTrackChanged(selectedAudioTrack);\n        }\n        this.currentAudioTrack = selectedAudioTrack;\n    }\n    setDefaultTextTrack() {\n        if (this.articlePlayConfig.subtitleLocale) {\n            const tracks = this.player.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                // textTracks is not a real array so no iterators here\n                if (tracks[i].mode !== 'disabled') {\n                    tracks[i].mode = 'disabled';\n                }\n            }\n            // it must be split up in to two loops, because two 'showing' items will break\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i].language === this.articlePlayConfig.subtitleLocale.toLowerCase() && tracks[i].kind === 'subtitles') {\n                    tracks[i].mode = 'showing';\n                    break;\n                }\n            }\n        }\n    }\n    setDefaultAudioTrack() {\n        if (this.articlePlayConfig.audioLocale) {\n            const audioTracks = this.player.audioTracks();\n            for (let i = 0; i < audioTracks.length; i++) {\n                if ((this.articlePlayConfig.audioLocale && audioTracks[i].language === this.articlePlayConfig.audioLocale.toLowerCase()) ||\n                    (this.articlePlayConfig.audioLocale === '' && i === 0)) {\n                    audioTracks[i].enabled = true;\n                    break;\n                }\n            }\n        }\n    }\n}\n","import { parseUserAgent } from 'detect-browser';\nexport function willPlayHls() {\n    const browser = parseUserAgent(navigator.userAgent);\n    return browser && (browser.name === 'safari' || browser.name === 'ios');\n}\n","export function getEmeOptionsFromEntitlement(entitlement) {\n    let protectionInfo = null;\n    let emeOptions = {};\n    if (entitlement.protectionInfo) {\n        switch (entitlement.type) {\n            case 'application/dash+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'Widevine');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.widevine.alpha': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.ms-sstr+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'PlayReady');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.microsoft.playready': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.apple.mpegurl':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'FairPlay');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.apple.fps.1_0': {\n                                certificateUri: protectionInfo.certificateUrl,\n                                getContentId: function () {\n                                    return getHostnameFromUri(protectionInfo.keyDeliveryUrl);\n                                },\n                                getLicense: function (emeOptions, contentId, keyMessage, callback) {\n                                    const payload = 'spc=' + binaryToBase64(keyMessage) + '&assetId=' + encodeURIComponent(contentId);\n                                    videojs.xhr({\n                                        uri: protectionInfo.keyDeliveryUrl,\n                                        method: 'post',\n                                        headers: {\n                                            'Content-type': 'application/x-www-form-urlencoded',\n                                            Authorization: protectionInfo.authenticationToken,\n                                        },\n                                        body: payload,\n                                        responseType: 'arraybuffer',\n                                    }, videojs.xhr.httpHandler(function (err, response) {\n                                        callback(null, parseLicenseResponse(response));\n                                    }, true));\n                                },\n                            },\n                        },\n                    };\n                }\n                break;\n        }\n    }\n    return emeOptions;\n}\nexport function binaryToBase64(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = [];\n    for (let d = 0; d < a.byteLength;) {\n        let e = a[d++];\n        c.push(b.charAt(e >> 2)),\n            (e = (3 & e) << 4),\n            d < a.byteLength\n                ? (c.push(b.charAt(e | (a[d] >> 4))),\n                    (e = (15 & a[d++]) << 2),\n                    d < a.byteLength\n                        ? (c.push(b.charAt(e | (a[d] >> 6))), c.push(b.charAt(63 & a[d++])))\n                        : (c.push(b.charAt(e)), c.push('=')))\n                : (c.push(b.charAt(e)), c.push('=='));\n    }\n    return c.join('');\n}\nexport function base64ToBinary(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = new Uint8Array(new ArrayBuffer((3 * a.length) / 4 + 4)), e = 0;\n    for (let d = 0; d < a.length;) {\n        let f = b.indexOf(a.charAt(d)), g = b.indexOf(a.charAt(d + 1));\n        if (((c[e++] = (f << 2) | (g >> 4)), '=' !== a.charAt(d + 2))) {\n            let h = b.indexOf(a.charAt(d + 2));\n            if (((c[e++] = (g << 4) | (h >> 2)), '=' !== a.charAt(d + 3))) {\n                let i = b.indexOf(a.charAt(d + 3));\n                c[e++] = (h << 6) | i;\n            }\n        }\n        d += 4;\n    }\n    return new Uint8Array(c.buffer, 0, e);\n}\nexport function parseLicenseResponse(response) {\n    const responseBody = String.fromCharCode.apply(null, new Uint8Array(response));\n    let b = responseBody.trim(), c = b.indexOf('<ckc>'), d = b.indexOf('</ckc>');\n    if (-1 === c || -1 === d) {\n        throw Error('License data format not as expected, missing or misplaced <ckc> tag');\n    }\n    (c += 5), (b = b.substr(c, d - c));\n    return base64ToBinary(b);\n}\nexport function getHostnameFromUri(uri) {\n    let link = document.createElement('a');\n    link.href = uri;\n    return link.hostname;\n}\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nexport class ChromecastSender {\n    constructor() {\n        this.castContext = null;\n        this.castPlayer = null;\n        this.castPlayerController = null;\n    }\n    init(chromecastReceiverAppId) {\n        return new Promise((resolve, reject) => {\n            if (chromecastReceiverAppId) {\n                window['__onGCastApiAvailable'] = (isAvailable) => {\n                    if (isAvailable && cast && cast.framework) {\n                        this.initializeCastApi(chromecastReceiverAppId);\n                        //Some Chromecast configurations are taking some time to initialize\n                        setTimeout(() => {\n                            resolve();\n                        }, 1000);\n                    }\n                };\n                const scriptElement = document.createElement('script');\n                scriptElement.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';\n                document.head.appendChild(scriptElement);\n            }\n            else {\n                reject('Chromecast Receiver Application Id is missing');\n            }\n        });\n    }\n    initializeCastApi(chromecastReceiverAppId) {\n        cast.framework.CastContext.getInstance().setOptions({\n            receiverApplicationId: chromecastReceiverAppId,\n            autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n        });\n        this.castContext = cast.framework.CastContext.getInstance();\n        this.castPlayer = new cast.framework.RemotePlayer();\n        this.castPlayerController = new cast.framework.RemotePlayerController(this.castPlayer);\n    }\n    getCastMediaInfo(articlePlayConfig, article) {\n        if (articlePlayConfig && articlePlayConfig.entitlements && articlePlayConfig.entitlements.length > 0) {\n            const tracks = articlePlayConfig.subtitles.map((option, index) => {\n                const trackId = index + 1;\n                const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n                castTrack.trackContentId = option.src;\n                castTrack.trackContentType = 'text/vtt';\n                castTrack.subtype = chrome.cast.media.TextTrackType.SUBTITLES;\n                castTrack.name = option.label;\n                castTrack.language = option.srclang;\n                castTrack.customData = null;\n                return castTrack;\n            });\n            let contentType = null;\n            const supportedContentTypes = ['application/vnd.ms-sstr+xml', 'video/mp4'];\n            const entitlement = articlePlayConfig.entitlements.find(item => {\n                if (supportedContentTypes.includes(item.type)) {\n                    contentType = item.type;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n            let protectionConfig = null;\n            if (entitlement) {\n                if (entitlement.protectionInfo) {\n                    protectionConfig = entitlement.protectionInfo.find(protection => {\n                        return protection.type === 'PlayReady';\n                    });\n                }\n                const token = protectionConfig ? protectionConfig.authenticationToken : null;\n                const mediaInfo = new chrome.cast.media.MediaInfo(entitlement.src, contentType);\n                mediaInfo.streamType = chrome.cast.media.StreamType.BUFFERED;\n                mediaInfo.metadata = new chrome.cast.media.GenericMediaMetadata();\n                mediaInfo.metadata.metadataType = chrome.cast.media.MetadataType.GENERIC;\n                mediaInfo.metadata.title = article.title;\n                mediaInfo.tracks = tracks;\n                const licenceUrlParam = token\n                    ? {\n                        ...this.getLicenseUrlFromSrc(protectionConfig.keyDeliveryUrl, token),\n                    }\n                    : {};\n                const audieLocalePram = articlePlayConfig.audioLocale ? { preferredAudioLocale: articlePlayConfig.audioLocale } : {};\n                mediaInfo.customData = {\n                    ...licenceUrlParam,\n                    ...audieLocalePram,\n                    pulseToken: articlePlayConfig.pulseToken,\n                };\n                // @TODO\n                // mediaInfo.currentTime = articlePlayConfig.currentTime;\n                // mediaInfo.autoplay = true;\n                return mediaInfo;\n            }\n        }\n        return null;\n    }\n    getLicenseUrlFromSrc(src, token) {\n        if (token) {\n            const rootSrc = src.includes('?') ? `${src}&token=` : `${src}?token=`;\n            const licenseUrl = rootSrc + encodeURIComponent(token);\n            return {\n                licenseUrl,\n                token,\n            };\n        }\n        return {};\n    }\n    castVideo(playConfig, article, continueFromPreviousPosition) {\n        if (this.isConnected()) {\n            const castSession = this.castContext.getCurrentSession();\n            const mediaInfo = this.getCastMediaInfo(playConfig, article);\n            if (mediaInfo) {\n                const request = new chrome.cast.media.LoadRequest(mediaInfo);\n                request.currentTime = continueFromPreviousPosition ? playConfig.currentTime : 0;\n                if (playConfig.subtitleLocale) {\n                    // can NOT use .filter on tracks because the cast library has patched the Array.\n                    const textTrack = mediaInfo.tracks.find((track) => track.language === playConfig.subtitleLocale);\n                    if (textTrack) {\n                        request.activeTrackIds = [textTrack.trackId];\n                    }\n                }\n                return castSession.loadMedia(request);\n            }\n            else {\n                throw { message: 'Unexpected manifest format in articlePlayConfig' };\n            }\n        }\n    }\n    isConnected() {\n        return this.castPlayer && this.castPlayer.isConnected;\n    }\n    stopCasting() {\n        const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n        if (castSession) {\n            castSession.endSession(true);\n        }\n    }\n    getCastPlayer() {\n        return this.castPlayer;\n    }\n    getCastPlayerController() {\n        return this.castPlayerController;\n    }\n}\n","export function graphRequest(apiFetchUrl, query, variables, token) {\n    const authHeader = token ? { Authorization: 'Bearer ' + token } : {};\n    return fetch(apiFetchUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            ...authHeader,\n        },\n        body: JSON.stringify({\n            query,\n            variables,\n        }),\n    }).then(response => response.json());\n}\n","import { ArticlePlayErrors } from '../models/play-config';\nexport function toPlayConfig(config, continueFromPreviousPosition) {\n    const timeStamp = Date.parse(config.issued_at);\n    const entitlements = [];\n    // check if the entitlements contain FPS in order to know when to filter out aes\n    const filterAES = !!config.entitlements.find((entitlement) => entitlement.encryption_type === 'fps');\n    const configEntitlements = filterAES\n        ? config.entitlements.filter((entitlement) => {\n            return entitlement.encryption_type !== 'aes';\n        })\n        : config.entitlements;\n    const dashWidevine = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('dash') === 0);\n    const mssPlayReady = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('mss') === 0);\n    configEntitlements.forEach((configEntitlement) => {\n        const entitlement = {\n            src: configEntitlement.manifest,\n            type: configEntitlement.mime_type,\n            protectionInfo: null,\n        };\n        if (configEntitlement.token) {\n            entitlement.protectionInfo = [];\n            if (configEntitlement.encryption_type === 'cenc') {\n                if (!!dashWidevine) {\n                    entitlement.protectionInfo.push({\n                        type: 'Widevine',\n                        authenticationToken: 'Bearer ' + dashWidevine.token,\n                        keyDeliveryUrl: dashWidevine.key_delivery_url,\n                    });\n                }\n                if (!!mssPlayReady) {\n                    entitlement.protectionInfo.push({\n                        type: 'PlayReady',\n                        authenticationToken: 'Bearer=' + mssPlayReady.token,\n                        keyDeliveryUrl: mssPlayReady.key_delivery_url,\n                    });\n                }\n            }\n            else if (configEntitlement.encryption_type === 'fps') {\n                entitlement.protectionInfo = [\n                    {\n                        type: 'FairPlay',\n                        authenticationToken: 'Bearer ' + configEntitlement.token,\n                        certificateUrl: config.fairplay_certificate_url,\n                        keyDeliveryUrl: configEntitlement.key_delivery_url,\n                    },\n                ];\n            }\n        }\n        entitlements.push(entitlement);\n    });\n    const subtitles = config.subtitles.map((item) => ({\n        src: item.url,\n        srclang: item.locale,\n        kind: 'subtitles',\n        label: item.locale_label,\n    }));\n    return {\n        entitlements: entitlements,\n        subtitles: subtitles,\n        pulseToken: config.pulse_token,\n        currentTime: continueFromPreviousPosition ? config.appa : 0,\n        subtitleLocale: config.user_subtitle_locale,\n        audioLocale: config.user_audio_locale,\n        localTimeDelta: isNaN(timeStamp) ? 0 : Date.now() - timeStamp,\n    };\n}\nexport function toArticle(article, assetId) {\n    const asset = article.assets.find((item) => item.id === assetId);\n    return {\n        title: getMetaValue(article.metas, 'title') || article.name,\n        asset: {\n            linkedType: asset.linked_type,\n        },\n    };\n}\nexport function getMetaValue(metas, key) {\n    const meta = metas.find((m) => m.key === key);\n    return meta ? meta.value : '';\n}\nexport function toPlayConfigError(code) {\n    switch (code) {\n        case 0:\n            return ArticlePlayErrors.offlineError;\n        case 401:\n            return ArticlePlayErrors.notAuthenticated;\n        case 402:\n            return ArticlePlayErrors.needEntitlement;\n        case 403:\n            return ArticlePlayErrors.notAuthenticated;\n        case 404:\n            return ArticlePlayErrors.noPlayableAsset;\n        case 429:\n            return ArticlePlayErrors.maxConcurrentStreamNumberError;\n        default:\n            return ArticlePlayErrors.serverError;\n    }\n}\n","import { graphRequest } from './graph-request';\nimport { articleAssetPlayMutation, articleQuery } from './queries';\nimport { toArticle, toPlayConfig } from './converters';\nexport class ApiService {\n    init(baseUrl, projectId) {\n        this.apiFetchUrl = `${baseUrl}/graphql/${projectId}`.replace(/\\/*$/, '');\n        this.token = null;\n    }\n    setToken(token) {\n        this.token = token;\n    }\n    getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition) {\n        return graphRequest(this.apiFetchUrl, articleAssetPlayMutation, { articleId, assetId, protocols: ['dash', 'mss', 'hls'] }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code }; // @TODO to play config error\n            }\n            return toPlayConfig(response.data.ArticleAssetPlay, continueFromPreviousPosition);\n        });\n    }\n    getArticle(articleId, assetId) {\n        return graphRequest(this.apiFetchUrl, articleQuery, { articleId }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code };\n            }\n            return toArticle(response.data.Article, assetId);\n        });\n    }\n}\n","export const articleAssetPlayMutation = `\n    mutation ArticleAssetPlay($articleId: Int, $assetId: Int, $protocols: [ArticlePlayProtocolEnum]) {\n        ArticleAssetPlay(article_id: $articleId, asset_id: $assetId, protocols: $protocols) {\n            article_id\n            asset_id\n            entitlements {\n                mime_type\n                protocol\n                manifest\n                token\n                encryption_type\n                key_delivery_url\n            }\n            subtitles {\n                url\n                locale\n                locale_label\n            }\n            pulse_token\n            appa\n            appr\n            fairplay_certificate_url\n            user_subtitle_locale\n            user_audio_locale\n            issued_at\n        }\n    }\n`;\nexport const articleQuery = `\n    query Article($articleId: Int!) {\n        Article(id: $articleId) {\n            id\n            name\n            metas {\n                key\n                value\n            }\n            assets {\n                id\n                duration\n                linked_type\n                accessibility\n            }\n            posters {\n                type\n                url\n                title\n                base_url\n                file_name\n            }\n        }\n    }\n`;\n","import { VideoPlayer } from './video-player/video-player';\nimport { ChromecastSender } from './chromecast/chromecast-sender';\nimport { ApiService } from './api/api-service';\nimport { toPlayConfigError } from './api/converters';\nexport class EmbedPlayer {\n    constructor() {\n        this.videoPlayer = new VideoPlayer();\n        this.castSender = new ChromecastSender();\n        this.apiService = new ApiService();\n    }\n    initPlayer(selector) {\n        this.destroy();\n    }\n    play({ selector, apiBaseUrl, projectId, articleId, assetId, token, posterImageUrl, autoplay, fullScreen, continueFromPreviousPosition, }) {\n        if (!selector) {\n            return Promise.reject('selector property is missing');\n        }\n        if (!apiBaseUrl) {\n            return Promise.reject('apiBaseUrl property is missing');\n        }\n        if (!articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        if (!projectId) {\n            return Promise.reject('projectId property is missing');\n        }\n        this.apiService.init(apiBaseUrl, projectId);\n        this.apiService.setToken(token);\n        this.videoPlayer.init(selector, apiBaseUrl, projectId, { autoplay, poster: posterImageUrl });\n        return this.apiService\n            .getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition)\n            .then(config => {\n            this.playVideo(config, posterImageUrl, fullScreen);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    destroy() {\n        this.videoPlayer.destroy();\n    }\n    playVideo(config, posterImageUrl, fullScreen) {\n        this.videoPlayer.play(config, posterImageUrl, fullScreen);\n    }\n    setupChromecast(selector, chromecastReceiverAppId) {\n        const castButtonContaner = selector instanceof Element ? selector : document.querySelector(selector);\n        const castButton = document.createElement('google-cast-launcher');\n        castButtonContaner.appendChild(castButton);\n        return this.castSender.init(chromecastReceiverAppId);\n    }\n    castVideo({ apiBaseUrl, projectId, articleId, assetId, token, continueFromPreviousPosition }) {\n        if (!apiBaseUrl) {\n            return Promise.reject('apiBaseUrl property is missing');\n        }\n        if (!articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        if (!projectId) {\n            return Promise.reject('projectId property is missing');\n        }\n        this.apiService.init(apiBaseUrl, projectId);\n        this.apiService.setToken(token);\n        return Promise.all([\n            this.apiService.getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition),\n            this.apiService.getArticle(articleId, assetId),\n        ])\n            .then(([config, article]) => {\n            this.castSender.castVideo(config, article, continueFromPreviousPosition);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    getCastPlayer() {\n        return this.castSender.getCastPlayer();\n    }\n    getCastPlayerController() {\n        return this.castSender.getCastPlayerController();\n    }\n    isConnected() {\n        return this.castSender.isConnected();\n    }\n    stopCasting() {\n        this.castSender.stopCasting();\n    }\n}\n//*** Example of usage ***//\n// const player = new EmbeddablePlayer();\n//\n// player\n//     .play({\n//         selector: '.video-wrapper',\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         posterImageUrl: '',\n//         fullScreen: false\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n//*** Example of usage with chromecast ***//\n// const player = new EmbeddablePlayer();\n// player.setupChromecast(\"#cast-wrapper\", CHROMECAST_RECEIVER_APP_ID);\n//\n// player\n//     .castVideo({\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nexport class ChromecastControls {\n    constructor(player, controller, selector) {\n        this.player = player;\n        this.playerController = controller;\n        this.controlInitialized = false;\n        this.totalDuration = player.duration || 0;\n        this.currentTime = player.currentTime || 0;\n        this.currentStatus = player.playerState;\n        this.createChromecastControlsTemplate(selector);\n        this.bindEvents();\n        this.setPlayButtonClass();\n        this.bindEventsToControls();\n        this.setProgressBarValues();\n        this.setTitle();\n    }\n    bindEvents() {\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.MEDIA_INFO_CHANGED, () => {\n            if (this.rootElement && this.player.mediaInfo) {\n                this.renderTracks();\n                this.renderTracksButton();\n                this.setTitle();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentTime = e.value;\n                this.totalDuration = this.player.duration;\n                this.setProgressBarValues();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentStatus = e.value;\n                this.checkChromecastContainerVisibility();\n                this.setPlayButtonClass();\n                this.setProgressBarValues();\n            }\n        });\n        this.checkChromecastContainerVisibility();\n    }\n    createChromecastControlsTemplate(selector) {\n        const chromecastControlsTemplateString = `\n            <div class=\"chromecast-controls\">\n               <div class=\"chromecast-controls__title\"></div>\n               <div class=\"chromecast-controls__progress-bar\">\n                 <div class=\"chromecast-controls__progress-bar__current\"></div>\n                 <input type=\"range\"\n                        value=\"0\"\n                        class=\"chromecast-controls__progress-bar__slider\" \n                        min=\"0\"\n                        max=\"100\"/>\n                 <div class=\"chromecast-controls__progress-bar__total\"></div>\n               </div>\n              <div class=\"chromecast-controls__buttons\">\n                <button class=\"control-button button__play play-pause-button\" type=\"button\"></button>\n                <button class=\"control-button button__stop\" type=\"button\"></button>\n                <div class=\"buttons-container tracks-button-container\" style=\"display: none\">\n                  <button class=\"control-button button__audio-tracks\" type=\"button\"></button>\n                  <div class=\"chromecast-controls__subtitles\" style=\"display: none\">\n                      <div class=\"chromecast-controls__subtitles__close-icon\">&#215;</div>\n                      <div class=\"container-wrapper container-wrapper_audio-tracks\">\n                        <div class=\"list-title\">Audio tracks</div>\n                      </div>\n                      <div class=\"container-wrapper container-wrapper_text-tracks\">\n                        <div class=\"list-title\">Text tracks</div>\n                      </div>\n                  </div>\n                </div>\n               </div>\n            </div>\n        `;\n        const element = !!selector ? document.querySelector(selector) : document.body;\n        element.insertAdjacentHTML('beforeend', chromecastControlsTemplateString);\n        this.rootElement = element.querySelector('.chromecast-controls');\n        this.rootElement.querySelector('.button__audio-tracks').addEventListener('click', () => this.toggleTracksDialogue());\n        this.rootElement\n            .querySelector('.chromecast-controls__subtitles__close-icon')\n            .addEventListener('click', () => this.toggleTracksDialogue());\n        this.rootElement.querySelector('.chromecast-controls__progress-bar__slider').addEventListener('input', event => {\n            this.seek(event.target.value);\n        });\n    }\n    setPlayButtonClass() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        if (this.currentStatus === chrome.cast.media.PlayerState.PAUSED) {\n            playAndPauseButton.classList.replace('button__pause', 'button__play');\n        }\n        else {\n            playAndPauseButton.classList.replace('button__play', 'button__pause');\n        }\n    }\n    bindEventsToControls() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        const stopButton = this.getElement('.button__stop');\n        if (!this.controlInitialized) {\n            playAndPauseButton.addEventListener('click', () => this.playPause());\n            stopButton.addEventListener('click', () => this.stop());\n            this.controlInitialized = true;\n        }\n    }\n    renderTracksButton() {\n        const tracksButtonContainerElement = this.getElement('.tracks-button-container');\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        let audioTracks = [];\n        let textTracks = [];\n        if (this.player.mediaInfo && this.player.mediaInfo.tracks && sessionMediaInfo) {\n            audioTracks = this.getTracksByType('AUDIO');\n            textTracks = this.getTracksByType('TEXT');\n        }\n        if (audioTracks.length || textTracks.length) {\n            tracksButtonContainerElement.style.display = 'unset';\n        }\n        else {\n            tracksButtonContainerElement.style.display = 'none';\n        }\n    }\n    renderTracks() {\n        this.removeTracks();\n        const audioTracksContainerElement = this.getElement('.container-wrapper_audio-tracks');\n        const textTracksContainerElement = this.getElement('.container-wrapper_text-tracks');\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        let audioTracks = [];\n        let textTracks = [];\n        if (this.player.mediaInfo && this.player.mediaInfo.tracks && sessionMediaInfo) {\n            audioTracks = this.getTracksByType('AUDIO');\n            textTracks = this.getTracksByType('TEXT');\n        }\n        if (audioTracks.length) {\n            audioTracksContainerElement.appendChild(this.getTracksList(audioTracks, 'AUDIO'));\n        }\n        if (textTracks.length) {\n            textTracksContainerElement.appendChild(this.getTracksList(textTracks, 'TEXT'));\n        }\n    }\n    removeTracks() {\n        const tracksListElements = this.rootElement.getElementsByClassName('list-container');\n        if (tracksListElements.length) {\n            Array.from(tracksListElements).forEach(element => {\n                element.remove();\n            });\n        }\n    }\n    toggleTracksDialogue() {\n        const tracksContainer = this.getElement('.chromecast-controls__subtitles');\n        if (tracksContainer.style.display === 'none') {\n            this.renderTracks();\n            tracksContainer.style.display = 'unset';\n        }\n        else {\n            tracksContainer.style.display = 'none';\n            this.removeTracks();\n        }\n    }\n    getTracksList(tracks, type) {\n        const tracksListElement = document.createElement('ul');\n        tracksListElement.classList.add('list-container');\n        tracksListElement.addEventListener('click', event => this.setActiveTrack(event, type === 'AUDIO' ? 'AUDIO' : 'TEXT'));\n        tracks.forEach(track => {\n            const listItemElement = document.createElement('li');\n            listItemElement.classList.add('list-item');\n            if (track.active) {\n                listItemElement.classList.add('active');\n            }\n            else {\n                listItemElement.classList.remove('active');\n            }\n            listItemElement.innerText = track.locale;\n            listItemElement.value = track.id;\n            tracksListElement.appendChild(listItemElement);\n        });\n        return tracksListElement;\n    }\n    getActiveTracksByType(type) {\n        return this.getTracksByType(type)\n            .filter(track => track.active)\n            .map(track => track.id);\n    }\n    getTracksByType(type) {\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        return this.player.mediaInfo.tracks\n            .filter(track => track.type === type)\n            .map(track => ({\n            id: track.trackId,\n            locale: track.language,\n            active: sessionMediaInfo.activeTrackIds && sessionMediaInfo.activeTrackIds.indexOf(track.trackId) !== -1,\n        }));\n    }\n    setTitle() {\n        if (this.player.mediaInfo) {\n            const titleElement = this.getElement('.chromecast-controls__title');\n            titleElement.innerText = this.player.mediaInfo.metadata.title;\n        }\n    }\n    getTransformedDurationValue(value) {\n        const hours = Math.floor(value / 3600);\n        const minutes = Math.floor((value - hours * 3600) / 60);\n        const seconds = Math.round(value - hours * 3600 - minutes * 60);\n        let result = '';\n        if (!value && value === 0) {\n            return '-';\n        }\n        if (hours > 0) {\n            result = hours + ':';\n            if (minutes < 10) {\n                result += '0';\n            }\n        }\n        result += minutes + ':';\n        if (seconds < 10) {\n            result += '0';\n        }\n        return result + seconds;\n    }\n    setProgressBarValues() {\n        if (this.rootElement) {\n            const currentTimeElement = this.getElement('.chromecast-controls__progress-bar__current');\n            const totalTimeElement = this.getElement('.chromecast-controls__progress-bar__total');\n            const progressBarElement = this.getElement('.chromecast-controls__progress-bar__slider');\n            currentTimeElement.innerText = this.getTransformedDurationValue(this.currentTime);\n            totalTimeElement.innerText = this.getTransformedDurationValue(this.totalDuration);\n            progressBarElement.max = this.totalDuration;\n            progressBarElement.value = this.currentTime;\n        }\n    }\n    checkChromecastContainerVisibility() {\n        if (this.currentStatus === chrome.cast.media.PlayerState.IDLE) {\n            this.rootElement.style.display = 'none';\n        }\n        else {\n            this.rootElement.style.display = 'block';\n        }\n    }\n    playPause() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.playOrPause();\n        }\n    }\n    seek(newTime) {\n        if (this.player && this.player.isConnected) {\n            this.player.currentTime = newTime;\n            this.playerController.seek();\n        }\n    }\n    stop() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.stop();\n        }\n    }\n    setActiveTrack(event, type) {\n        if (event.target instanceof HTMLLIElement && event.target.nodeName === 'LI') {\n            event.stopPropagation();\n            const selectedTrackId = event.target.value;\n            const activeTracks = this.getActiveTracksByType(type === 'AUDIO' ? 'TEXT' : 'AUDIO');\n            if (selectedTrackId > 0 && activeTracks.indexOf(selectedTrackId) === -1) {\n                activeTracks.push(selectedTrackId);\n            }\n            this.setActiveTracks(activeTracks);\n        }\n    }\n    setActiveTracks(trackIds) {\n        if (this.player && this.player.isConnected) {\n            const media = cast.framework.CastContext.getInstance()\n                .getCurrentSession()\n                .getMediaSession();\n            const tracksInfoRequest = new chrome.cast.media.EditTracksInfoRequest(trackIds);\n            media.editTracksInfo(tracksInfoRequest, () => {\n                this.toggleTracksDialogue();\n            }, (error) => console.error('ChromeCast', error));\n        }\n    }\n    getElement(selector) {\n        return this.rootElement.querySelector(selector);\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","PlayingState","PlayerEventTypes","PlayerDeviceTypes","PlayerEventTypePayloads","PulseMode","ArticlePlayErrors","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","slice","concat","BrowserInfo","name","version","os","this","type","SearchBotDeviceInfo","bot","BotInfo","SEARCHBOT_OS_REGEX","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","_a","browser","regex","uaMatch","exec","matchUserAgent","match","versionParts","split","join","count","output","ii","push","createVersionParts","detectOS","searchBotMatch","PlayerLogProcessor","constructor","playLogs","apiCallInProgress","intervalHandle","init","baseUrl","projectId","apiUrl","replace","setInterval","processFirstPlayLog","processPlaySession","playSession","timeStamp","eventStack","eventStackPayload","sumDelta","lastEventWasProcessed","currentEvent","isEventTypeWithoutTimeDelta","eventType","convertEventToEventPayload","previousEvent","state","createDeltaEventPayload","lastEvent","lastLogEvent","splice","MAX_EVENTS","event_type","error","event_payload","playLogPayload","getPlayerLogPayloadWithPulseToken","pulseToken","event_stack","pulse_token","pulse_mode","isLive","live","offline","device_type","deviceType","forEach","e","processPlayLog","currentLog","removePlayLog","logToSend","eventStackIndex","isStopCutOff","stop","fetch","method","headers","Accept","body","JSON","stringify","then","catch","status","response","archive","find","log","logPayload","index","findIndex","textTrackChanged","audioTrackChanged","playStart","indexOf","createBaseEventPayload","playerEvent","timestamp","appa","playPosition","appr","Math","min","mediaDuration","play","convertEventTypeToEventTypePayload","baseEvent","audio_locale","audioTrack","subtitle_locale","textTrack","timeDelta","getEventTypePayloadFromEventState","time_delta","playing","paused","buffering","loading","idle","configure","PlayerLoggerService","playerLogProcessor","reset","onStart","localTimeDelta","onStopCallback","onCurrentTimeUpdated","currentTime","playerProperties","logEvent","timeupdate","onDurationUpdated","duration","onPlaying","startInterval","onPause","pause","onError","onStop","stopped","stopInterval","onTextTrackChanged","onAudioTrackChanged","updateProperties","clearInterval","getTimeStamp","Date","now","VideoPlayer","player","playerLoggerService","selector","options","destroy","firstPlayingEvent","videoContainer","Element","document","querySelector","videoElement","createElement","setAttribute","appendChild","playOptions","fluid","autoplay","controls","controlBar","pictureInPictureToggle","currentTimeDisplay","durationDisplay","timeDivider","skipButtons","forward","children","aspectRatio","videojs","tech","vhs","eme","bindEvents","playConfig","posterUrl","fullscreen","articlePlayConfig","default","hlsSources","entitlements","filter","entitlement","configureHLSOnly","navigator","userAgent","willPlayHls","playSources","map","emeOptions","protectionInfo","p","keySystems","keyDeliveryUrl","emeHeaders","Authorization","authenticationToken","certificateUri","certificateUrl","getContentId","uri","link","href","hostname","getHostnameFromUri","getLicense","contentId","keyMessage","callback","payload","a","b","c","d","byteLength","charAt","binaryToBase64","encodeURIComponent","xhr","responseType","httpHandler","err","String","fromCharCode","apply","Uint8Array","trim","Error","substr","ArrayBuffer","f","g","h","buffer","base64ToBinary","parseLicenseResponse","getEmeOptionsFromEntitlement","src","playOption","requestFullscreen","subtitles","track","addRemoteTextTrack","kind","srclang","label","enabled","subtitleLocale","ended","dispose","getPlayer","on","audioTracks","element","language","checkSelectedTracks","audioTrackList","setDefaultAudioTrack","setDefaultTextTrack","metadataLoaded","setTimeout","selectedAudioTrack","selectedTextTrack","tracks","textTracks","mode","currentTextTrack","currentAudioTrack","toLowerCase","audioLocale","ChromecastSender","castContext","castPlayer","castPlayerController","chromecastReceiverAppId","Promise","resolve","reject","window","isAvailable","cast","framework","initializeCastApi","scriptElement","head","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","chrome","AutoJoinPolicy","ORIGIN_SCOPED","RemotePlayer","RemotePlayerController","getCastMediaInfo","article","option","trackId","castTrack","media","Track","TrackType","TEXT","trackContentId","trackContentType","subtype","TextTrackType","SUBTITLES","customData","contentType","supportedContentTypes","item","includes","protectionConfig","protection","token","mediaInfo","MediaInfo","streamType","StreamType","BUFFERED","metadata","GenericMediaMetadata","metadataType","MetadataType","GENERIC","title","licenceUrlParam","getLicenseUrlFromSrc","audieLocalePram","preferredAudioLocale","licenseUrl","castVideo","continueFromPreviousPosition","isConnected","castSession","getCurrentSession","request","LoadRequest","activeTrackIds","loadMedia","message","stopCasting","endSession","getCastPlayer","getCastPlayerController","graphRequest","apiFetchUrl","query","variables","json","getMetaValue","metas","meta","m","value","toPlayConfigError","code","offlineError","notAuthenticated","needEntitlement","noPlayableAsset","maxConcurrentStreamNumberError","serverError","ApiService","setToken","getArticleAssetPlayConfig","articleId","assetId","protocols","data","errors","config","parse","issued_at","configEntitlements","encryption_type","dashWidevine","protocol","mssPlayReady","configEntitlement","manifest","mime_type","key_delivery_url","fairplay_certificate_url","url","locale","locale_label","user_subtitle_locale","user_audio_locale","isNaN","toPlayConfig","ArticleAssetPlay","getArticle","asset","assets","id","linkedType","linked_type","toArticle","Article","EmbedPlayer","videoPlayer","castSender","apiService","initPlayer","apiBaseUrl","posterImageUrl","fullScreen","poster","playVideo","console","setupChromecast","castButtonContaner","castButton","all","ChromecastControls","controller","playerController","controlInitialized","totalDuration","currentStatus","playerState","createChromecastControlsTemplate","setPlayButtonClass","bindEventsToControls","setProgressBarValues","setTitle","addEventListener","RemotePlayerEventType","MEDIA_INFO_CHANGED","rootElement","renderTracks","renderTracksButton","CURRENT_TIME_CHANGED","PLAYER_STATE_CHANGED","checkChromecastContainerVisibility","insertAdjacentHTML","toggleTracksDialogue","event","seek","target","playAndPauseButton","getElement","PlayerState","PAUSED","classList","stopButton","playPause","tracksButtonContainerElement","sessionMediaInfo","getMediaSession","getTracksByType","style","display","removeTracks","audioTracksContainerElement","textTracksContainerElement","getTracksList","tracksListElements","getElementsByClassName","remove","tracksContainer","tracksListElement","add","setActiveTrack","listItemElement","active","innerText","getActiveTracksByType","getTransformedDurationValue","hours","floor","minutes","seconds","round","result","currentTimeElement","totalTimeElement","progressBarElement","max","IDLE","playOrPause","newTime","HTMLLIElement","nodeName","stopPropagation","selectedTrackId","activeTracks","setActiveTracks","trackIds","tracksInfoRequest","EditTracksInfoRequest","editTracksInfo"],"sourceRoot":""}