{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://audienceplayer-embed-player/webpack/bootstrap","webpack://audienceplayer-embed-player/./src/models/player.ts","webpack://audienceplayer-embed-player/webpack/runtime/define property getters","webpack://audienceplayer-embed-player/webpack/runtime/hasOwnProperty shorthand","webpack://audienceplayer-embed-player/./src/utils/platform.ts","webpack://audienceplayer-embed-player/./src/logging/player-log-processor.ts","webpack://audienceplayer-embed-player/./src/logging/player-logger-service.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/playback-rate-button.ts","webpack://audienceplayer-embed-player/./src/utils/locale.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/audio-track-button.ts","webpack://audienceplayer-embed-player/./src/video-player/hotkeys.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/subtitles-button.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/chromecast-button.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/overlay.ts","webpack://audienceplayer-embed-player/./src/video-player/plugins/custom-overlay.ts","webpack://audienceplayer-embed-player/./src/video-player/video-player.ts","webpack://audienceplayer-embed-player/./src/utils/eme.ts","webpack://audienceplayer-embed-player/./src/models/play-config.ts","webpack://audienceplayer-embed-player/./src/api/converters.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-sender.ts","webpack://audienceplayer-embed-player/./src/api/graph-request.ts","webpack://audienceplayer-embed-player/./src/api/api-service.ts","webpack://audienceplayer-embed-player/./src/api/queries.ts","webpack://audienceplayer-embed-player/./src/embed-player.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-controls.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export var PlayingState;\n(function (PlayingState) {\n    PlayingState[PlayingState[\"loading\"] = 0] = \"loading\";\n    PlayingState[PlayingState[\"playing\"] = 1] = \"playing\";\n    PlayingState[PlayingState[\"paused\"] = 2] = \"paused\";\n    PlayingState[PlayingState[\"idle\"] = 3] = \"idle\";\n    PlayingState[PlayingState[\"buffering\"] = 4] = \"buffering\";\n    PlayingState[PlayingState[\"error\"] = 5] = \"error\";\n})(PlayingState || (PlayingState = {}));\nexport class PlayerLogPayload {\n}\n// generic abstraction of player events that are taken from the video player, Chromecast and mobile implementations\nexport var PlayerEventTypes;\n(function (PlayerEventTypes) {\n    PlayerEventTypes[\"playStart\"] = \"playStart\";\n    PlayerEventTypes[\"playing\"] = \"playing\";\n    PlayerEventTypes[\"pause\"] = \"pause\";\n    PlayerEventTypes[\"error\"] = \"error\";\n    PlayerEventTypes[\"stopped\"] = \"stopped\";\n    PlayerEventTypes[\"timeupdate\"] = \"timeupdate\";\n    PlayerEventTypes[\"textTrackChanged\"] = \"textTrackChanged\";\n    PlayerEventTypes[\"audioTrackChanged\"] = \"audioTrackChanged\";\n})(PlayerEventTypes || (PlayerEventTypes = {}));\nexport var PlayerDeviceTypes;\n(function (PlayerDeviceTypes) {\n    PlayerDeviceTypes[\"chromecast\"] = \"chromecast\";\n    PlayerDeviceTypes[\"default\"] = \"\";\n})(PlayerDeviceTypes || (PlayerDeviceTypes = {}));\nexport var PlayerEventTypePayloads;\n(function (PlayerEventTypePayloads) {\n    PlayerEventTypePayloads[\"play\"] = \"play\";\n    PlayerEventTypePayloads[\"playing\"] = \"playing\";\n    PlayerEventTypePayloads[\"paused\"] = \"paused\";\n    PlayerEventTypePayloads[\"stop\"] = \"stop\";\n    PlayerEventTypePayloads[\"error\"] = \"error\";\n    PlayerEventTypePayloads[\"configure\"] = \"configure\";\n})(PlayerEventTypePayloads || (PlayerEventTypePayloads = {}));\nexport var PulseMode;\n(function (PulseMode) {\n    PulseMode[\"live\"] = \"live\";\n    PulseMode[\"archive\"] = \"archive\";\n    PulseMode[\"offline\"] = \"offline\";\n})(PulseMode || (PulseMode = {}));\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function supportsNativeHLS() {\n    return videojs.browser.IS_ANY_SAFARI && videojs.browser.IS_IOS;\n}\nexport function supportsHLS() {\n    return videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS;\n}\n","import { PlayerEventTypePayloads, PlayerEventTypes, PlayingState, PulseMode, } from '../models/player';\nconst MAX_EVENTS = 30;\nexport class PlayerLogProcessor {\n    constructor(baseUrl, projectId) {\n        this.playLogs = [];\n        this.apiCallInProgress = false;\n        this.intervalHandle = null;\n        this.apiUrl = `${baseUrl}/service/${projectId}/analytics/stream/pulse/log`.replace(/\\/*$/, '');\n    }\n    init() {\n        if (this.intervalHandle === null) {\n            this.intervalHandle = setInterval(() => {\n                this.processFirstPlayLog();\n            }, 3000);\n        }\n    }\n    destroy() {\n        if (this.intervalHandle) {\n            clearInterval(this.intervalHandle);\n        }\n        this.intervalHandle = null;\n    }\n    processPlaySession(playSession, timeStamp) {\n        if (!playSession) {\n            return;\n        }\n        const eventStack = playSession.eventStack;\n        if (eventStack.length === 0) {\n            return;\n        }\n        const eventStackPayload = [];\n        let i = 0, sumDelta = 0, lastEventWasProcessed = false;\n        while (i < eventStack.length) {\n            const currentEvent = eventStack[i];\n            if (this.isEventTypeWithoutTimeDelta(currentEvent.eventType)) {\n                // directly process these events. they have no sumDelta and do not affect the play state\n                eventStackPayload.push(this.convertEventToEventPayload(currentEvent));\n                lastEventWasProcessed = true;\n            }\n            else {\n                lastEventWasProcessed = false;\n                if (i - 1 >= 0) {\n                    const previousEvent = eventStack[i - 1];\n                    sumDelta += currentEvent.timeStamp - previousEvent.timeStamp;\n                    if (currentEvent.state !== previousEvent.state) {\n                        eventStackPayload.push(this.createDeltaEventPayload(previousEvent, previousEvent.timeStamp, sumDelta));\n                        sumDelta = 0;\n                    }\n                }\n            }\n            i++;\n        }\n        const lastEvent = eventStack[eventStack.length - 1];\n        if (sumDelta > 0 || !lastEventWasProcessed) {\n            eventStackPayload.push(this.createDeltaEventPayload(lastEvent, timeStamp, sumDelta));\n        }\n        if (eventStackPayload.length > 0) {\n            if (eventStackPayload.length > MAX_EVENTS) {\n                // if event stack too big, add error with runaway info and slice nr of items\n                const lastLogEvent = eventStackPayload[eventStackPayload.length - 1];\n                eventStackPayload.splice(MAX_EVENTS - 1);\n                lastLogEvent.event_type = PlayerEventTypePayloads.error;\n                lastLogEvent.event_payload = '{\"code\": 429, \"message\": \"Too many events\"}'; // runaway\n                eventStackPayload.push(lastLogEvent);\n            }\n            // check if there is already a log for this session\n            let playLogPayload = this.getPlayerLogPayloadWithPulseToken(playSession.pulseToken);\n            if (!playLogPayload) {\n                playLogPayload = {\n                    event_stack: [],\n                    pulse_token: playSession.pulseToken,\n                    pulse_mode: playSession.isLive ? PulseMode.live : PulseMode.offline,\n                    device_type: playSession.deviceType,\n                };\n                this.playLogs.push(playLogPayload);\n            }\n            // keep the event_stack pointer in tact by using push\n            eventStackPayload.forEach(e => playLogPayload.event_stack.push(e));\n            this.processPlayLog(playLogPayload, playSession);\n        }\n    }\n    processFirstPlayLog() {\n        if (this.playLogs.length > 0) {\n            this.processPlayLog(this.playLogs[0], null);\n        }\n    }\n    processPlayLog(currentLog, playSession) {\n        if (!currentLog || this.apiCallInProgress) {\n            return;\n        }\n        if (currentLog.event_stack.length === 0) {\n            this.removePlayLog(currentLog);\n            return;\n        }\n        const logToSend = {\n            ...currentLog,\n            event_stack: [],\n        };\n        let eventStackIndex = 0, isStopCutOff = false;\n        while (eventStackIndex < currentLog.event_stack.length && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            const currentEvent = currentLog.event_stack[eventStackIndex];\n            eventStackIndex++;\n            logToSend.event_stack.push(currentEvent);\n            if (currentEvent.event_type === PlayerEventTypePayloads.stop) {\n                isStopCutOff = true;\n            }\n        }\n        // for offline logging, always accumulate until MAX_EVENTS before sending unless it's a stop cut off.\n        if (logToSend.pulse_mode === PulseMode.offline && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            return;\n        }\n        // transaction start\n        this.apiCallInProgress = true;\n        return fetch(this.apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            },\n            body: JSON.stringify(logToSend),\n        })\n            .then(() => {\n            return true;\n        })\n            .catch(error => {\n            return error.status !== 0;\n        })\n            .then(response => {\n            if (response) {\n                currentLog.event_stack.splice(0, eventStackIndex);\n                if (currentLog.event_stack.length === 0) {\n                    this.removePlayLog(currentLog);\n                }\n            }\n            else {\n                currentLog.pulse_mode = PulseMode.archive;\n            }\n            this.apiCallInProgress = false;\n        });\n    }\n    getPlayerLogPayloadWithPulseToken(pulseToken) {\n        return this.playLogs.find(log => log.pulse_token === pulseToken);\n    }\n    removePlayLog(logPayload) {\n        const index = this.playLogs.findIndex(log => log.pulse_token === logPayload.pulse_token);\n        if (index >= 0) {\n            this.playLogs.splice(index, 1);\n        }\n    }\n    isEventTypeWithoutTimeDelta(eventType) {\n        return [PlayerEventTypes.textTrackChanged, PlayerEventTypes.audioTrackChanged, PlayerEventTypes.playStart].indexOf(eventType) >= 0;\n    }\n    createBaseEventPayload(playerEvent, eventType) {\n        return {\n            timestamp: playerEvent.timeStamp,\n            event_type: eventType,\n            appa: playerEvent.playPosition,\n            appr: Math.min(playerEvent.playPosition / playerEvent.mediaDuration, 1),\n        };\n    }\n    convertEventToEventPayload(playerEvent) {\n        if (playerEvent.eventType === PlayerEventTypes.playStart) {\n            return {\n                timestamp: playerEvent.timeStamp,\n                event_type: PlayerEventTypePayloads.play,\n            };\n        }\n        const eventType = this.convertEventTypeToEventTypePayload(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.audioTrackChanged:\n                return {\n                    ...baseEvent,\n                    audio_locale: playerEvent.audioTrack,\n                };\n            case PlayerEventTypes.textTrackChanged:\n                return {\n                    ...baseEvent,\n                    subtitle_locale: playerEvent.textTrack,\n                };\n            default:\n                return baseEvent;\n        }\n    }\n    createDeltaEventPayload(playerEvent, timestamp, timeDelta) {\n        const eventType = this.getEventTypePayloadFromEventState(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        const errorPart = playerEvent.state === PlayingState.error ? { event_payload: playerEvent.error } : {};\n        return {\n            ...baseEvent,\n            ...errorPart,\n            timestamp,\n            time_delta: timeDelta / 1000,\n        };\n    }\n    getEventTypePayloadFromEventState(playerEvent) {\n        switch (playerEvent.state) {\n            case PlayingState.playing:\n                return PlayerEventTypePayloads.playing;\n            case PlayingState.paused:\n                return PlayerEventTypePayloads.paused;\n            case PlayingState.error:\n                return PlayerEventTypePayloads.error;\n            case PlayingState.buffering:\n            case PlayingState.loading:\n                return PlayerEventTypePayloads.paused; // buffering and loading converted to paused for API\n            case PlayingState.idle:\n                return PlayerEventTypePayloads.stop;\n        }\n    }\n    convertEventTypeToEventTypePayload(playerEvent) {\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.playStart:\n                return PlayerEventTypePayloads.play;\n            case PlayerEventTypes.audioTrackChanged:\n            case PlayerEventTypes.textTrackChanged:\n                return PlayerEventTypePayloads.configure;\n            // because e.g. `timeupdate` events can happen while paused / playing, base the rest on state.\n            default: {\n                this.getEventTypePayloadFromEventState(playerEvent);\n            }\n        }\n    }\n}\n","import { PlayerLogProcessor } from './player-log-processor';\nimport { PlayerEventTypes, PlayingState } from '../models/player';\nexport class PlayerLoggerService {\n    constructor(baseUrl, projectId) {\n        this.intervalHandle = 0;\n        this.playerLogProcessor = new PlayerLogProcessor(baseUrl, projectId);\n        this.reset();\n    }\n    init() {\n        this.playerLogProcessor.init();\n    }\n    destroy() {\n        this.playerLogProcessor.destroy();\n    }\n    onStart(pulseToken, deviceType, localTimeDelta, isLive, onStopCallback) {\n        this.reset();\n        this.playSession = {\n            pulseToken,\n            deviceType,\n            eventStack: [],\n            localTimeDelta,\n            isLive,\n            onStopCallback,\n        };\n    }\n    onCurrentTimeUpdated(currentTime) {\n        this.playerProperties.playPosition = currentTime;\n        if (this.playerProperties.mediaDuration > 0 && this.playerProperties.state !== PlayingState.idle) {\n            this.logEvent(PlayerEventTypes.timeupdate);\n        }\n    }\n    onDurationUpdated(duration) {\n        this.playerProperties.mediaDuration = duration;\n    }\n    onPlaying() {\n        if (this.playerProperties.state !== PlayingState.playing) {\n            if (this.playerProperties.state === PlayingState.idle) {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playStart);\n                this.processPlaySession();\n                this.startInterval();\n            }\n            else {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playing);\n            }\n        }\n    }\n    onPause() {\n        if (this.playerProperties.state !== PlayingState.paused && this.playerProperties.state !== PlayingState.idle) {\n            this.playerProperties.state = PlayingState.paused;\n            this.logEvent(PlayerEventTypes.pause);\n        }\n    }\n    onError(error) {\n        if (this.playerProperties.state !== PlayingState.error) {\n            this.playerProperties.state = PlayingState.error;\n            this.playerProperties.error = error;\n            this.logEvent(PlayerEventTypes.error);\n        }\n    }\n    onStop() {\n        if (this.playerProperties.state !== PlayingState.idle) {\n            this.playerProperties.state = PlayingState.idle;\n            this.logEvent(PlayerEventTypes.stopped);\n            this.stopInterval();\n            this.processPlaySession();\n        }\n    }\n    onTextTrackChanged(textTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.textTrack = textTrack;\n        this.logEvent(PlayerEventTypes.textTrackChanged);\n    }\n    onAudioTrackChanged(audioTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.audioTrack = audioTrack;\n        this.logEvent(PlayerEventTypes.audioTrackChanged);\n    }\n    updateProperties(playerProperties) {\n        this.playerProperties = {\n            ...this.playerProperties,\n            ...playerProperties,\n        };\n    }\n    startInterval() {\n        this.stopInterval();\n        // @ts-ignore\n        this.intervalHandle = setInterval(() => {\n            this.processPlaySession();\n        }, 30000);\n    }\n    stopInterval() {\n        if (this.intervalHandle) {\n            clearInterval(this.intervalHandle);\n        }\n    }\n    processPlaySession() {\n        this.playerLogProcessor.processPlaySession({ ...this.playSession }, this.getTimeStamp());\n        this.playSession.eventStack = [];\n    }\n    logEvent(eventType) {\n        if (this.playSession) {\n            this.playSession.eventStack.push({\n                ...this.playerProperties,\n                eventType,\n                timeStamp: this.getTimeStamp(),\n            });\n        }\n    }\n    reset() {\n        this.playSession = null;\n        this.playerProperties = {\n            state: PlayingState.idle,\n            error: null,\n            mediaDuration: 0,\n            playPosition: 0,\n            audioTrack: null,\n            textTrack: null,\n        };\n    }\n    getTimeStamp() {\n        return Date.now() - (this.playSession ? this.playSession.localTimeDelta : 0);\n    }\n}\n","const PlaybackRateMenuButton = videojs.getComponent('playbackRateMenuButton');\nexport class CustomPlaybackRateMenuButton extends PlaybackRateMenuButton {\n    constructor(player, options) {\n        super(player);\n    }\n    createEl() {\n        const el = super.createEl();\n        el.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"vjs-playback-rate-svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path class=\"vjs-custom-svg-color\" d=\"M20.38 8.57l-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83z\"/></svg>`;\n        return el;\n    }\n}\n","// https://raw.githubusercontent.com/vtex/country-iso-3-to-2/master/index.js\nexport function getISO2Locale(countryCode) {\n    const countryISOMapping = {\n        AFG: 'AF',\n        ALA: 'AX',\n        ALB: 'AL',\n        DZA: 'DZ',\n        ASM: 'AS',\n        AND: 'AD',\n        AGO: 'AO',\n        AIA: 'AI',\n        ATA: 'AQ',\n        ATG: 'AG',\n        ARG: 'AR',\n        ARM: 'AM',\n        ABW: 'AW',\n        AUS: 'AU',\n        AUT: 'AT',\n        AZE: 'AZ',\n        BHS: 'BS',\n        BHR: 'BH',\n        BGD: 'BD',\n        BRB: 'BB',\n        BLR: 'BY',\n        BEL: 'BE',\n        BLZ: 'BZ',\n        BEN: 'BJ',\n        BMU: 'BM',\n        BTN: 'BT',\n        BOL: 'BO',\n        BES: 'BQ',\n        BIH: 'BA',\n        BWA: 'BW',\n        BVT: 'BV',\n        BRA: 'BR',\n        VGB: 'VG',\n        IOT: 'IO',\n        BRN: 'BN',\n        BGR: 'BG',\n        BFA: 'BF',\n        BDI: 'BI',\n        KHM: 'KH',\n        CMR: 'CM',\n        CAN: 'CA',\n        CPV: 'CV',\n        CYM: 'KY',\n        CAF: 'CF',\n        TCD: 'TD',\n        CHL: 'CL',\n        CHN: 'CN',\n        HKG: 'HK',\n        MAC: 'MO',\n        CXR: 'CX',\n        CCK: 'CC',\n        COL: 'CO',\n        COM: 'KM',\n        COG: 'CG',\n        COD: 'CD',\n        COK: 'CK',\n        CRI: 'CR',\n        CIV: 'CI',\n        HRV: 'HR',\n        CUB: 'CU',\n        CUW: 'CW',\n        CYP: 'CY',\n        CZE: 'CZ',\n        DNK: 'DK',\n        DJI: 'DJ',\n        DMA: 'DM',\n        DOM: 'DO',\n        ECU: 'EC',\n        EGY: 'EG',\n        SLV: 'SV',\n        GNQ: 'GQ',\n        ERI: 'ER',\n        EST: 'EE',\n        ETH: 'ET',\n        FLK: 'FK',\n        FRO: 'FO',\n        FJI: 'FJ',\n        FIN: 'FI',\n        FRA: 'FR',\n        GUF: 'GF',\n        PYF: 'PF',\n        ATF: 'TF',\n        GAB: 'GA',\n        GMB: 'GM',\n        GEO: 'GE',\n        DEU: 'DE',\n        GHA: 'GH',\n        GIB: 'GI',\n        GRC: 'GR',\n        GRL: 'GL',\n        GRD: 'GD',\n        GLP: 'GP',\n        GUM: 'GU',\n        GTM: 'GT',\n        GGY: 'GG',\n        GIN: 'GN',\n        GNB: 'GW',\n        GUY: 'GY',\n        HTI: 'HT',\n        HMD: 'HM',\n        VAT: 'VA',\n        HND: 'HN',\n        HUN: 'HU',\n        ISL: 'IS',\n        IND: 'IN',\n        IDN: 'ID',\n        IRN: 'IR',\n        IRQ: 'IQ',\n        IRL: 'IE',\n        IMN: 'IM',\n        ISR: 'IL',\n        ITA: 'IT',\n        JAM: 'JM',\n        JPN: 'JP',\n        JEY: 'JE',\n        JOR: 'JO',\n        KAZ: 'KZ',\n        KEN: 'KE',\n        KIR: 'KI',\n        PRK: 'KP',\n        KOR: 'KR',\n        KWT: 'KW',\n        KGZ: 'KG',\n        LAO: 'LA',\n        LVA: 'LV',\n        LBN: 'LB',\n        LSO: 'LS',\n        LBR: 'LR',\n        LBY: 'LY',\n        LIE: 'LI',\n        LTU: 'LT',\n        LUX: 'LU',\n        MKD: 'MK',\n        MDG: 'MG',\n        MWI: 'MW',\n        MYS: 'MY',\n        MDV: 'MV',\n        MLI: 'ML',\n        MLT: 'MT',\n        MHL: 'MH',\n        MTQ: 'MQ',\n        MRT: 'MR',\n        MUS: 'MU',\n        MYT: 'YT',\n        MEX: 'MX',\n        FSM: 'FM',\n        MDA: 'MD',\n        MCO: 'MC',\n        MNG: 'MN',\n        MNE: 'ME',\n        MSR: 'MS',\n        MAR: 'MA',\n        MOZ: 'MZ',\n        MMR: 'MM',\n        NAM: 'NA',\n        NRU: 'NR',\n        NPL: 'NP',\n        NLD: 'NL',\n        ANT: 'AN',\n        NCL: 'NC',\n        NZL: 'NZ',\n        NIC: 'NI',\n        NER: 'NE',\n        NGA: 'NG',\n        NIU: 'NU',\n        NFK: 'NF',\n        MNP: 'MP',\n        NOR: 'NO',\n        OMN: 'OM',\n        PAK: 'PK',\n        PLW: 'PW',\n        PSE: 'PS',\n        PAN: 'PA',\n        PNG: 'PG',\n        PRY: 'PY',\n        PER: 'PE',\n        PHL: 'PH',\n        PCN: 'PN',\n        POL: 'PL',\n        PRT: 'PT',\n        PRI: 'PR',\n        QAT: 'QA',\n        REU: 'RE',\n        ROU: 'RO',\n        RUS: 'RU',\n        RWA: 'RW',\n        BLM: 'BL',\n        SHN: 'SH',\n        KNA: 'KN',\n        LCA: 'LC',\n        MAF: 'MF',\n        SPM: 'PM',\n        VCT: 'VC',\n        WSM: 'WS',\n        SMR: 'SM',\n        STP: 'ST',\n        SAU: 'SA',\n        SEN: 'SN',\n        SRB: 'RS',\n        SYC: 'SC',\n        SLE: 'SL',\n        SGP: 'SG',\n        SXM: 'SX',\n        SVK: 'SK',\n        SVN: 'SI',\n        SLB: 'SB',\n        SOM: 'SO',\n        ZAF: 'ZA',\n        SGS: 'GS',\n        SSD: 'SS',\n        ESP: 'ES',\n        LKA: 'LK',\n        SDN: 'SD',\n        SUR: 'SR',\n        SJM: 'SJ',\n        SWZ: 'SZ',\n        SWE: 'SE',\n        CHE: 'CH',\n        SYR: 'SY',\n        TWN: 'TW',\n        TJK: 'TJ',\n        TZA: 'TZ',\n        THA: 'TH',\n        TLS: 'TL',\n        TGO: 'TG',\n        TKL: 'TK',\n        TON: 'TO',\n        TTO: 'TT',\n        TUN: 'TN',\n        TUR: 'TR',\n        TKM: 'TM',\n        TCA: 'TC',\n        TUV: 'TV',\n        UGA: 'UG',\n        UKR: 'UA',\n        ARE: 'AE',\n        GBR: 'GB',\n        USA: 'US',\n        UMI: 'UM',\n        URY: 'UY',\n        UZB: 'UZ',\n        VUT: 'VU',\n        VEN: 'VE',\n        VNM: 'VN',\n        VIR: 'VI',\n        WLF: 'WF',\n        ESH: 'EH',\n        YEM: 'YE',\n        ZMB: 'ZM',\n        ZWE: 'ZW',\n        XKX: 'XK',\n    };\n    if (countryCode && countryCode.length === 3) {\n        countryCode = countryCode.toUpperCase();\n        if (countryISOMapping[countryCode]) {\n            return countryISOMapping[countryCode].toLowerCase();\n        }\n        return countryCode.substr(0, 2).toLowerCase();\n    }\n    return ('' + countryCode).toLowerCase();\n}\nexport function getNativeLanguage(lang) {\n    const locale = lang && lang.length === 3 ? getISO2Locale(lang) : lang;\n    const isoLocales = {\n        ab: 'аҧсуа',\n        aa: 'Afaraf',\n        af: 'Afrikaans',\n        ak: 'Akan',\n        sq: 'Shqip',\n        am: 'አማርኛ',\n        ar: 'العربية',\n        an: 'Aragonés',\n        hy: 'Հայերեն',\n        as: 'অসমীয়া',\n        av: 'авар мацӀ, магӀарул мацӀ',\n        ae: 'avesta',\n        ay: 'aymar aru',\n        az: 'azərbaycan dili',\n        bm: 'bamanankan',\n        ba: 'башҡорт теле',\n        eu: 'euskara, euskera',\n        be: 'Беларуская',\n        bn: 'বাংলা',\n        bh: 'भोजपुरी',\n        bi: 'Bislama',\n        bs: 'bosanski jezik',\n        br: 'brezhoneg',\n        bg: 'български език',\n        my: 'ဗမာစာ',\n        ca: 'Català',\n        ch: 'Chamoru',\n        ce: 'нохчийн мотт',\n        ny: 'chiCheŵa, chinyanja',\n        zh: '中文 (Zhōngwén), 汉语, 漢語',\n        cv: 'чӑваш чӗлхи',\n        kw: 'Kernewek',\n        co: 'corsu, lingua corsa',\n        cr: 'ᓀᐦᐃᔭᐍᐏᐣ',\n        hr: 'hrvatski',\n        cs: 'čeština',\n        da: 'dansk',\n        dv: 'ދިވެހި',\n        nl: 'Nederlands',\n        en: 'English',\n        eo: 'Esperanto',\n        et: 'eesti',\n        ee: 'Eʋegbe',\n        fo: 'føroyskt',\n        fj: 'vosa Vakaviti',\n        fi: 'suomi',\n        fr: 'français',\n        ff: 'Fulfulde, Pulaar, Pular',\n        gl: 'Galego',\n        ka: 'ქართული',\n        de: 'Deutsch',\n        el: 'Ελληνικά',\n        gn: 'Avañeẽ',\n        gu: 'ગુજરાતી',\n        ht: 'Kreyòl ayisyen',\n        ha: 'Hausa, هَوُسَ',\n        he: 'עברית',\n        hz: 'Otjiherero',\n        hi: 'हिन्दी, हिंदी',\n        ho: 'Hiri Motu',\n        hu: 'Magyar',\n        ia: 'Interlingua',\n        id: 'Bahasa Indonesia',\n        ie: 'Interlingue',\n        ga: 'Gaeilge',\n        ig: 'Asụsụ Igbo',\n        ik: 'Iñupiaq',\n        io: 'Ido',\n        is: 'Íslenska',\n        it: 'Italiano',\n        iu: 'ᐃᓄᒃᑎᑐᑦ',\n        ja: '日本語',\n        jv: 'basa Jawa',\n        kl: 'kalaallisut, kalaallit oqaasii',\n        kn: 'ಕನ್ನಡ',\n        kr: 'Kanuri',\n        ks: 'कश्मीरी, كشميري‎',\n        kk: 'Қазақ тілі',\n        km: 'ភាសាខ្មែរ',\n        ki: 'Gĩkũyũ',\n        rw: 'Ikinyarwanda',\n        ky: 'кыргыз тили',\n        kv: 'коми кыв',\n        kg: 'KiKongo',\n        ko: '한국어 (韓國語), 조선말 (朝鮮語)',\n        ku: 'كوردی‎',\n        kj: 'Kuanyama',\n        la: 'latine',\n        lb: 'Lëtzebuergesch',\n        lg: 'Luganda',\n        li: 'Limburgs',\n        ln: 'Lingála',\n        lo: 'ພາສາລາວ',\n        lt: 'lietuvių kalba',\n        lu: 'Luba-Katanga',\n        lv: 'latviešu valoda',\n        gv: 'Gaelg, Gailck',\n        mk: 'македонски јазик',\n        mg: 'Malagasy fiteny',\n        ms: 'bahasa Melayu, بهاس ملايو‎',\n        ml: 'മലയാളം',\n        mt: 'Malti',\n        mi: 'te reo Māori',\n        mr: 'मराठी',\n        mh: 'Kajin M̧ajeļ',\n        mn: 'монгол',\n        na: 'Ekakairũ Naoero',\n        nv: 'Diné bizaad, Dinékʼehǰí',\n        nb: 'Norsk bokmål',\n        nd: 'isiNdebele',\n        ne: 'नेपाली',\n        ng: 'Owambo',\n        nn: 'Norsk nynorsk',\n        no: 'Norsk',\n        ii: 'ꆈꌠ꒿ Nuosuhxop',\n        nr: 'isiNdebele',\n        oc: 'Occitan',\n        oj: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n        cu: 'ѩзыкъ словѣньскъ',\n        om: 'Afaan Oromoo',\n        or: 'ଓଡ଼ିଆ',\n        os: 'ирон æвзаг',\n        pa: 'ਪੰਜਾਬੀ, پنجابی‎',\n        pi: 'पाऴि',\n        fa: 'فارسی',\n        pl: 'polski',\n        ps: 'پښتو',\n        pt: 'Português',\n        qu: 'Runa Simi, Kichwa',\n        rm: 'rumantsch grischun',\n        rn: 'kiRundi',\n        ro: 'română',\n        ru: 'русский',\n        sa: 'संस्कृतम्',\n        sc: 'sardu',\n        sd: 'सिन्धी, سنڌي، سندھی‎',\n        se: 'Davvisámegiella',\n        sm: 'gagana faa Samoa',\n        sg: 'yângâ tî sängö',\n        sr: 'српски језик',\n        gd: 'Gàidhlig',\n        sn: 'chiShona',\n        si: 'සිංහල',\n        sk: 'slovenčina',\n        sl: 'slovenščina',\n        so: 'Soomaaliga, af Soomaali',\n        st: 'Sesotho',\n        es: 'español',\n        su: 'Basa Sunda',\n        sw: 'Kiswahili',\n        ss: 'SiSwati',\n        sv: 'svenska',\n        ta: 'தமிழ்',\n        te: 'తెలుగు',\n        tg: 'تاجیکی‎',\n        th: 'ไทย',\n        ti: 'ትግርኛ',\n        bo: 'བོད་ཡིག',\n        tk: 'Türkmen',\n        tl: 'Wikang Tagalog',\n        tn: 'Setswana',\n        to: 'faka Tonga',\n        tr: 'Türkçe',\n        ts: 'Xitsonga',\n        tt: 'تاتارچا‎',\n        tw: 'Twi',\n        ty: 'Reo Tahiti',\n        ug: 'ئۇيغۇرچە‎',\n        uk: 'українська',\n        ur: 'اردو',\n        uz: 'zbek, Ўзбек, أۇزبېك‎',\n        ve: 'Tshivenḓa',\n        vi: 'Tiếng Việt',\n        vo: 'Volapük',\n        wa: 'Walon',\n        cy: 'Cymraeg',\n        wo: 'Wollof',\n        fy: 'Frysk',\n        xh: 'isiXhosa',\n        yi: 'ייִדיש',\n        yo: 'Yorùbá',\n        za: 'Saɯ cueŋƅ, Saw cuengh',\n        mis: 'uncoded languages',\n        mul: 'multiple languages',\n        und: 'undetermined',\n        zxx: 'no linguistic content/not applicable',\n    };\n    if (locale && isoLocales[locale]) {\n        return isoLocales[locale];\n    }\n    return locale;\n}\n","import { getNativeLanguage } from '../../utils/locale';\nconst AudioTrackButton = videojs.getComponent('audioTrackButton');\nconst MenuItem = videojs.getComponent('menuItem');\n// based on AudioTrackMenuItem\nclass CustomAudioTrackMenuItem extends MenuItem {\n    constructor(player, options) {\n        const track = options.track;\n        const tracks = player.audioTracks();\n        // AP: Modify options for parent MenuItem class's init.\n        options.label = getNativeLanguage(track.language || track.label) || 'Unknown';\n        options.selected = track.enabled;\n        super(player, options);\n        this.track = track;\n        this.addClass(`vjs-${track.kind}-menu-item`);\n        const changeHandler = (...args) => {\n            this.handleTracksChange.apply(this, args);\n        };\n        tracks.addEventListener('change', changeHandler);\n        this.on('dispose', () => {\n            tracks.removeEventListener('change', changeHandler);\n        });\n    }\n    createEl(type, props, attrs) {\n        const el = super.createEl(type, props, attrs);\n        const parentSpan = el.querySelector('.vjs-menu-item-text');\n        if (this.options_.track.kind === 'main-desc') {\n            parentSpan.appendChild(super.createEl('span', {\n                className: 'vjs-icon-placeholder',\n            }, {\n                'aria-hidden': true,\n            }));\n            parentSpan.appendChild(super.createEl('span', {\n                className: 'vjs-control-text',\n                textContent: ' ' + this.localize('Descriptions'),\n            }));\n        }\n        return el;\n    }\n    handleClick(event) {\n        super.handleClick(event);\n        // the audio track list will automatically toggle other tracks\n        // off for us.\n        this.track.enabled = true;\n        // when native audio tracks are used, we want to make sure that other tracks are turned off\n        if (this.player_.tech_.featuresNativeAudioTracks) {\n            const tracks = this.player_.audioTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                // skip the current track since we enabled it above\n                if (track === this.track) {\n                    continue;\n                }\n                track.enabled = track === this.track;\n            }\n        }\n    }\n    handleTracksChange(event) {\n        this.selected(this.track.enabled);\n    }\n}\nexport class CustomAudioTrackButton extends AudioTrackButton {\n    constructor(player, options) {\n        super(player);\n    }\n    createItems(items = []) {\n        // if there's only one audio track, there no point in showing it\n        this.hideThreshold_ = 1;\n        const tracks = this.player_.audioTracks();\n        for (let i = 0; i < tracks.length; i++) {\n            const track = tracks[i];\n            items.push(new CustomAudioTrackMenuItem(this.player_, {\n                track,\n                // MenuItem is selectable\n                selectable: true,\n                // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n                multiSelectable: false,\n            }));\n        }\n        return items;\n    }\n}\n","const PlayToggle = videojs.getComponent('PlayToggle');\nexport function hotkeys(options) {\n    return function (event) {\n        switch (event.key) {\n            case ' ':\n                PlayToggle.prototype.handleClick.call(this, event);\n                break;\n            case 'ArrowLeft':\n                skip(this, options.backward);\n                break;\n            case 'ArrowRight':\n                skip(this, options.forward);\n                break;\n        }\n    };\n}\nfunction skip(component, skipTime) {\n    const currentVideoTime = component.currentTime();\n    const liveTracker = component.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : component.duration();\n    let newTime = currentVideoTime + skipTime;\n    if (newTime > duration) {\n        newTime = duration;\n    }\n    else if (newTime < 0) {\n        newTime = 0;\n    }\n    component.currentTime(newTime);\n}\n","import { getNativeLanguage } from '../../utils/locale';\nconst SubtitlesButton = videojs.getComponent('textTrackButton');\nconst MenuItem = videojs.getComponent('menuItem');\nconst OffTextTrackMenuItem = videojs.getComponent('offTextTrackMenuItem');\n// based on TextTrackMenuItem\nclass CustomTextTrackMenuItem extends MenuItem {\n    constructor(player, options) {\n        const track = options.track;\n        const tracks = player.textTracks();\n        // Modify options for parent MenuItem class's init.\n        options.label = getNativeLanguage(track.language || track.label) || 'Unknown';\n        options.selected = track.mode === 'showing';\n        super(player, options);\n        this.track = track;\n        // Determine the relevant kind(s) of tracks for this component and filter\n        // out empty kinds.\n        this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n        const changeHandler = (...args) => {\n            this.handleTracksChange.apply(this, args);\n        };\n        const selectedLanguageChangeHandler = (...args) => {\n            this.handleSelectedLanguageChange.apply(this, args);\n        };\n        player.on(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.addEventListener('change', changeHandler);\n        tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n        this.on('dispose', function () {\n            player.off(['loadstart', 'texttrackchange'], changeHandler);\n            tracks.removeEventListener('change', changeHandler);\n            tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n        });\n        // iOS7 doesn't dispatch change events to TextTrackLists when an\n        // associated track's mode changes. Without something like\n        // Object.observe() (also not present on iOS7), it's not\n        // possible to detect changes to the mode attribute and polyfill\n        // the change event. As a poor substitute, we manually dispatch\n        // change events whenever the controls modify the mode.\n        if (tracks.onchange === undefined) {\n            let event;\n            this.on(['tap', 'click'], function () {\n                if (typeof window.Event !== 'object') {\n                    // Android 2.3 throws an Illegal Constructor error for window.Event\n                    try {\n                        event = new window.Event('change');\n                    }\n                    catch (err) {\n                        // continue regardless of error\n                    }\n                }\n                if (!event) {\n                    event = document.createEvent('Event');\n                    event.initEvent('change', true, true);\n                }\n                tracks.dispatchEvent(event);\n            });\n        }\n        // set the default state based on current tracks\n        this.handleTracksChange();\n    }\n    handleClick(event) {\n        const referenceTrack = this.track;\n        const tracks = this.player_.textTracks();\n        super.handleClick(event);\n        if (!tracks) {\n            return;\n        }\n        for (let i = 0; i < tracks.length; i++) {\n            const track = tracks[i];\n            // If the track from the text tracks list is not of the right kind,\n            // skip it. We do not want to affect tracks of incompatible kind(s).\n            if (this.kinds.indexOf(track.kind) === -1) {\n                continue;\n            }\n            // If this text track is the component's track and it is not showing,\n            // set it to showing.\n            if (track === referenceTrack) {\n                if (track.mode !== 'showing') {\n                    track.mode = 'showing';\n                }\n                // If this text track is not the component's track and it is not\n                // disabled, set it to disabled.\n            }\n            else if (track.mode !== 'disabled') {\n                track.mode = 'disabled';\n            }\n        }\n    }\n    handleTracksChange(event) {\n        const shouldBeSelected = this.track.mode === 'showing';\n        // Prevent redundant selected() calls because they may cause\n        // screen readers to read the appended control text unnecessarily\n        if (shouldBeSelected !== this.isSelected_) {\n            this.selected(shouldBeSelected);\n        }\n    }\n    handleSelectedLanguageChange(event) {\n        if (this.track.mode === 'showing') {\n            const selectedLanguage = this.player_.cache_.selectedLanguage;\n            // Don't replace the kind of track across the same language\n            if (selectedLanguage &&\n                selectedLanguage.enabled &&\n                selectedLanguage.language === this.track.language &&\n                selectedLanguage.kind !== this.track.kind) {\n                return;\n            }\n            this.player_.cache_.selectedLanguage = {\n                enabled: true,\n                language: this.track.language,\n                kind: this.track.kind,\n            };\n        }\n    }\n    dispose() {\n        // remove reference to track object on dispose\n        this.track = null;\n        super.dispose();\n    }\n}\nexport class CustomTextTrackButton extends SubtitlesButton {\n    constructor(player, options = {}) {\n        options.tracks = player.textTracks();\n        super(player, options);\n    }\n    createItems(items = [], TrackMenuItem = CustomTextTrackMenuItem) {\n        // Label is an override for the [track] off label\n        // USed to localise captions/subtitles\n        let label;\n        if (this.label_) {\n            label = `${this.label_} off`;\n        }\n        // Add an OFF menu item to turn all tracks off\n        items.push(new OffTextTrackMenuItem(this.player_, {\n            kinds: this.kinds_,\n            kind: this.kind_,\n            label,\n        }));\n        this.hideThreshold_ += 1;\n        const tracks = this.player_.textTracks();\n        if (!Array.isArray(this.kinds_)) {\n            this.kinds_ = [this.kind_];\n        }\n        for (let i = 0; i < tracks.length; i++) {\n            const track = tracks[i];\n            // only add tracks that are of an appropriate kind and have a label\n            if (this.kinds_.indexOf(track.kind) > -1) {\n                const item = new TrackMenuItem(this.player_, {\n                    track,\n                    kinds: this.kinds_,\n                    kind: this.kind_,\n                    // MenuItem is selectable\n                    selectable: true,\n                    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n                    multiSelectable: false,\n                });\n                item.addClass(`vjs-${track.kind}-menu-item`);\n                items.push(item);\n            }\n        }\n        return items;\n    }\n}\nexport class CustomSubtitlesButton extends CustomTextTrackButton {\n    constructor(player, options, ready) {\n        super(player, options);\n        this.setIcon('subtitles');\n    }\n    buildCSSClass() {\n        return `vjs-subtitles-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n        return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n    }\n}\nCustomSubtitlesButton.prototype.kind_ = 'subtitles';\n","const Component = videojs.getComponent('component');\nexport class ChromecastButton extends Component {\n    constructor(player, options) {\n        super(player, options);\n    }\n    createEl() {\n        const el = super.createEl();\n        const castEl = document.createElement('button', 'google-cast-button');\n        castEl.className = 'vjs-chromecast-button';\n        el.appendChild(castEl);\n        return el;\n    }\n}\n","const Component = videojs.getComponent('Component');\nconst dom = videojs.dom || videojs;\nexport class Overlay extends Component {\n    createEl() {\n        const el = dom.createEl('div', {\n            className: `vjs-overlay`,\n        });\n        if (this.options_.element) {\n            el.appendChild(this.options_.element.cloneNode(true));\n        }\n        return el;\n    }\n}\n","const Component = videojs.getComponent('Component');\nexport class CustomOverlay extends Component {\n    createEl() {\n        return this.options_.element;\n    }\n}\n","import { supportsHLS, supportsNativeHLS } from '../utils/platform';\nimport { PlayerLoggerService } from '../logging/player-logger-service';\nimport { PlayerDeviceTypes } from '../models/player';\nimport { getEmeOptionsFromEntitlement } from '../utils/eme';\nimport { CustomPlaybackRateMenuButton } from './plugins/playback-rate-button';\nimport { CustomAudioTrackButton } from './plugins/audio-track-button';\nimport { hotkeys } from './hotkeys';\nimport { getISO2Locale } from '../utils/locale';\nimport { CustomSubtitlesButton, CustomTextTrackButton } from './plugins/subtitles-button';\nimport { ChromecastButton } from './plugins/chromecast-button';\nimport { Overlay } from './plugins/overlay';\nimport { CustomOverlay } from './plugins/custom-overlay';\nexport class VideoPlayer {\n    constructor(baseUrl, projectId) {\n        this.player = null;\n        this.playerLoggerService = new PlayerLoggerService(baseUrl, projectId);\n        videojs.registerComponent('customAudioTrackButton', CustomAudioTrackButton);\n        videojs.registerComponent('customTextTrackButton', CustomTextTrackButton);\n        videojs.registerComponent('customSubtitlesButton', CustomSubtitlesButton);\n        videojs.registerComponent('customPlaybackRateMenuButton', CustomPlaybackRateMenuButton);\n        videojs.registerComponent('chromecastButton', ChromecastButton);\n        videojs.registerComponent('overlay', Overlay);\n        videojs.registerComponent('customOverlay', CustomOverlay);\n    }\n    init(initParams) {\n        this.destroy();\n        const videoContainer = initParams.selector instanceof Element ? initParams.selector : document.querySelector(initParams.selector);\n        if (!videoContainer) {\n            throw Error('Invalid selector or element for player');\n        }\n        this.playerLoggerService.init();\n        const videoElement = document.createElement('video');\n        videoElement.setAttribute('class', ['video-js', 'vjs-default-skin'].join(' '));\n        videoElement.setAttribute('tabIndex', '0');\n        videoElement.setAttribute('width', '100%');\n        videoElement.setAttribute('height', '100%');\n        videoContainer.appendChild(videoElement);\n        const playOptions = {\n            fluid: false,\n            fill: true,\n            responsive: true,\n            controls: true,\n            controlBar: {\n                pictureInPictureToggle: false,\n                currentTimeDisplay: true,\n                durationDisplay: true,\n                timeDivider: false,\n                volumePanel: {\n                    inline: false,\n                },\n                chromecastButton: !!initParams.chromecastButton,\n                // order of elements:\n                children: [\n                    'playToggle',\n                    'currentTimeDisplay',\n                    'progressControl',\n                    'durationDisplay',\n                    'customPlaybackRateMenuButton',\n                    'customSubtitlesButton',\n                    'customAudioTrackButton',\n                    'volumePanel',\n                    'chromecastButton',\n                    'fullscreenToggle',\n                ],\n            },\n            userActions: {\n                hotkeys: hotkeys({ backward: -30, forward: 30 }),\n            },\n            html5: {\n                vhs: {\n                    // do to use videojs-http-streaming if it's natively supported\n                    overrideNative: !supportsNativeHLS(),\n                    cacheEncryptionKeys: true,\n                },\n            },\n            ...initParams.options,\n        };\n        this.player = videojs(videoElement, playOptions);\n        this.player.eme();\n        this.bindEvents();\n    }\n    play(playConfig, initParams) {\n        this.firstPlayingEvent = true;\n        if (!this.player || (this.player && this.player.currentSrc())) {\n            this.destroy();\n            this.init(initParams);\n        }\n        this.articlePlayConfig = playConfig;\n        this.playerLoggerService.onStart(playConfig.pulseToken, PlayerDeviceTypes.default, playConfig.localTimeDelta, true);\n        const hlsSources = playConfig.entitlements.filter(entitlement => entitlement.type === 'application/vnd.apple.mpegurl');\n        const configureHLSOnly = supportsHLS() && hlsSources.length > 0; // make sure there is actually HLS\n        const playSources = playConfig.entitlements\n            .map(entitlement => {\n            const emeOptions = getEmeOptionsFromEntitlement(entitlement);\n            return {\n                src: entitlement.src,\n                type: entitlement.type,\n                ...emeOptions,\n            };\n        })\n            .filter(playOption => {\n            return ((playOption.type === 'application/vnd.apple.mpegurl' && configureHLSOnly) ||\n                (playOption.type !== 'application/vnd.apple.mpegurl' && !configureHLSOnly));\n        });\n        this.player.src(playSources);\n        if (initParams.fullscreen) {\n            this.player.requestFullscreen();\n        }\n        if (!configureHLSOnly) {\n            // non HLS only needs the text tracks\n            playConfig.subtitles.forEach(track => {\n                this.player.addRemoteTextTrack({\n                    kind: track.kind,\n                    src: track.src,\n                    srclang: track.srclang,\n                    label: track.label,\n                    enabled: track.srclang === playConfig.subtitleLocale,\n                });\n            });\n        }\n    }\n    setPoster(posterUrl) {\n        this.player.poster(posterUrl);\n    }\n    destroy() {\n        if (this.player) {\n            if (false === this.player.ended()) {\n                this.player.pause();\n                // only if we have not already caught the 'ended' event\n                // Be aware that the `stopped` emit also send along all kinds of info, so call _before_ disposing player\n                this.playerLoggerService.onStop();\n            }\n            this.player.dispose();\n        }\n        this.playerLoggerService.destroy();\n        this.player = null;\n    }\n    getPlayer() {\n        return this.player;\n    }\n    bindEvents() {\n        this.player.on('error', () => {\n            this.playerLoggerService.onError(JSON.stringify(this.player.error()));\n        });\n        this.player.on('playing', () => {\n            if (this.firstPlayingEvent) {\n                this.firstPlayingEvent = false;\n                if (this.articlePlayConfig.currentTime > 0) {\n                    this.player.currentTime(this.articlePlayConfig.currentTime);\n                }\n            }\n            this.checkSelectedTracks();\n            this.playerLoggerService.onPlaying();\n        });\n        this.player.on('pause', () => {\n            this.checkSelectedTracks();\n            if (this.player.paused() && !this.player.ended()) {\n                this.playerLoggerService.onPause();\n            }\n        });\n        this.player.on('ended', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onStop();\n        });\n        this.player.on('timeupdate', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onCurrentTimeUpdated(this.player.currentTime() || 0);\n        });\n        this.player.on('durationchange', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onDurationUpdated(this.player.duration());\n        });\n        this.player.on('loadedmetadata', () => {\n            const audioTrackList = this.player.audioTracks();\n            if (audioTrackList && audioTrackList.length > 0) {\n                // set default tracks when available\n                this.setDefaultAudioTrack();\n                this.setDefaultTextTrack();\n                this.metadataLoaded = true;\n            }\n            else {\n                // unfortunately there is no reliable way to know when iOS native binding to text-tracks is done\n                // (even after first play event, this is not true), so we resort to an old fashioned timeout\n                setTimeout(() => {\n                    this.setDefaultAudioTrack();\n                    this.setDefaultTextTrack();\n                    this.metadataLoaded = true;\n                }, 1000);\n            }\n        });\n    }\n    checkSelectedTracks() {\n        if (!this.metadataLoaded) {\n            return false;\n        }\n        let selectedAudioTrack = '';\n        let selectedTextTrack = '';\n        const tracks = this.player.textTracks();\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i].mode === 'showing' && tracks[i].kind === 'subtitles') {\n                selectedTextTrack = tracks[i].language;\n            }\n        }\n        const audioTracks = this.player.audioTracks();\n        for (let i = 0; i < audioTracks.length; i++) {\n            if (audioTracks[i].enabled) {\n                selectedAudioTrack = audioTracks[i].language;\n                break;\n            }\n        }\n        this.playerLoggerService.updateProperties({\n            textTrack: selectedTextTrack,\n            audioTrack: selectedAudioTrack,\n        });\n        if (this.currentTextTrack !== null && this.currentTextTrack !== selectedTextTrack) {\n            this.playerLoggerService.onTextTrackChanged(selectedTextTrack);\n        }\n        this.currentTextTrack = selectedTextTrack;\n        if (this.currentAudioTrack !== null && this.currentAudioTrack !== selectedAudioTrack) {\n            this.playerLoggerService.onAudioTrackChanged(selectedAudioTrack);\n        }\n        this.currentAudioTrack = selectedAudioTrack;\n    }\n    setDefaultTextTrack() {\n        if (this.articlePlayConfig.subtitleLocale) {\n            const tracks = this.player.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                // textTracks is not a real array so no iterators here\n                if (tracks[i].mode !== 'disabled') {\n                    tracks[i].mode = 'disabled';\n                }\n            }\n            // it must be split up in to two loops, because two 'showing' items will break\n            for (let i = 0; i < tracks.length; i++) {\n                const trackLocale = getISO2Locale(tracks[i].language);\n                if (trackLocale === this.articlePlayConfig.subtitleLocale.toLowerCase() && tracks[i].kind === 'subtitles') {\n                    tracks[i].mode = 'showing';\n                    break;\n                }\n            }\n        }\n    }\n    setDefaultAudioTrack() {\n        if (this.articlePlayConfig.audioLocale) {\n            const audioTracks = this.player.audioTracks();\n            for (let i = 0; i < audioTracks.length; i++) {\n                const trackLocale = getISO2Locale(audioTracks[i].language);\n                if ((this.articlePlayConfig.audioLocale && trackLocale === this.articlePlayConfig.audioLocale.toLowerCase()) ||\n                    (this.articlePlayConfig.audioLocale === '' && i === 0)) {\n                    audioTracks[i].enabled = true;\n                    break;\n                }\n            }\n        }\n    }\n}\n","export function getEmeOptionsFromEntitlement(entitlement) {\n    let protectionInfo = null;\n    let emeOptions = {};\n    if (entitlement.protectionInfo) {\n        switch (entitlement.type) {\n            case 'application/dash+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'Widevine');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.widevine.alpha': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            // 'X-Axdrm-Message'\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.ms-sstr+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'PlayReady');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.microsoft.playready': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.apple.mpegurl':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'FairPlay');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.apple.fps.1_0': {\n                                certificateUri: protectionInfo.certificateUrl,\n                                getContentId: function () {\n                                    return getHostnameFromUri(protectionInfo.keyDeliveryUrl);\n                                },\n                                getLicense: function (emeOptions, contentId, keyMessage, callback) {\n                                    const payload = 'spc=' + binaryToBase64(keyMessage) + '&assetId=' + encodeURIComponent(contentId);\n                                    videojs.xhr({\n                                        uri: protectionInfo.keyDeliveryUrl,\n                                        method: 'post',\n                                        headers: {\n                                            'Content-type': 'application/x-www-form-urlencoded',\n                                            Authorization: protectionInfo.authenticationToken,\n                                        },\n                                        body: payload,\n                                        responseType: 'arraybuffer',\n                                    }, videojs.xhr.httpHandler(function (err, response) {\n                                        callback(null, parseLicenseResponse(response));\n                                    }, true));\n                                },\n                            },\n                        },\n                    };\n                }\n                break;\n        }\n    }\n    return emeOptions;\n}\nexport function binaryToBase64(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = [];\n    for (let d = 0; d < a.byteLength;) {\n        let e = a[d++];\n        c.push(b.charAt(e >> 2)),\n            (e = (3 & e) << 4),\n            d < a.byteLength\n                ? (c.push(b.charAt(e | (a[d] >> 4))),\n                    (e = (15 & a[d++]) << 2),\n                    d < a.byteLength\n                        ? (c.push(b.charAt(e | (a[d] >> 6))), c.push(b.charAt(63 & a[d++])))\n                        : (c.push(b.charAt(e)), c.push('=')))\n                : (c.push(b.charAt(e)), c.push('=='));\n    }\n    return c.join('');\n}\nexport function base64ToBinary(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = new Uint8Array(new ArrayBuffer((3 * a.length) / 4 + 4)), e = 0;\n    for (let d = 0; d < a.length;) {\n        let f = b.indexOf(a.charAt(d)), g = b.indexOf(a.charAt(d + 1));\n        if (((c[e++] = (f << 2) | (g >> 4)), '=' !== a.charAt(d + 2))) {\n            let h = b.indexOf(a.charAt(d + 2));\n            if (((c[e++] = (g << 4) | (h >> 2)), '=' !== a.charAt(d + 3))) {\n                let i = b.indexOf(a.charAt(d + 3));\n                c[e++] = (h << 6) | i;\n            }\n        }\n        d += 4;\n    }\n    return new Uint8Array(c.buffer, 0, e);\n}\nexport function parseLicenseResponse(response) {\n    const responseBody = String.fromCharCode.apply(null, new Uint8Array(response));\n    let b = responseBody.trim(), c = b.indexOf('<ckc>'), d = b.indexOf('</ckc>');\n    if (-1 === c || -1 === d) {\n        throw Error('License data format not as expected, missing or misplaced <ckc> tag');\n    }\n    c += 5;\n    b = b.substr(c, d - c);\n    return base64ToBinary(b);\n}\nexport function getHostnameFromUri(uri) {\n    let link = document.createElement('a');\n    link.href = uri;\n    return link.hostname;\n}\n","export var ArticlePlayErrors;\n(function (ArticlePlayErrors) {\n    ArticlePlayErrors[\"noPlayableAsset\"] = \"noPlayableAsset\";\n    ArticlePlayErrors[\"notAuthenticated\"] = \"notAuthenticated\";\n    ArticlePlayErrors[\"needEntitlement\"] = \"needEntitlement\";\n    ArticlePlayErrors[\"serverError\"] = \"serverError\";\n    ArticlePlayErrors[\"offlineError\"] = \"offlineError\";\n    ArticlePlayErrors[\"maxConcurrentStreamNumberError\"] = \"maxConcurrentStreamNumberError\";\n})(ArticlePlayErrors || (ArticlePlayErrors = {}));\n","import { ArticlePlayErrors } from '../models/play-config';\nexport function toPlayConfig(config, continueFromPreviousPosition) {\n    const timeStamp = Date.parse(config.issued_at);\n    const entitlements = [];\n    // check if the entitlements contain FPS in order to know when to filter out aes\n    const filterAES = !!config.entitlements.find((entitlement) => entitlement.encryption_type === 'fps');\n    const configEntitlements = filterAES\n        ? config.entitlements.filter((entitlement) => {\n            return entitlement.encryption_type !== 'aes';\n        })\n        : config.entitlements;\n    const dashWidevine = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('dash') === 0);\n    const mssPlayReady = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('mss') === 0);\n    configEntitlements.forEach((configEntitlement) => {\n        const entitlement = {\n            src: configEntitlement.manifest,\n            type: configEntitlement.mime_type,\n            protectionInfo: null,\n        };\n        if (configEntitlement.token) {\n            entitlement.protectionInfo = [];\n            if (configEntitlement.encryption_type === 'cenc') {\n                if (!!dashWidevine) {\n                    entitlement.protectionInfo.push({\n                        type: 'Widevine',\n                        authenticationToken: 'Bearer ' + dashWidevine.token,\n                        keyDeliveryUrl: dashWidevine.key_delivery_url,\n                    });\n                }\n                if (!!mssPlayReady) {\n                    entitlement.protectionInfo.push({\n                        type: 'PlayReady',\n                        authenticationToken: 'Bearer=' + mssPlayReady.token,\n                        keyDeliveryUrl: mssPlayReady.key_delivery_url,\n                    });\n                }\n            }\n            else if (configEntitlement.encryption_type === 'fps') {\n                entitlement.protectionInfo = [\n                    {\n                        type: 'FairPlay',\n                        authenticationToken: 'Bearer ' + configEntitlement.token,\n                        certificateUrl: config.fairplay_certificate_url,\n                        keyDeliveryUrl: configEntitlement.key_delivery_url,\n                    },\n                ];\n            }\n        }\n        entitlements.push(entitlement);\n    });\n    const subtitles = config.subtitles.map((item) => ({\n        src: item.url,\n        srclang: item.locale,\n        kind: 'subtitles',\n        label: item.locale_label,\n    }));\n    return {\n        entitlements: entitlements,\n        subtitles: subtitles,\n        pulseToken: config.pulse_token,\n        currentTime: continueFromPreviousPosition ? config.appa : 0,\n        articleId: config.article_id,\n        assetId: config.asset_id,\n        subtitleLocale: config.user_subtitle_locale,\n        audioLocale: config.user_audio_locale,\n        localTimeDelta: isNaN(timeStamp) ? 0 : Date.now() - timeStamp,\n        aspectRatio: config.aspect_ratio.replace('x', ':'),\n    };\n}\nexport function toArticleMetas(metas) {\n    return metas.reduce((metaObj, item) => ({\n        ...metaObj,\n        [item.key]: item.value,\n    }), {});\n}\nexport function toArticle(article) {\n    return {\n        name: article.name,\n        metas: toArticleMetas(article.metas),\n        posters: article.posters.map(toFile),\n        images: article.images.map(toFile),\n    };\n}\nexport function toFile(file) {\n    return {\n        type: file.type,\n        url: file.url,\n        baseUrl: file.base_url,\n        fileName: file.file_name,\n    };\n}\nexport function getMetaValue(metas, key) {\n    return metas[key] ? metas[key] : '';\n}\nexport function getResizedUrl(fileData, size) {\n    if (fileData) {\n        const { width, height } = size;\n        return `${fileData.baseUrl}/${width}x${height}/${fileData.fileName}`;\n    }\n    return '';\n}\nexport function getArticleTitle(article) {\n    return getMetaValue(article.metas, 'title') || article.name;\n}\nexport function getArticleBackgroundImage(article) {\n    if (article.posters.length > 0) {\n        return article.posters[0];\n    }\n    if (this.article.length > 0) {\n        return article.images[0];\n    }\n    return null;\n}\nexport function toPlayConfigError(code) {\n    switch (code) {\n        case 0:\n            return ArticlePlayErrors.offlineError;\n        case 401:\n            return ArticlePlayErrors.notAuthenticated;\n        case 402:\n            return ArticlePlayErrors.needEntitlement;\n        case 403:\n            return ArticlePlayErrors.notAuthenticated;\n        case 404:\n            return ArticlePlayErrors.noPlayableAsset;\n        case 429:\n            return ArticlePlayErrors.maxConcurrentStreamNumberError;\n        default:\n            return ArticlePlayErrors.serverError;\n    }\n}\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nimport { getArticleTitle } from '../api/converters';\nexport class ChromecastSender {\n    constructor() {\n        this.castContext = null;\n        this.castPlayer = null;\n        this.castPlayerController = null;\n        this.supportsHDR = false;\n    }\n    init(chromecastReceiverAppId) {\n        return new Promise((resolve, reject) => {\n            if (chromecastReceiverAppId) {\n                window['__onGCastApiAvailable'] = (isAvailable) => {\n                    if (isAvailable && cast && cast.framework && chrome && chrome.cast) {\n                        try {\n                            this.initializeCastApi(chromecastReceiverAppId);\n                            resolve();\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    }\n                    else {\n                        reject('Chromecast not available');\n                    }\n                };\n                const scriptElement = document.createElement('script');\n                scriptElement.async = true;\n                scriptElement.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';\n                document.head.appendChild(scriptElement);\n            }\n            else {\n                reject('Chromecast Receiver Application Id is missing');\n            }\n        });\n    }\n    initializeCastApi(chromecastReceiverAppId) {\n        cast.framework.CastContext.getInstance().setOptions({\n            receiverApplicationId: chromecastReceiverAppId,\n            autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n        });\n        this.castContext = cast.framework.CastContext.getInstance();\n        this.castPlayer = new cast.framework.RemotePlayer();\n        this.castPlayerController = new cast.framework.RemotePlayerController(this.castPlayer);\n        this.castPlayerController.addEventListener(cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED, event => {\n            if (this.castPlayer.isConnected) {\n                const castSession = this.castContext.getCurrentSession();\n                castSession.addMessageListener('urn:x-cast:com.audienceplayer.messagebus', (namespace, message) => {\n                    const capabilities = JSON.parse(message);\n                    this.supportsHDR = capabilities.is_hdr_supported;\n                });\n            }\n            else {\n                this.supportsHDR = false;\n            }\n        });\n    }\n    onConnectedListener(callback) {\n        const doCallback = () => {\n            if (this.castPlayer.isConnected) {\n                const castContext = cast.framework.CastContext.getInstance();\n                const device = castContext.getCurrentSession().getCastDevice();\n                callback({\n                    connected: true,\n                    friendlyName: device.friendlyName || 'Chromecast',\n                });\n            }\n            else {\n                callback({ connected: false, friendlyName: '' });\n            }\n        };\n        doCallback();\n        this.castPlayerController.addEventListener(cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED, event => {\n            doCallback();\n        });\n    }\n    onMediaInfoListener(callback) {\n        this.castPlayerController.addEventListener(cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED, () => {\n            const state = this.castPlayer.playerState;\n            let info = null;\n            // only when media is loaded, otherwise IDLE state will cause issues\n            if (this.castPlayer.isMediaLoaded) {\n                if (this.castPlayer.mediaInfo) {\n                    const customData = this.castPlayer.mediaInfo.customData;\n                    if (customData && customData.extraInfo) {\n                        info = customData.extraInfo;\n                    }\n                }\n                callback(state, info);\n            }\n        });\n    }\n    onCurrentTimeListener(callback) {\n        this.castPlayerController.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED, () => {\n            if (this.castPlayer.playerState !== chrome.cast.media.PlayerState.IDLE) {\n                callback(this.castPlayer.currentTime, this.castPlayer.duration);\n            }\n        });\n    }\n    getSupportsHDR() {\n        return this.supportsHDR;\n    }\n    getCastMediaInfo(articlePlayConfig, article, extraInfo) {\n        if (articlePlayConfig && articlePlayConfig.entitlements && articlePlayConfig.entitlements.length > 0) {\n            const tracks = articlePlayConfig.subtitles.map((option, index) => {\n                const trackId = index + 1;\n                const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n                castTrack.trackContentId = option.src;\n                castTrack.trackContentType = 'text/vtt';\n                castTrack.subtype = chrome.cast.media.TextTrackType.SUBTITLES;\n                castTrack.name = option.label;\n                castTrack.language = option.srclang;\n                castTrack.customData = null;\n                return castTrack;\n            });\n            let contentType = null;\n            const supportedContentTypes = ['application/vnd.ms-sstr+xml', 'video/mp4'];\n            const entitlement = articlePlayConfig.entitlements.find(item => {\n                if (supportedContentTypes.includes(item.type)) {\n                    contentType = item.type;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n            let protectionConfig = null;\n            if (entitlement) {\n                if (entitlement.protectionInfo) {\n                    protectionConfig = entitlement.protectionInfo.find(protection => {\n                        return protection.type === 'PlayReady';\n                    });\n                }\n                const token = protectionConfig ? protectionConfig.authenticationToken : null;\n                const mediaInfo = new chrome.cast.media.MediaInfo(entitlement.src, contentType);\n                mediaInfo.streamType = chrome.cast.media.StreamType.BUFFERED;\n                mediaInfo.metadata = new chrome.cast.media.GenericMediaMetadata();\n                mediaInfo.metadata.metadataType = chrome.cast.media.MetadataType.GENERIC;\n                mediaInfo.metadata.title = getArticleTitle(article);\n                mediaInfo.tracks = tracks;\n                const licenceUrlParam = token\n                    ? {\n                        ...this.getLicenseUrlFromSrc(protectionConfig.keyDeliveryUrl, token),\n                    }\n                    : {};\n                const audieLocaleParam = articlePlayConfig.audioLocale ? { preferredAudioLocale: articlePlayConfig.audioLocale } : {};\n                const extraInfoParam = extraInfo ? { extraInfo: JSON.stringify(extraInfo) } : {};\n                mediaInfo.customData = {\n                    ...licenceUrlParam,\n                    ...audieLocaleParam,\n                    ...extraInfoParam,\n                    pulseToken: articlePlayConfig.pulseToken,\n                };\n                // @ts-ignore\n                mediaInfo.currentTime = articlePlayConfig.currentTime;\n                return mediaInfo;\n            }\n        }\n        return null;\n    }\n    getLicenseUrlFromSrc(src, token) {\n        if (token) {\n            const rootSrc = src.includes('?') ? `${src}&token=` : `${src}?token=`;\n            const licenseUrl = rootSrc + encodeURIComponent(token);\n            return {\n                licenseUrl,\n                token,\n            };\n        }\n        return {};\n    }\n    castVideo(playConfig, article, continueFromPreviousPosition, extraInfo) {\n        if (this.isConnected()) {\n            const castSession = this.castContext.getCurrentSession();\n            const mediaInfo = this.getCastMediaInfo(playConfig, article, extraInfo);\n            if (mediaInfo) {\n                const request = new chrome.cast.media.LoadRequest(mediaInfo);\n                request.currentTime = continueFromPreviousPosition ? playConfig.currentTime : 0;\n                if (playConfig.subtitleLocale) {\n                    // can NOT use .filter on tracks because the cast library has patched the Array.\n                    const textTrack = mediaInfo.tracks.find((track) => track.language === playConfig.subtitleLocale);\n                    if (textTrack) {\n                        request.activeTrackIds = [textTrack.trackId];\n                    }\n                }\n                return castSession.loadMedia(request);\n            }\n            else {\n                throw { message: 'Unexpected manifest format in articlePlayConfig' };\n            }\n        }\n    }\n    isConnected() {\n        return this.castPlayer && this.castPlayer.isConnected;\n    }\n    stopMedia() {\n        if (this.castContext) {\n            const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n            if (castSession) {\n                castSession.getMediaSession().stop(new chrome.cast.media.StopRequest(), () => { }, () => { });\n            }\n        }\n    }\n    endSession(stopCasting) {\n        if (this.castContext) {\n            const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n            if (castSession) {\n                castSession.endSession(stopCasting);\n            }\n        }\n    }\n    stopCasting() {\n        this.endSession(true);\n    }\n    getCastPlayer() {\n        return this.castPlayer;\n    }\n    getCastPlayerController() {\n        return this.castPlayerController;\n    }\n}\n","export function graphRequest(apiFetchUrl, query, variables, token) {\n    const authHeader = token ? { Authorization: 'Bearer ' + token } : {};\n    return fetch(apiFetchUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            ...authHeader,\n        },\n        body: JSON.stringify({\n            query,\n            variables,\n        }),\n    }).then(response => response.json());\n}\n","import { graphRequest } from './graph-request';\nimport { articleAssetPlayMutation, articleQuery } from './queries';\nimport { toArticle, toPlayConfig } from './converters';\nexport class ApiService {\n    constructor(baseUrl, projectId) {\n        this.apiFetchUrl = `${baseUrl}/graphql/${projectId}`;\n        this.token = null;\n    }\n    setToken(token) {\n        this.token = token;\n    }\n    getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition) {\n        return graphRequest(this.apiFetchUrl, articleAssetPlayMutation, { articleId, assetId, protocols: ['dash', 'mss', 'hls'] }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code }; // @TODO to play config error\n            }\n            return toPlayConfig(response.data.ArticleAssetPlay, continueFromPreviousPosition);\n        });\n    }\n    getArticle(articleId) {\n        return graphRequest(this.apiFetchUrl, articleQuery, { articleId }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code };\n            }\n            return toArticle(response.data.Article);\n        });\n    }\n}\n","export const articleAssetPlayMutation = `\n    mutation ArticleAssetPlay($articleId: Int, $assetId: Int, $protocols: [ArticlePlayProtocolEnum]) {\n        ArticleAssetPlay(article_id: $articleId, asset_id: $assetId, protocols: $protocols) {\n            article_id\n            asset_id\n            entitlements {\n                mime_type\n                protocol\n                manifest\n                token\n                encryption_type\n                key_delivery_url\n            }\n            subtitles {\n                url\n                locale\n                locale_label\n            }\n            pulse_token\n            appa\n            appr\n            fairplay_certificate_url\n            user_subtitle_locale\n            user_audio_locale\n            aspect_ratio\n            issued_at\n        }\n    }\n`;\nexport const articleQuery = `\n    query Article($articleId: Int!) {\n        Article(id: $articleId) {\n            id\n            name\n            metas {\n                key\n                value\n            }\n            assets {\n                id\n                duration\n                linked_type\n                accessibility\n            }\n            posters {\n                type\n                url\n                title\n                base_url\n                file_name\n            }\n            images {\n                type\n                url\n                title\n                base_url\n                file_name\n            }\n        }\n    }\n`;\n","import { VideoPlayer } from './video-player/video-player';\nimport { ChromecastSender } from './chromecast/chromecast-sender';\nimport { ApiService } from './api/api-service';\nimport { getArticleBackgroundImage, getResizedUrl, toPlayConfigError } from './api/converters';\nexport class EmbedPlayer {\n    constructor(properties) {\n        this.projectId = properties.projectId;\n        this.apiBaseUrl = properties.apiBaseUrl.replace(/\\/*$/, '');\n        this.chromecastReceiverAppId = properties.chromecastReceiverAppId ? properties.chromecastReceiverAppId : null;\n        this.apiService = new ApiService(this.apiBaseUrl, this.projectId);\n        this.videoPlayer = new VideoPlayer(this.apiBaseUrl, this.projectId);\n        this.castSender = new ChromecastSender();\n    }\n    initVideoPlayer(initParams) {\n        this.videoPlayer.init(initParams);\n    }\n    setVideoPlayerPoster(posterUrl) {\n        this.videoPlayer.setPoster(posterUrl);\n    }\n    setVideoPlayerPosterFromArticle(articleId, posterSize) {\n        return this.apiService.getArticle(articleId).then(article => {\n            this.videoPlayer.setPoster(getResizedUrl(getArticleBackgroundImage(article), posterSize));\n        });\n    }\n    play(playParams) {\n        if (!playParams.articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!playParams.assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        this.apiService.setToken(playParams.token ? playParams.token : null);\n        return this.apiService\n            .getArticleAssetPlayConfig(playParams.articleId, playParams.assetId, playParams.continueFromPreviousPosition)\n            .then(config => {\n            this.playVideo(config, playParams);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    destroy() {\n        this.videoPlayer.destroy();\n    }\n    playVideo(config, playParams) {\n        this.videoPlayer.play(config, playParams);\n    }\n    getVideoPlayer() {\n        return this.videoPlayer.getPlayer();\n    }\n    initChromecast() {\n        if (!this.chromecastReceiverAppId) {\n            return Promise.reject('No Chromecast receiver app id');\n        }\n        return this.castSender.init(this.chromecastReceiverAppId);\n    }\n    appendChromecastButton(selector) {\n        const castButtonContaner = selector instanceof Element ? selector : document.querySelector(selector);\n        const castButton = document.createElement('google-cast-launcher');\n        castButtonContaner.appendChild(castButton);\n    }\n    castVideo({ articleId, assetId, token, continueFromPreviousPosition }) {\n        if (!articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        this.apiService.setToken(token);\n        return Promise.all([\n            this.apiService.getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition),\n            this.apiService.getArticle(articleId),\n        ])\n            .then(([config, article]) => {\n            this.castSender.castVideo(config, article, continueFromPreviousPosition);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    getCastSender() {\n        return this.castSender;\n    }\n    getCastPlayer() {\n        return this.castSender.getCastPlayer();\n    }\n    getCastPlayerController() {\n        return this.castSender.getCastPlayerController();\n    }\n    isConnected() {\n        return this.castSender.isConnected();\n    }\n    endSession(stopCasting) {\n        this.castSender.endSession(stopCasting);\n    }\n}\n//*** Example of usage ***//\n// const player = new EmbeddablePlayer();\n//\n// player\n//     .play({\n//         selector: '.video-wrapper',\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         posterImageUrl: '',\n//         fullScreen: false\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n//*** Example of usage with chromecast ***//\n// const player = new EmbeddablePlayer();\n// player.setupChromecast(\"#cast-wrapper\", CHROMECAST_RECEIVER_APP_ID);\n//\n// player\n//     .castVideo({\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nimport { getNativeLanguage } from '../utils/locale';\nexport class ChromecastControls {\n    constructor(player, controller, selector) {\n        this.player = player;\n        this.playerController = controller;\n        this.totalDuration = player.duration || 0;\n        this.currentTime = player.currentTime || 0;\n        this.currentStatus = player.playerState;\n        this.createChromecastControlsTemplate(selector);\n        this.bindEvents();\n        this.setPlayButtonClass();\n        this.bindEventsToControls();\n        this.setProgressBarValues();\n    }\n    bindEvents() {\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.MEDIA_INFO_CHANGED, () => {\n            if (this.rootElement && this.player.mediaInfo) {\n                this.renderTracks();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentTime = e.value;\n                this.totalDuration = this.player.duration;\n                this.setProgressBarValues();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentStatus = e.value;\n                this.checkChromecastContainerVisibility();\n                this.setPlayButtonClass();\n                this.setProgressBarValues();\n            }\n        });\n        this.checkChromecastContainerVisibility();\n    }\n    createChromecastControlsTemplate(selector) {\n        const chromecastControlsTemplateString = `\n        <div class=\"chromecast-controls video-js vjs-workinghover\">\n            <div class=\"vjs-control-bar\">\n                \n                <button class=\"play-pause-button vjs-play-control vjs-control vjs-button vjs-paused\" type=\"button\" title=\"Play\" aria-disabled=\"false\">\n                    <span class=\"vjs-icon-placeholder\" aria-hidden=\"true\"></span><span class=\"vjs-control-text\" aria-live=\"polite\">Play</span>\n                </button>\n                \n               <div class=\"chromecast-controls__progress-bar\">\n                 <div class=\"chromecast-controls__progress-bar__current vjs-time-control\"></div>\n                 <div class=\"chromecast-controls__progress-bar-slider-container\">\n                    <input type=\"range\"\n                        value=\"0\"\n                        class=\"chromecast-controls__progress-bar__slider\" \n                        min=\"0\"\n                        max=\"100\"/>\n                    <div class=\"chromecast-controls__progress-bar__slider-left\"></div>\n                </div>    \n                 <div class=\"chromecast-controls__progress-bar__total vjs-time-control\"></div>\n               </div>\n                \n                <div class=\"vjs-subtitles-button vjs-menu-button vjs-menu-button-popup vjs-control vjs-button\">\n                    <button class=\"vjs-subtitles-button vjs-menu-button vjs-menu-button-popup vjs-button\" type=\"button\" aria-disabled=\"false\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <span class=\"vjs-icon-placeholder\" aria-hidden=\"true\"></span>\n                        <span class=\"vjs-control-text\" aria-live=\"polite\"></span>\n                    </button>\n                    <div class=\"vjs-menu\"></div>\n                </div>\n                \n                <div class=\"vjs-audio-button vjs-menu-button vjs-menu-button-popup vjs-control vjs-button\">\n                    <button class=\"vjs-audio-button vjs-menu-button vjs-menu-button-popup vjs-button\" type=\"button\" aria-disabled=\"false\" title=\"Audio Track\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <span class=\"vjs-icon-placeholder\" aria-hidden=\"true\"></span>\n                        <span class=\"vjs-control-text\" aria-live=\"polite\">Audio Track</span>\n                    </button>\n                    <div class=\"vjs-menu\"></div>\n                </div>\n                \n                <div class=\"vjs-control vjs-button vjs-chromecast-button\">\n                    <google-cast-launcher></google-cast-launcher>\n                </div>\n           </div>\n        </div>\n        `;\n        const element = !!selector ? (selector instanceof HTMLElement ? selector : document.querySelector(selector)) : document.body;\n        element.insertAdjacentHTML('beforeend', chromecastControlsTemplateString);\n        this.rootElement = element.querySelector('.chromecast-controls');\n    }\n    setPlayButtonClass() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        if (this.currentStatus === chrome.cast.media.PlayerState.PAUSED) {\n            playAndPauseButton.classList.replace('vjs-playing', 'vjs-paused');\n        }\n        else {\n            playAndPauseButton.classList.replace('vjs-paused', 'vjs-playing');\n        }\n    }\n    bindEventsToControls() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        playAndPauseButton.addEventListener('click', () => this.playPause());\n        this.bindEventsToMenu('.vjs-subtitles-button');\n        this.bindEventsToMenu('.vjs-audio-button');\n        this.getElement('.chromecast-controls__progress-bar__slider').addEventListener('input', event => {\n            this.seek(event.target.value);\n        });\n    }\n    bindEventsToMenu(buttonSelector) {\n        const containerEl = this.getElement(`div${buttonSelector}`);\n        const buttonEl = this.getElement(`button${buttonSelector}`);\n        const menuEl = this.getElement(`${buttonSelector} .vjs-menu`);\n        buttonEl.addEventListener('click', event => {\n            if (!event.defaultPrevented) {\n                this.toggleMenu(menuEl, containerEl);\n            }\n        });\n        buttonEl.addEventListener('mouseenter', () => {\n            containerEl.classList.add('vjs-hover');\n        });\n        containerEl.addEventListener('mouseleave', () => {\n            containerEl.classList.remove('vjs-hover');\n        });\n        menuEl.addEventListener('blur', () => {\n            this.toggleMenu(menuEl, containerEl);\n        });\n    }\n    renderTracks() {\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        let audioTracks = [];\n        let textTracks = [];\n        if (this.player.mediaInfo && this.player.mediaInfo.tracks && sessionMediaInfo) {\n            audioTracks = this.getTracksByType('AUDIO');\n            textTracks = this.getTracksByType('TEXT');\n        }\n        const trackButton = this.getElement('.vjs-subtitles-button.vjs-menu-button-popup');\n        if (textTracks.length > 0) {\n            trackButton.classList.remove('vjs-hidden');\n        }\n        else {\n            trackButton.classList.add('vjs-hidden');\n        }\n        const audioButton = this.getElement('.vjs-audio-button.vjs-menu-button-popup');\n        if (audioTracks.length > 0) {\n            audioButton.classList.remove('vjs-hidden');\n        }\n        else {\n            audioButton.classList.add('vjs-hidden');\n        }\n        const audioTracksContainerElement = this.getElement('.vjs-audio-button .vjs-menu');\n        const textTracksContainerElement = this.getElement('.vjs-subtitles-button .vjs-menu');\n        audioTracksContainerElement.innerHTML = '';\n        if (audioTracks.length > 0) {\n            audioTracksContainerElement.appendChild(this.getTracksList(audioTracks, 'AUDIO'));\n        }\n        textTracksContainerElement.innerHTML = '';\n        if (textTracks.length > 0) {\n            textTracksContainerElement.appendChild(this.getTracksList(textTracks, 'TEXT'));\n        }\n    }\n    getTracksList(tracks, type) {\n        const tracksListElement = document.createElement('ul');\n        tracksListElement.classList.add('vjs-menu-content');\n        tracksListElement.addEventListener('click', event => this.setActiveTrack(event, type === 'AUDIO' ? 'AUDIO' : 'TEXT'));\n        tracks.forEach(track => {\n            const listItemElement = document.createElement('li');\n            listItemElement.classList.add('vjs-menu-item');\n            if (track.active) {\n                listItemElement.classList.add('vjs-selected');\n            }\n            else {\n                listItemElement.classList.remove('vjs-selected');\n            }\n            listItemElement.innerText = getNativeLanguage(track.locale);\n            listItemElement.value = track.id;\n            tracksListElement.appendChild(listItemElement);\n        });\n        return tracksListElement;\n    }\n    getActiveTracksByType(type) {\n        return this.getTracksByType(type)\n            .filter(track => track.active)\n            .map(track => +track.id);\n    }\n    getTracksByType(type) {\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        return this.player.mediaInfo.tracks\n            .filter(track => track.type === type)\n            .map(track => ({\n            id: track.trackId,\n            locale: track.language,\n            active: sessionMediaInfo.activeTrackIds && sessionMediaInfo.activeTrackIds.indexOf(track.trackId) !== -1,\n        }));\n    }\n    getTransformedDurationValue(value) {\n        const hours = Math.floor(value / 3600);\n        const minutes = Math.floor((value - hours * 3600) / 60);\n        const seconds = Math.round(value - hours * 3600 - minutes * 60);\n        let result = '';\n        if (!value && value === 0) {\n            return '-';\n        }\n        if (hours > 0) {\n            result = hours + ':';\n            if (minutes < 10) {\n                result += '0';\n            }\n        }\n        result += minutes + ':';\n        if (seconds < 10) {\n            result += '0';\n        }\n        return result + seconds;\n    }\n    setProgressBarValues() {\n        if (this.rootElement) {\n            const currentTimeElement = this.getElement('.chromecast-controls__progress-bar__current');\n            const totalTimeElement = this.getElement('.chromecast-controls__progress-bar__total');\n            const progressBarElement = this.getElement('.chromecast-controls__progress-bar__slider');\n            const progressLeftEl = this.getElement('.chromecast-controls__progress-bar__slider-left');\n            currentTimeElement.innerText = this.getTransformedDurationValue(this.currentTime);\n            totalTimeElement.innerText = this.getTransformedDurationValue(this.totalDuration);\n            progressBarElement.max = this.totalDuration;\n            progressBarElement.value = this.currentTime;\n            progressLeftEl.style.width = (progressBarElement.offsetWidth * this.currentTime) / this.totalDuration + 'px';\n        }\n    }\n    checkChromecastContainerVisibility() {\n        if (this.currentStatus === chrome.cast.media.PlayerState.IDLE) {\n            this.rootElement.classList.add('chromecast-controls--idle');\n        }\n        else {\n            this.rootElement.classList.remove('chromecast-controls--idle');\n        }\n    }\n    playPause() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.playOrPause();\n        }\n    }\n    seek(newTime) {\n        if (this.player && this.player.isConnected) {\n            this.player.currentTime = newTime;\n            this.playerController.seek();\n        }\n    }\n    stop() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.stop();\n        }\n    }\n    setActiveTrack(event, type) {\n        if (event.target instanceof HTMLLIElement && event.target.nodeName === 'LI') {\n            event.preventDefault();\n            event.stopPropagation();\n            const selectedTrackId = +event.target.value;\n            const newActiveTracks = this.getActiveTracksByType(type === 'AUDIO' ? 'TEXT' : 'AUDIO');\n            const activeTracksOfType = this.getActiveTracksByType(type);\n            const index = activeTracksOfType.indexOf(selectedTrackId);\n            if (type === 'AUDIO' || (type === 'TEXT' && index === -1)) {\n                newActiveTracks.push(selectedTrackId);\n            }\n            this.setActiveTracks(newActiveTracks, type);\n        }\n    }\n    setActiveTracks(trackIds, type) {\n        if (this.player && this.player.isConnected) {\n            const media = cast.framework.CastContext.getInstance()\n                .getCurrentSession()\n                .getMediaSession();\n            const tracksInfoRequest = new chrome.cast.media.EditTracksInfoRequest(trackIds);\n            media.editTracksInfo(tracksInfoRequest, () => {\n                this.toggleMenu(this.getElement(type === 'AUDIO' ? '.vjs-audio-button .vjs-menu' : '.vjs-subtitles-button .vjs-menu'), this.getElement(type === 'AUDIO' ? 'div.vjs-audio-button' : 'div.vjs-subtitles-button'));\n            }, (error) => console.error('ChromeCast', error));\n        }\n    }\n    toggleMenu(menuEl, containerEl) {\n        if (menuEl.classList.contains('vjs-lock-showing') || containerEl.classList.contains('vjs-hover')) {\n            menuEl.classList.remove('vjs-lock-showing');\n            menuEl.removeAttribute('tabindex');\n            containerEl.classList.remove('vjs-hover');\n        }\n        else {\n            menuEl.classList.add('vjs-lock-showing');\n            menuEl.setAttribute('tabindex', '-1');\n            menuEl.focus();\n        }\n    }\n    getElement(selector) {\n        return this.rootElement.querySelector(selector);\n    }\n}\n"],"names":["PlayingState","PlayerEventTypes","PlayerDeviceTypes","PlayerEventTypePayloads","PulseMode","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","supportsNativeHLS","videojs","browser","IS_ANY_SAFARI","IS_IOS","PlayerLogProcessor","constructor","baseUrl","projectId","this","playLogs","apiCallInProgress","intervalHandle","apiUrl","replace","init","setInterval","processFirstPlayLog","destroy","clearInterval","processPlaySession","playSession","timeStamp","eventStack","length","eventStackPayload","i","sumDelta","lastEventWasProcessed","currentEvent","isEventTypeWithoutTimeDelta","eventType","push","convertEventToEventPayload","previousEvent","state","createDeltaEventPayload","lastEvent","lastLogEvent","splice","MAX_EVENTS","event_type","error","event_payload","playLogPayload","getPlayerLogPayloadWithPulseToken","pulseToken","event_stack","pulse_token","pulse_mode","isLive","live","offline","device_type","deviceType","forEach","e","processPlayLog","currentLog","removePlayLog","logToSend","eventStackIndex","isStopCutOff","stop","fetch","method","headers","Accept","body","JSON","stringify","then","catch","status","response","archive","find","log","logPayload","index","findIndex","textTrackChanged","audioTrackChanged","playStart","indexOf","createBaseEventPayload","playerEvent","timestamp","appa","playPosition","appr","Math","min","mediaDuration","play","convertEventTypeToEventTypePayload","baseEvent","audio_locale","audioTrack","subtitle_locale","textTrack","timeDelta","getEventTypePayloadFromEventState","time_delta","playing","paused","buffering","loading","idle","configure","PlayerLoggerService","playerLogProcessor","reset","onStart","localTimeDelta","onStopCallback","onCurrentTimeUpdated","currentTime","playerProperties","logEvent","timeupdate","onDurationUpdated","duration","onPlaying","startInterval","onPause","pause","onError","onStop","stopped","stopInterval","onTextTrackChanged","onAudioTrackChanged","updateProperties","getTimeStamp","Date","now","PlaybackRateMenuButton","getComponent","CustomPlaybackRateMenuButton","player","options","super","createEl","el","innerHTML","getISO2Locale","countryCode","countryISOMapping","AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","VGB","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","HKG","MAC","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","ANT","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VIR","WLF","ESH","YEM","ZMB","ZWE","XKX","toUpperCase","toLowerCase","substr","getNativeLanguage","lang","locale","isoLocales","ab","aa","af","ak","sq","am","ar","an","hy","as","av","ae","ay","az","bm","ba","eu","be","bn","bh","bi","bs","br","bg","my","ca","ch","ce","ny","zh","cv","kw","co","cr","hr","cs","da","dv","nl","en","eo","et","ee","fo","fj","fi","fr","ff","gl","ka","de","gn","gu","ht","ha","he","hz","hi","ho","hu","ia","id","ie","ga","ig","ik","io","is","it","iu","ja","jv","kl","kn","kr","ks","kk","km","ki","rw","ky","kv","kg","ko","ku","kj","la","lb","lg","li","ln","lo","lt","lu","lv","gv","mk","mg","ms","ml","mt","mi","mr","mh","mn","na","nv","nb","nd","ne","ng","nn","no","ii","nr","oc","oj","cu","om","or","os","pa","pi","fa","pl","ps","pt","qu","rm","rn","ro","ru","sa","sc","sd","se","sm","sg","sr","gd","sn","si","sk","sl","so","st","es","su","sw","ss","sv","ta","te","tg","th","ti","bo","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","cy","wo","fy","xh","yi","yo","za","mis","mul","und","zxx","AudioTrackButton","MenuItem","CustomAudioTrackMenuItem","track","tracks","audioTracks","label","language","selected","enabled","addClass","kind","changeHandler","args","handleTracksChange","apply","addEventListener","on","removeEventListener","type","props","attrs","parentSpan","querySelector","options_","appendChild","className","textContent","localize","handleClick","event","player_","tech_","featuresNativeAudioTracks","CustomAudioTrackButton","createItems","items","hideThreshold_","selectable","multiSelectable","PlayToggle","skip","component","skipTime","currentVideoTime","liveTracker","seekableEnd","newTime","SubtitlesButton","OffTextTrackMenuItem","CustomTextTrackMenuItem","textTracks","mode","kinds","filter","Boolean","selectedLanguageChangeHandler","handleSelectedLanguageChange","off","undefined","onchange","window","Event","err","document","createEvent","initEvent","dispatchEvent","referenceTrack","shouldBeSelected","isSelected_","selectedLanguage","cache_","dispose","CustomTextTrackButton","TrackMenuItem","label_","kinds_","kind_","Array","isArray","item","CustomSubtitlesButton","ready","setIcon","buildCSSClass","buildWrapperCSSClass","Component","ChromecastButton","castEl","createElement","dom","Overlay","element","cloneNode","CustomOverlay","VideoPlayer","playerLoggerService","registerComponent","initParams","videoContainer","selector","Element","Error","videoElement","setAttribute","join","playOptions","fluid","fill","responsive","controls","controlBar","pictureInPictureToggle","currentTimeDisplay","durationDisplay","timeDivider","volumePanel","inline","chromecastButton","children","userActions","hotkeys","backward","forward","html5","vhs","overrideNative","cacheEncryptionKeys","eme","bindEvents","playConfig","firstPlayingEvent","currentSrc","articlePlayConfig","default","hlsSources","entitlements","entitlement","configureHLSOnly","playSources","map","emeOptions","protectionInfo","p","keySystems","keyDeliveryUrl","emeHeaders","Authorization","authenticationToken","certificateUri","certificateUrl","getContentId","uri","link","href","hostname","getHostnameFromUri","getLicense","contentId","keyMessage","callback","payload","a","b","c","d","byteLength","charAt","binaryToBase64","encodeURIComponent","xhr","responseType","httpHandler","String","fromCharCode","Uint8Array","trim","ArrayBuffer","f","g","h","buffer","base64ToBinary","parseLicenseResponse","getEmeOptionsFromEntitlement","src","playOption","fullscreen","requestFullscreen","subtitles","addRemoteTextTrack","srclang","subtitleLocale","setPoster","posterUrl","poster","ended","getPlayer","checkSelectedTracks","audioTrackList","setDefaultAudioTrack","setDefaultTextTrack","metadataLoaded","setTimeout","selectedAudioTrack","selectedTextTrack","currentTextTrack","currentAudioTrack","audioLocale","trackLocale","ArticlePlayErrors","toFile","file","url","base_url","fileName","file_name","toPlayConfigError","code","offlineError","notAuthenticated","needEntitlement","noPlayableAsset","maxConcurrentStreamNumberError","serverError","ChromecastSender","castContext","castPlayer","castPlayerController","supportsHDR","chromecastReceiverAppId","Promise","resolve","reject","isAvailable","cast","framework","chrome","initializeCastApi","scriptElement","async","head","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","AutoJoinPolicy","ORIGIN_SCOPED","RemotePlayer","RemotePlayerController","RemotePlayerEventType","IS_CONNECTED_CHANGED","isConnected","getCurrentSession","addMessageListener","namespace","message","capabilities","parse","is_hdr_supported","onConnectedListener","doCallback","device","getCastDevice","connected","friendlyName","onMediaInfoListener","PLAYER_STATE_CHANGED","playerState","info","isMediaLoaded","mediaInfo","customData","extraInfo","onCurrentTimeListener","CURRENT_TIME_CHANGED","media","PlayerState","IDLE","getSupportsHDR","getCastMediaInfo","article","option","trackId","castTrack","Track","TrackType","TEXT","trackContentId","trackContentType","subtype","TextTrackType","SUBTITLES","name","contentType","supportedContentTypes","includes","protectionConfig","protection","token","MediaInfo","streamType","StreamType","BUFFERED","metadata","GenericMediaMetadata","metadataType","MetadataType","GENERIC","title","metas","getArticleTitle","licenceUrlParam","getLicenseUrlFromSrc","audieLocaleParam","preferredAudioLocale","extraInfoParam","licenseUrl","castVideo","continueFromPreviousPosition","castSession","request","LoadRequest","activeTrackIds","loadMedia","stopMedia","getMediaSession","StopRequest","endSession","stopCasting","getCastPlayer","getCastPlayerController","graphRequest","apiFetchUrl","query","variables","json","ApiService","setToken","getArticleAssetPlayConfig","articleId","assetId","protocols","data","errors","config","issued_at","configEntitlements","encryption_type","dashWidevine","protocol","mssPlayReady","configEntitlement","manifest","mime_type","key_delivery_url","fairplay_certificate_url","locale_label","article_id","asset_id","user_subtitle_locale","user_audio_locale","isNaN","aspectRatio","aspect_ratio","toPlayConfig","ArticleAssetPlay","getArticle","Article","reduce","metaObj","value","posters","images","EmbedPlayer","properties","apiBaseUrl","apiService","videoPlayer","castSender","initVideoPlayer","setVideoPlayerPoster","setVideoPlayerPosterFromArticle","posterSize","fileData","size","width","height","getResizedUrl","getArticleBackgroundImage","playParams","playVideo","console","getVideoPlayer","initChromecast","appendChromecastButton","castButtonContaner","castButton","all","getCastSender","ChromecastControls","controller","playerController","totalDuration","currentStatus","createChromecastControlsTemplate","setPlayButtonClass","bindEventsToControls","setProgressBarValues","MEDIA_INFO_CHANGED","rootElement","renderTracks","checkChromecastContainerVisibility","HTMLElement","insertAdjacentHTML","playAndPauseButton","getElement","PAUSED","classList","playPause","bindEventsToMenu","seek","target","buttonSelector","containerEl","buttonEl","menuEl","defaultPrevented","toggleMenu","add","remove","sessionMediaInfo","getTracksByType","trackButton","audioButton","audioTracksContainerElement","textTracksContainerElement","getTracksList","tracksListElement","setActiveTrack","listItemElement","active","innerText","getActiveTracksByType","getTransformedDurationValue","hours","floor","minutes","seconds","round","result","currentTimeElement","totalTimeElement","progressBarElement","progressLeftEl","max","style","offsetWidth","playOrPause","HTMLLIElement","nodeName","preventDefault","stopPropagation","selectedTrackId","newActiveTracks","setActiveTracks","trackIds","tracksInfoRequest","EditTracksInfoRequest","editTracksInfo","contains","removeAttribute","focus"],"sourceRoot":""}