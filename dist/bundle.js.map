{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://audienceplayer-embed-player/webpack/bootstrap","webpack://audienceplayer-embed-player/webpack/runtime/define property getters","webpack://audienceplayer-embed-player/webpack/runtime/hasOwnProperty shorthand","webpack://audienceplayer-embed-player/./node_modules/detect-browser/es/index.js","webpack://audienceplayer-embed-player/./src/models/player.ts","webpack://audienceplayer-embed-player/./src/models/play-config.ts","webpack://audienceplayer-embed-player/./src/logging/player-log-processor.ts","webpack://audienceplayer-embed-player/./src/logging/player-logger-service.ts","webpack://audienceplayer-embed-player/./src/video-player/video-player.ts","webpack://audienceplayer-embed-player/./src/utils/platform.ts","webpack://audienceplayer-embed-player/./src/utils/eme.ts","webpack://audienceplayer-embed-player/./src/api/converters.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-sender.ts","webpack://audienceplayer-embed-player/./src/api/graph-request.ts","webpack://audienceplayer-embed-player/./src/api/api-service.ts","webpack://audienceplayer-embed-player/./src/api/queries.ts","webpack://audienceplayer-embed-player/./src/embed-player.ts","webpack://audienceplayer-embed-player/./src/chromecast/chromecast-controls.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","export var PlayingState;\n(function (PlayingState) {\n    PlayingState[PlayingState[\"loading\"] = 0] = \"loading\";\n    PlayingState[PlayingState[\"playing\"] = 1] = \"playing\";\n    PlayingState[PlayingState[\"paused\"] = 2] = \"paused\";\n    PlayingState[PlayingState[\"idle\"] = 3] = \"idle\";\n    PlayingState[PlayingState[\"buffering\"] = 4] = \"buffering\";\n    PlayingState[PlayingState[\"error\"] = 5] = \"error\";\n})(PlayingState || (PlayingState = {}));\nexport class PlayerLogPayload {\n}\n// generic abstraction of player events that are taken from the video player, Chromecast and mobile implementations\nexport var PlayerEventTypes;\n(function (PlayerEventTypes) {\n    PlayerEventTypes[\"playStart\"] = \"playStart\";\n    PlayerEventTypes[\"playing\"] = \"playing\";\n    PlayerEventTypes[\"pause\"] = \"pause\";\n    PlayerEventTypes[\"error\"] = \"error\";\n    PlayerEventTypes[\"stopped\"] = \"stopped\";\n    PlayerEventTypes[\"timeupdate\"] = \"timeupdate\";\n    PlayerEventTypes[\"textTrackChanged\"] = \"textTrackChanged\";\n    PlayerEventTypes[\"audioTrackChanged\"] = \"audioTrackChanged\";\n})(PlayerEventTypes || (PlayerEventTypes = {}));\nexport var PlayerDeviceTypes;\n(function (PlayerDeviceTypes) {\n    PlayerDeviceTypes[\"chromecast\"] = \"chromecast\";\n    PlayerDeviceTypes[\"default\"] = \"\";\n})(PlayerDeviceTypes || (PlayerDeviceTypes = {}));\nexport var PlayerEventTypePayloads;\n(function (PlayerEventTypePayloads) {\n    PlayerEventTypePayloads[\"play\"] = \"play\";\n    PlayerEventTypePayloads[\"playing\"] = \"playing\";\n    PlayerEventTypePayloads[\"paused\"] = \"paused\";\n    PlayerEventTypePayloads[\"stop\"] = \"stop\";\n    PlayerEventTypePayloads[\"error\"] = \"error\";\n    PlayerEventTypePayloads[\"configure\"] = \"configure\";\n})(PlayerEventTypePayloads || (PlayerEventTypePayloads = {}));\nexport var PulseMode;\n(function (PulseMode) {\n    PulseMode[\"live\"] = \"live\";\n    PulseMode[\"archive\"] = \"archive\";\n    PulseMode[\"offline\"] = \"offline\";\n})(PulseMode || (PulseMode = {}));\n","export var ArticlePlayErrors;\n(function (ArticlePlayErrors) {\n    ArticlePlayErrors[\"noPlayableAsset\"] = \"noPlayableAsset\";\n    ArticlePlayErrors[\"notAuthenticated\"] = \"notAuthenticated\";\n    ArticlePlayErrors[\"needEntitlement\"] = \"needEntitlement\";\n    ArticlePlayErrors[\"serverError\"] = \"serverError\";\n    ArticlePlayErrors[\"offlineError\"] = \"offlineError\";\n    ArticlePlayErrors[\"maxConcurrentStreamNumberError\"] = \"maxConcurrentStreamNumberError\";\n})(ArticlePlayErrors || (ArticlePlayErrors = {}));\n","import { PlayerEventTypePayloads, PlayerEventTypes, PlayingState, PulseMode, } from '../models/player';\nconst MAX_EVENTS = 30;\nexport class PlayerLogProcessor {\n    constructor(baseUrl, projectId) {\n        this.playLogs = [];\n        this.apiCallInProgress = false;\n        this.intervalHandle = null;\n        this.apiUrl = `${baseUrl}/service/${projectId}/analytics/stream/pulse/log`.replace(/\\/*$/, '');\n    }\n    init() {\n        if (this.intervalHandle === null) {\n            this.intervalHandle = setInterval(() => {\n                this.processFirstPlayLog();\n            }, 3000);\n        }\n    }\n    destroy() {\n        if (this.intervalHandle) {\n            clearInterval(this.intervalHandle);\n        }\n    }\n    processPlaySession(playSession, timeStamp) {\n        if (!playSession) {\n            return;\n        }\n        const eventStack = playSession.eventStack;\n        if (eventStack.length === 0) {\n            return;\n        }\n        const eventStackPayload = [];\n        let i = 0, sumDelta = 0, lastEventWasProcessed = false;\n        while (i < eventStack.length) {\n            const currentEvent = eventStack[i];\n            if (this.isEventTypeWithoutTimeDelta(currentEvent.eventType)) {\n                // directly process these events. they have no sumDelta and do not affect the play state\n                eventStackPayload.push(this.convertEventToEventPayload(currentEvent));\n                lastEventWasProcessed = true;\n            }\n            else {\n                lastEventWasProcessed = false;\n                if (i - 1 >= 0) {\n                    const previousEvent = eventStack[i - 1];\n                    sumDelta += currentEvent.timeStamp - previousEvent.timeStamp;\n                    if (currentEvent.state !== previousEvent.state) {\n                        eventStackPayload.push(this.createDeltaEventPayload(previousEvent, previousEvent.timeStamp, sumDelta));\n                        sumDelta = 0;\n                    }\n                }\n            }\n            i++;\n        }\n        const lastEvent = eventStack[eventStack.length - 1];\n        if (sumDelta > 0 || !lastEventWasProcessed) {\n            eventStackPayload.push(this.createDeltaEventPayload(lastEvent, timeStamp, sumDelta));\n        }\n        if (eventStackPayload.length > 0) {\n            if (eventStackPayload.length > MAX_EVENTS) {\n                // if event stack too big, add error with runaway info and slice nr of items\n                const lastLogEvent = eventStackPayload[eventStackPayload.length - 1];\n                eventStackPayload.splice(MAX_EVENTS - 1);\n                lastLogEvent.event_type = PlayerEventTypePayloads.error;\n                lastLogEvent.event_payload = '{code: 429, message: \"Too many events\"}'; // runaway\n                eventStackPayload.push(lastLogEvent);\n            }\n            // check if there is already a log for this session\n            let playLogPayload = this.getPlayerLogPayloadWithPulseToken(playSession.pulseToken);\n            if (!playLogPayload) {\n                playLogPayload = {\n                    event_stack: [],\n                    pulse_token: playSession.pulseToken,\n                    pulse_mode: playSession.isLive ? PulseMode.live : PulseMode.offline,\n                    device_type: playSession.deviceType,\n                };\n                this.playLogs.push(playLogPayload);\n            }\n            // keep the event_stack pointer in tact by using push\n            eventStackPayload.forEach(e => playLogPayload.event_stack.push(e));\n            this.processPlayLog(playLogPayload, playSession);\n        }\n    }\n    processFirstPlayLog() {\n        if (this.playLogs.length > 0) {\n            this.processPlayLog(this.playLogs[0], null);\n        }\n    }\n    processPlayLog(currentLog, playSession) {\n        if (!currentLog || this.apiCallInProgress) {\n            return;\n        }\n        if (currentLog.event_stack.length === 0) {\n            this.removePlayLog(currentLog);\n            return;\n        }\n        const logToSend = {\n            ...currentLog,\n            event_stack: [],\n        };\n        let eventStackIndex = 0, isStopCutOff = false;\n        while (eventStackIndex < currentLog.event_stack.length && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            const currentEvent = currentLog.event_stack[eventStackIndex];\n            eventStackIndex++;\n            logToSend.event_stack.push(currentEvent);\n            if (currentEvent.event_type === PlayerEventTypePayloads.stop) {\n                isStopCutOff = true;\n            }\n        }\n        // for offline logging, always accumulate until MAX_EVENTS before sending unless it's a stop cut off.\n        if (logToSend.pulse_mode === PulseMode.offline && logToSend.event_stack.length < MAX_EVENTS && !isStopCutOff) {\n            return;\n        }\n        // transaction start\n        this.apiCallInProgress = true;\n        return fetch(this.apiUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            },\n            body: JSON.stringify(logToSend),\n        })\n            .then(() => {\n            return true;\n        })\n            .catch(error => {\n            return error.status !== 0;\n        })\n            .then(response => {\n            if (response) {\n                currentLog.event_stack.splice(0, eventStackIndex);\n                if (currentLog.event_stack.length === 0) {\n                    this.removePlayLog(currentLog);\n                }\n            }\n            else {\n                currentLog.pulse_mode = PulseMode.archive;\n            }\n            this.apiCallInProgress = false;\n        });\n    }\n    getPlayerLogPayloadWithPulseToken(pulseToken) {\n        return this.playLogs.find(log => log.pulse_token === pulseToken);\n    }\n    removePlayLog(logPayload) {\n        const index = this.playLogs.findIndex(log => log.pulse_token === logPayload.pulse_token);\n        if (index >= 0) {\n            this.playLogs.splice(index, 1);\n        }\n    }\n    isEventTypeWithoutTimeDelta(eventType) {\n        return [PlayerEventTypes.textTrackChanged, PlayerEventTypes.audioTrackChanged, PlayerEventTypes.playStart].indexOf(eventType) >= 0;\n    }\n    createBaseEventPayload(playerEvent, eventType) {\n        return {\n            timestamp: playerEvent.timeStamp,\n            event_type: eventType,\n            appa: playerEvent.playPosition,\n            appr: Math.min(playerEvent.playPosition / playerEvent.mediaDuration, 1),\n        };\n    }\n    convertEventToEventPayload(playerEvent) {\n        if (playerEvent.eventType === PlayerEventTypes.playStart) {\n            return {\n                timestamp: playerEvent.timeStamp,\n                event_type: PlayerEventTypePayloads.play,\n            };\n        }\n        const eventType = this.convertEventTypeToEventTypePayload(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.audioTrackChanged:\n                return {\n                    ...baseEvent,\n                    audio_locale: playerEvent.audioTrack,\n                };\n            case PlayerEventTypes.textTrackChanged:\n                return {\n                    ...baseEvent,\n                    subtitle_locale: playerEvent.textTrack,\n                };\n            default:\n                return baseEvent;\n        }\n    }\n    createDeltaEventPayload(playerEvent, timestamp, timeDelta) {\n        const eventType = this.getEventTypePayloadFromEventState(playerEvent);\n        const baseEvent = this.createBaseEventPayload(playerEvent, eventType);\n        const errorPart = playerEvent.state === PlayingState.error ? { event_payload: playerEvent.error } : {};\n        return {\n            ...baseEvent,\n            ...errorPart,\n            timestamp,\n            time_delta: timeDelta / 1000,\n        };\n    }\n    getEventTypePayloadFromEventState(playerEvent) {\n        switch (playerEvent.state) {\n            case PlayingState.playing:\n                return PlayerEventTypePayloads.playing;\n            case PlayingState.paused:\n                return PlayerEventTypePayloads.paused;\n            case PlayingState.error:\n                return PlayerEventTypePayloads.error;\n            case PlayingState.buffering:\n            case PlayingState.loading:\n                return PlayerEventTypePayloads.paused; // buffering and loading converted to paused for API\n            case PlayingState.idle:\n                return PlayerEventTypePayloads.stop;\n        }\n    }\n    convertEventTypeToEventTypePayload(playerEvent) {\n        switch (playerEvent.eventType) {\n            case PlayerEventTypes.playStart:\n                return PlayerEventTypePayloads.play;\n            case PlayerEventTypes.audioTrackChanged:\n            case PlayerEventTypes.textTrackChanged:\n                return PlayerEventTypePayloads.configure;\n            // because e.g. `timeupdate` events can happen while paused / playing, base the rest on state.\n            default: {\n                this.getEventTypePayloadFromEventState(playerEvent);\n            }\n        }\n    }\n}\n","import { PlayerLogProcessor } from './player-log-processor';\nimport { PlayerEventTypes, PlayingState } from '../models/player';\nexport class PlayerLoggerService {\n    constructor(baseUrl, projectId) {\n        this.intervalHandle = 0;\n        this.playerLogProcessor = new PlayerLogProcessor(baseUrl, projectId);\n        this.reset();\n    }\n    init() {\n        this.playerLogProcessor.init();\n    }\n    destroy() {\n        this.playerLogProcessor.destroy();\n    }\n    onStart(pulseToken, deviceType, localTimeDelta, isLive, onStopCallback) {\n        this.reset();\n        this.playSession = {\n            pulseToken,\n            deviceType,\n            eventStack: [],\n            localTimeDelta,\n            isLive,\n            onStopCallback,\n        };\n    }\n    onCurrentTimeUpdated(currentTime) {\n        this.playerProperties.playPosition = currentTime;\n        if (this.playerProperties.mediaDuration > 0 && this.playerProperties.state !== PlayingState.idle) {\n            this.logEvent(PlayerEventTypes.timeupdate);\n        }\n    }\n    onDurationUpdated(duration) {\n        this.playerProperties.mediaDuration = duration;\n    }\n    onPlaying() {\n        if (this.playerProperties.state !== PlayingState.playing) {\n            if (this.playerProperties.state === PlayingState.idle) {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playStart);\n                this.processPlaySession();\n                this.startInterval();\n            }\n            else {\n                this.playerProperties.state = PlayingState.playing;\n                this.logEvent(PlayerEventTypes.playing);\n            }\n        }\n    }\n    onPause() {\n        if (this.playerProperties.state !== PlayingState.paused) {\n            this.playerProperties.state = PlayingState.paused;\n            this.logEvent(PlayerEventTypes.pause);\n        }\n    }\n    onError(error) {\n        if (this.playerProperties.state !== PlayingState.error) {\n            this.playerProperties.state = PlayingState.error;\n            this.playerProperties.error = error;\n            this.logEvent(PlayerEventTypes.error);\n        }\n    }\n    onStop() {\n        if (this.playerProperties.state !== PlayingState.idle) {\n            this.playerProperties.state = PlayingState.idle;\n            this.logEvent(PlayerEventTypes.stopped);\n            this.stopInterval();\n            this.processPlaySession();\n        }\n    }\n    onTextTrackChanged(textTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.textTrack = textTrack;\n        this.logEvent(PlayerEventTypes.textTrackChanged);\n    }\n    onAudioTrackChanged(audioTrack) {\n        if (this.playerProperties.state === PlayingState.idle) {\n            return;\n        }\n        this.playerProperties.audioTrack = audioTrack;\n        this.logEvent(PlayerEventTypes.audioTrackChanged);\n    }\n    updateProperties(playerProperties) {\n        this.playerProperties = {\n            ...this.playerProperties,\n            ...playerProperties,\n        };\n    }\n    startInterval() {\n        this.stopInterval();\n        // @ts-ignore\n        this.intervalHandle = setInterval(() => {\n            this.processPlaySession();\n        }, 30000);\n    }\n    stopInterval() {\n        if (this.intervalHandle) {\n            clearInterval(this.intervalHandle);\n        }\n    }\n    processPlaySession() {\n        this.playerLogProcessor.processPlaySession({ ...this.playSession }, this.getTimeStamp());\n        this.playSession.eventStack = [];\n    }\n    logEvent(eventType) {\n        if (this.playSession) {\n            this.playSession.eventStack.push({\n                ...this.playerProperties,\n                eventType,\n                timeStamp: this.getTimeStamp(),\n            });\n        }\n    }\n    reset() {\n        this.playSession = null;\n        this.playerProperties = {\n            state: PlayingState.idle,\n            error: null,\n            mediaDuration: 0,\n            playPosition: 0,\n            audioTrack: null,\n            textTrack: null,\n        };\n    }\n    getTimeStamp() {\n        return Date.now() - (this.playSession ? this.playSession.localTimeDelta : 0);\n    }\n}\n","import { willPlayHls } from '../utils/platform';\nimport { PlayerLoggerService } from '../logging/player-logger-service';\nimport { PlayerDeviceTypes } from '../models/player';\nimport { getEmeOptionsFromEntitlement } from '../utils/eme';\nexport class VideoPlayer {\n    constructor(baseUrl, projectId) {\n        this.player = null;\n        this.playerLoggerService = new PlayerLoggerService(baseUrl, projectId);\n    }\n    init(selector, options) {\n        this.destroy();\n        const videoContainer = selector instanceof Element ? selector : document.querySelector(selector);\n        if (!videoContainer) {\n            throw Error('Invalid selector or element for player');\n        }\n        this.playerLoggerService.init();\n        const videoElement = document.createElement('video');\n        videoElement.setAttribute('class', ['video-js', 'vjs-default-skin'].join(' '));\n        videoElement.setAttribute('tabIndex', '0');\n        videoElement.setAttribute('width', '100%');\n        videoElement.setAttribute('height', '100%');\n        videoContainer.appendChild(videoElement);\n        const playOptions = {\n            fluid: true,\n            autoplay: true,\n            controls: true,\n            controlBar: {\n                pictureInPictureToggle: false,\n                currentTimeDisplay: true,\n                durationDisplay: true,\n                timeDivider: false,\n                skipButtons: {\n                    forward: 5,\n                },\n                volumePanel: {\n                    inline: false,\n                },\n                // order of elements:\n                children: [\n                    'playToggle',\n                    'currentTimeDisplay',\n                    //\"timeDivider\",\n                    'progressControl',\n                    'durationDisplay',\n                    'liveDisplay',\n                    //\"remainingTimeDisplay\",\n                    'customControlSpacer',\n                    'playbackRateMenuButton',\n                    'chaptersButton',\n                    'descriptionsButton',\n                    'subtitlesButton',\n                    'captionsButton',\n                    'audioTrackButton',\n                    'volumePanel',\n                    'fullscreenToggle',\n                ],\n            },\n            aspectRatio: '16:9',\n            ...options,\n        };\n        this.player = videojs(videoElement, playOptions);\n        this.player.eme();\n        this.bindEvents();\n    }\n    play(playConfig, autoplay, fullscreen) {\n        this.firstPlayingEvent = true;\n        if (this.player.currentSrc()) {\n            throw Error('VideoPlayer.play was called without init()');\n        }\n        this.articlePlayConfig = playConfig;\n        this.playerLoggerService.onStart(playConfig.pulseToken, PlayerDeviceTypes.default, playConfig.localTimeDelta, true);\n        const hlsSources = playConfig.entitlements.filter(entitlement => entitlement.type === 'application/vnd.apple.mpegurl');\n        const configureHLSOnly = willPlayHls() && hlsSources.length > 0; // make sure there is actually HLS\n        const playSources = playConfig.entitlements\n            .map(entitlement => {\n            const emeOptions = getEmeOptionsFromEntitlement(entitlement);\n            return {\n                src: entitlement.src,\n                type: entitlement.type,\n                ...emeOptions,\n            };\n        })\n            .filter(playOption => {\n            return (playOption.type === 'application/vnd.apple.mpegurl' && configureHLSOnly) || !configureHLSOnly;\n        });\n        if (playConfig.aspectRatio !== '16:9') {\n            this.player.aspectRatio = playConfig.aspectRatio;\n        }\n        this.player.src(playSources);\n        this.player.autoplay(autoplay);\n        if (fullscreen) {\n            this.player.requestFullscreen();\n        }\n        if (!configureHLSOnly) {\n            // non HLS only needs the text tracks\n            playConfig.subtitles.forEach(track => {\n                this.player.addRemoteTextTrack({\n                    kind: track.kind,\n                    src: track.src,\n                    srclang: track.srclang,\n                    label: track.label,\n                    enabled: track.srclang === playConfig.subtitleLocale,\n                });\n            });\n        }\n    }\n    setPoster(posterUrl) {\n        this.player.poster(posterUrl);\n    }\n    destroy() {\n        if (this.player) {\n            if (false === this.player.ended()) {\n                this.player.pause();\n                // only if we have not already caught the 'ended' event\n                // Be aware that the `stopped` emit also send along all kinds of info, so call _before_ disposing player\n                this.playerLoggerService.onStop();\n            }\n            this.player.dispose();\n        }\n        this.playerLoggerService.destroy();\n    }\n    getPlayer() {\n        return this.player;\n    }\n    bindEvents() {\n        // same trick as azure media player; set label to language\n        this.player.on('loadeddata', () => {\n            const audioTracks = this.player.audioTracks();\n            for (let i = 0; i < audioTracks.length; i++) {\n                const element = audioTracks[i];\n                try {\n                    // readonly property in some cases\n                    element.label = element.language;\n                }\n                catch (e) { }\n            }\n        });\n        this.player.on('error', () => {\n            this.playerLoggerService.onError(JSON.stringify(this.player.error()));\n        });\n        this.player.on('playing', () => {\n            if (this.firstPlayingEvent) {\n                this.firstPlayingEvent = false;\n                if (this.articlePlayConfig.currentTime > 0) {\n                    this.player.currentTime(this.articlePlayConfig.currentTime);\n                }\n            }\n            this.checkSelectedTracks();\n            this.playerLoggerService.onPlaying();\n        });\n        this.player.on('pause', () => {\n            this.checkSelectedTracks();\n            if (this.player.paused() && !this.player.ended()) {\n                this.playerLoggerService.onPause();\n            }\n        });\n        this.player.on('ended', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onStop();\n        });\n        this.player.on('timeupdate', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onCurrentTimeUpdated(this.player.currentTime() || 0);\n        });\n        this.player.on('durationchange', () => {\n            this.checkSelectedTracks();\n            this.playerLoggerService.onDurationUpdated(this.player.duration());\n        });\n        this.player.on('loadedmetadata', () => {\n            const audioTrackList = this.player.audioTracks();\n            if (audioTrackList && audioTrackList.length > 0) {\n                // set default tracks when available\n                this.setDefaultAudioTrack();\n                this.setDefaultTextTrack();\n                this.metadataLoaded = true;\n            }\n            else {\n                // unfortunately there is no reliable way to know when iOS native binding to text-tracks is done\n                // (even after first play event, this is not true), so we resort to an old fashioned timeout\n                setTimeout(() => {\n                    this.setDefaultAudioTrack();\n                    this.setDefaultTextTrack();\n                    this.metadataLoaded = true;\n                }, 1000);\n            }\n        });\n    }\n    checkSelectedTracks() {\n        if (!this.metadataLoaded) {\n            return false;\n        }\n        let selectedAudioTrack = '';\n        let selectedTextTrack = '';\n        const tracks = this.player.textTracks();\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i].mode === 'showing' && tracks[i].kind === 'subtitles') {\n                selectedTextTrack = tracks[i].language;\n            }\n        }\n        const audioTracks = this.player.audioTracks();\n        for (let i = 0; i < audioTracks.length; i++) {\n            if (audioTracks[i].enabled) {\n                selectedAudioTrack = audioTracks[i].language;\n                break;\n            }\n        }\n        this.playerLoggerService.updateProperties({\n            textTrack: selectedTextTrack,\n            audioTrack: selectedAudioTrack,\n        });\n        if (this.currentTextTrack !== null && this.currentTextTrack !== selectedTextTrack) {\n            this.playerLoggerService.onTextTrackChanged(selectedTextTrack);\n        }\n        this.currentTextTrack = selectedTextTrack;\n        if (this.currentAudioTrack !== null && this.currentAudioTrack !== selectedAudioTrack) {\n            this.playerLoggerService.onAudioTrackChanged(selectedAudioTrack);\n        }\n        this.currentAudioTrack = selectedAudioTrack;\n    }\n    setDefaultTextTrack() {\n        if (this.articlePlayConfig.subtitleLocale) {\n            const tracks = this.player.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                // textTracks is not a real array so no iterators here\n                if (tracks[i].mode !== 'disabled') {\n                    tracks[i].mode = 'disabled';\n                }\n            }\n            // it must be split up in to two loops, because two 'showing' items will break\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i].language === this.articlePlayConfig.subtitleLocale.toLowerCase() && tracks[i].kind === 'subtitles') {\n                    tracks[i].mode = 'showing';\n                    break;\n                }\n            }\n        }\n    }\n    setDefaultAudioTrack() {\n        if (this.articlePlayConfig.audioLocale) {\n            const audioTracks = this.player.audioTracks();\n            for (let i = 0; i < audioTracks.length; i++) {\n                if ((this.articlePlayConfig.audioLocale && audioTracks[i].language === this.articlePlayConfig.audioLocale.toLowerCase()) ||\n                    (this.articlePlayConfig.audioLocale === '' && i === 0)) {\n                    audioTracks[i].enabled = true;\n                    break;\n                }\n            }\n        }\n    }\n}\n","import { parseUserAgent } from 'detect-browser';\nexport function willPlayHls() {\n    const browser = parseUserAgent(navigator.userAgent);\n    return browser && (browser.name === 'safari' || browser.name === 'ios');\n}\n","export function getEmeOptionsFromEntitlement(entitlement) {\n    let protectionInfo = null;\n    let emeOptions = {};\n    if (entitlement.protectionInfo) {\n        switch (entitlement.type) {\n            case 'application/dash+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'Widevine');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.widevine.alpha': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.ms-sstr+xml':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'PlayReady');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.microsoft.playready': protectionInfo.keyDeliveryUrl,\n                        },\n                        emeHeaders: {\n                            Authorization: protectionInfo.authenticationToken,\n                        },\n                    };\n                }\n                break;\n            case 'application/vnd.apple.mpegurl':\n                protectionInfo = entitlement.protectionInfo.find(p => p.type === 'FairPlay');\n                if (protectionInfo) {\n                    emeOptions = {\n                        keySystems: {\n                            'com.apple.fps.1_0': {\n                                certificateUri: protectionInfo.certificateUrl,\n                                getContentId: function () {\n                                    return getHostnameFromUri(protectionInfo.keyDeliveryUrl);\n                                },\n                                getLicense: function (emeOptions, contentId, keyMessage, callback) {\n                                    const payload = 'spc=' + binaryToBase64(keyMessage) + '&assetId=' + encodeURIComponent(contentId);\n                                    videojs.xhr({\n                                        uri: protectionInfo.keyDeliveryUrl,\n                                        method: 'post',\n                                        headers: {\n                                            'Content-type': 'application/x-www-form-urlencoded',\n                                            Authorization: protectionInfo.authenticationToken,\n                                        },\n                                        body: payload,\n                                        responseType: 'arraybuffer',\n                                    }, videojs.xhr.httpHandler(function (err, response) {\n                                        callback(null, parseLicenseResponse(response));\n                                    }, true));\n                                },\n                            },\n                        },\n                    };\n                }\n                break;\n        }\n    }\n    return emeOptions;\n}\nexport function binaryToBase64(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = [];\n    for (let d = 0; d < a.byteLength;) {\n        let e = a[d++];\n        c.push(b.charAt(e >> 2)),\n            (e = (3 & e) << 4),\n            d < a.byteLength\n                ? (c.push(b.charAt(e | (a[d] >> 4))),\n                    (e = (15 & a[d++]) << 2),\n                    d < a.byteLength\n                        ? (c.push(b.charAt(e | (a[d] >> 6))), c.push(b.charAt(63 & a[d++])))\n                        : (c.push(b.charAt(e)), c.push('=')))\n                : (c.push(b.charAt(e)), c.push('=='));\n    }\n    return c.join('');\n}\nexport function base64ToBinary(a) {\n    let b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', c = new Uint8Array(new ArrayBuffer((3 * a.length) / 4 + 4)), e = 0;\n    for (let d = 0; d < a.length;) {\n        let f = b.indexOf(a.charAt(d)), g = b.indexOf(a.charAt(d + 1));\n        if (((c[e++] = (f << 2) | (g >> 4)), '=' !== a.charAt(d + 2))) {\n            let h = b.indexOf(a.charAt(d + 2));\n            if (((c[e++] = (g << 4) | (h >> 2)), '=' !== a.charAt(d + 3))) {\n                let i = b.indexOf(a.charAt(d + 3));\n                c[e++] = (h << 6) | i;\n            }\n        }\n        d += 4;\n    }\n    return new Uint8Array(c.buffer, 0, e);\n}\nexport function parseLicenseResponse(response) {\n    const responseBody = String.fromCharCode.apply(null, new Uint8Array(response));\n    let b = responseBody.trim(), c = b.indexOf('<ckc>'), d = b.indexOf('</ckc>');\n    if (-1 === c || -1 === d) {\n        throw Error('License data format not as expected, missing or misplaced <ckc> tag');\n    }\n    c += 5;\n    b = b.substr(c, d - c);\n    return base64ToBinary(b);\n}\nexport function getHostnameFromUri(uri) {\n    let link = document.createElement('a');\n    link.href = uri;\n    return link.hostname;\n}\n","import { ArticlePlayErrors } from '../models/play-config';\nexport function toPlayConfig(config, continueFromPreviousPosition) {\n    const timeStamp = Date.parse(config.issued_at);\n    const entitlements = [];\n    // check if the entitlements contain FPS in order to know when to filter out aes\n    const filterAES = !!config.entitlements.find((entitlement) => entitlement.encryption_type === 'fps');\n    const configEntitlements = filterAES\n        ? config.entitlements.filter((entitlement) => {\n            return entitlement.encryption_type !== 'aes';\n        })\n        : config.entitlements;\n    const dashWidevine = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('dash') === 0);\n    const mssPlayReady = configEntitlements.find((entitlement) => !!entitlement.token && entitlement.encryption_type === 'cenc' && entitlement.protocol.indexOf('mss') === 0);\n    configEntitlements.forEach((configEntitlement) => {\n        const entitlement = {\n            src: configEntitlement.manifest,\n            type: configEntitlement.mime_type,\n            protectionInfo: null,\n        };\n        if (configEntitlement.token) {\n            entitlement.protectionInfo = [];\n            if (configEntitlement.encryption_type === 'cenc') {\n                if (!!dashWidevine) {\n                    entitlement.protectionInfo.push({\n                        type: 'Widevine',\n                        authenticationToken: 'Bearer ' + dashWidevine.token,\n                        keyDeliveryUrl: dashWidevine.key_delivery_url,\n                    });\n                }\n                if (!!mssPlayReady) {\n                    entitlement.protectionInfo.push({\n                        type: 'PlayReady',\n                        authenticationToken: 'Bearer=' + mssPlayReady.token,\n                        keyDeliveryUrl: mssPlayReady.key_delivery_url,\n                    });\n                }\n            }\n            else if (configEntitlement.encryption_type === 'fps') {\n                entitlement.protectionInfo = [\n                    {\n                        type: 'FairPlay',\n                        authenticationToken: 'Bearer ' + configEntitlement.token,\n                        certificateUrl: config.fairplay_certificate_url,\n                        keyDeliveryUrl: configEntitlement.key_delivery_url,\n                    },\n                ];\n            }\n        }\n        entitlements.push(entitlement);\n    });\n    const subtitles = config.subtitles.map((item) => ({\n        src: item.url,\n        srclang: item.locale,\n        kind: 'subtitles',\n        label: item.locale_label,\n    }));\n    return {\n        entitlements: entitlements,\n        subtitles: subtitles,\n        pulseToken: config.pulse_token,\n        currentTime: continueFromPreviousPosition ? config.appa : 0,\n        subtitleLocale: config.user_subtitle_locale,\n        audioLocale: config.user_audio_locale,\n        localTimeDelta: isNaN(timeStamp) ? 0 : Date.now() - timeStamp,\n        aspectRatio: config.aspect_ratio,\n    };\n}\nexport function toArticle(article) {\n    return {\n        name: article.name,\n        metas: article.metas,\n        posters: article.posters.map(toFile),\n        images: article.images.map(toFile),\n    };\n}\nexport function toFile(file) {\n    return {\n        type: file.type,\n        url: file.url,\n        baseUrl: file.base_url,\n        fileName: file.file_name,\n    };\n}\nexport function getMetaValue(metas, key) {\n    const meta = metas.find((m) => m.key === key);\n    return meta ? meta.value : '';\n}\nexport function getResizedUrl(fileData, size) {\n    if (fileData) {\n        const { width, height } = size;\n        return `${fileData.baseUrl}/${width}x${height}/${fileData.fileName}`;\n    }\n    return '';\n}\nexport function getArticleTitle(article) {\n    return getMetaValue(article.metas, 'title') || article.name;\n}\nexport function getArticleBackgroundImage(article) {\n    if (article.posters.length > 0) {\n        return article.posters[0];\n    }\n    if (this.article.length > 0) {\n        return article.images[0];\n    }\n    return null;\n}\nexport function toPlayConfigError(code) {\n    switch (code) {\n        case 0:\n            return ArticlePlayErrors.offlineError;\n        case 401:\n            return ArticlePlayErrors.notAuthenticated;\n        case 402:\n            return ArticlePlayErrors.needEntitlement;\n        case 403:\n            return ArticlePlayErrors.notAuthenticated;\n        case 404:\n            return ArticlePlayErrors.noPlayableAsset;\n        case 429:\n            return ArticlePlayErrors.maxConcurrentStreamNumberError;\n        default:\n            return ArticlePlayErrors.serverError;\n    }\n}\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nimport { getArticleTitle } from '../api/converters';\nexport class ChromecastSender {\n    constructor() {\n        this.castContext = null;\n        this.castPlayer = null;\n        this.castPlayerController = null;\n    }\n    init(chromecastReceiverAppId) {\n        return new Promise((resolve, reject) => {\n            if (chromecastReceiverAppId) {\n                window['__onGCastApiAvailable'] = (isAvailable) => {\n                    if (isAvailable && cast && cast.framework) {\n                        this.initializeCastApi(chromecastReceiverAppId);\n                        //Some Chromecast configurations are taking some time to initialize\n                        setTimeout(() => {\n                            resolve();\n                        }, 1000);\n                    }\n                };\n                const scriptElement = document.createElement('script');\n                scriptElement.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';\n                document.head.appendChild(scriptElement);\n            }\n            else {\n                reject('Chromecast Receiver Application Id is missing');\n            }\n        });\n    }\n    initializeCastApi(chromecastReceiverAppId) {\n        cast.framework.CastContext.getInstance().setOptions({\n            receiverApplicationId: chromecastReceiverAppId,\n            autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n        });\n        this.castContext = cast.framework.CastContext.getInstance();\n        this.castPlayer = new cast.framework.RemotePlayer();\n        this.castPlayerController = new cast.framework.RemotePlayerController(this.castPlayer);\n    }\n    getCastMediaInfo(articlePlayConfig, article) {\n        if (articlePlayConfig && articlePlayConfig.entitlements && articlePlayConfig.entitlements.length > 0) {\n            const tracks = articlePlayConfig.subtitles.map((option, index) => {\n                const trackId = index + 1;\n                const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n                castTrack.trackContentId = option.src;\n                castTrack.trackContentType = 'text/vtt';\n                castTrack.subtype = chrome.cast.media.TextTrackType.SUBTITLES;\n                castTrack.name = option.label;\n                castTrack.language = option.srclang;\n                castTrack.customData = null;\n                return castTrack;\n            });\n            let contentType = null;\n            const supportedContentTypes = ['application/vnd.ms-sstr+xml', 'video/mp4'];\n            const entitlement = articlePlayConfig.entitlements.find(item => {\n                if (supportedContentTypes.includes(item.type)) {\n                    contentType = item.type;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n            let protectionConfig = null;\n            if (entitlement) {\n                if (entitlement.protectionInfo) {\n                    protectionConfig = entitlement.protectionInfo.find(protection => {\n                        return protection.type === 'PlayReady';\n                    });\n                }\n                const token = protectionConfig ? protectionConfig.authenticationToken : null;\n                const mediaInfo = new chrome.cast.media.MediaInfo(entitlement.src, contentType);\n                mediaInfo.streamType = chrome.cast.media.StreamType.BUFFERED;\n                mediaInfo.metadata = new chrome.cast.media.GenericMediaMetadata();\n                mediaInfo.metadata.metadataType = chrome.cast.media.MetadataType.GENERIC;\n                mediaInfo.metadata.title = getArticleTitle(article);\n                mediaInfo.tracks = tracks;\n                const licenceUrlParam = token\n                    ? {\n                        ...this.getLicenseUrlFromSrc(protectionConfig.keyDeliveryUrl, token),\n                    }\n                    : {};\n                const audieLocalePram = articlePlayConfig.audioLocale ? { preferredAudioLocale: articlePlayConfig.audioLocale } : {};\n                mediaInfo.customData = {\n                    ...licenceUrlParam,\n                    ...audieLocalePram,\n                    pulseToken: articlePlayConfig.pulseToken,\n                };\n                // @TODO\n                // mediaInfo.currentTime = articlePlayConfig.currentTime;\n                // mediaInfo.autoplay = true;\n                return mediaInfo;\n            }\n        }\n        return null;\n    }\n    getLicenseUrlFromSrc(src, token) {\n        if (token) {\n            const rootSrc = src.includes('?') ? `${src}&token=` : `${src}?token=`;\n            const licenseUrl = rootSrc + encodeURIComponent(token);\n            return {\n                licenseUrl,\n                token,\n            };\n        }\n        return {};\n    }\n    castVideo(playConfig, article, continueFromPreviousPosition) {\n        if (this.isConnected()) {\n            const castSession = this.castContext.getCurrentSession();\n            const mediaInfo = this.getCastMediaInfo(playConfig, article);\n            if (mediaInfo) {\n                const request = new chrome.cast.media.LoadRequest(mediaInfo);\n                request.currentTime = continueFromPreviousPosition ? playConfig.currentTime : 0;\n                if (playConfig.subtitleLocale) {\n                    // can NOT use .filter on tracks because the cast library has patched the Array.\n                    const textTrack = mediaInfo.tracks.find((track) => track.language === playConfig.subtitleLocale);\n                    if (textTrack) {\n                        request.activeTrackIds = [textTrack.trackId];\n                    }\n                }\n                return castSession.loadMedia(request);\n            }\n            else {\n                throw { message: 'Unexpected manifest format in articlePlayConfig' };\n            }\n        }\n    }\n    isConnected() {\n        return this.castPlayer && this.castPlayer.isConnected;\n    }\n    stopCasting() {\n        const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n        if (castSession) {\n            castSession.endSession(true);\n        }\n    }\n    getCastPlayer() {\n        return this.castPlayer;\n    }\n    getCastPlayerController() {\n        return this.castPlayerController;\n    }\n}\n","export function graphRequest(apiFetchUrl, query, variables, token) {\n    const authHeader = token ? { Authorization: 'Bearer ' + token } : {};\n    return fetch(apiFetchUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            ...authHeader,\n        },\n        body: JSON.stringify({\n            query,\n            variables,\n        }),\n    }).then(response => response.json());\n}\n","import { graphRequest } from './graph-request';\nimport { articleAssetPlayMutation, articleQuery } from './queries';\nimport { toArticle, toPlayConfig } from './converters';\nexport class ApiService {\n    constructor(baseUrl, projectId) {\n        this.apiFetchUrl = `${baseUrl}/graphql/${projectId}`.replace(/\\/*$/, '');\n        this.token = null;\n    }\n    setToken(token) {\n        this.token = token;\n    }\n    getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition) {\n        return graphRequest(this.apiFetchUrl, articleAssetPlayMutation, { articleId, assetId, protocols: ['dash', 'mss', 'hls'] }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code }; // @TODO to play config error\n            }\n            return toPlayConfig(response.data.ArticleAssetPlay, continueFromPreviousPosition);\n        });\n    }\n    getArticle(articleId) {\n        return graphRequest(this.apiFetchUrl, articleQuery, { articleId }, this.token).then((response) => {\n            if (!response || !response.data || response.errors) {\n                const { message, code } = response.errors[0];\n                throw { message, code };\n            }\n            return toArticle(response.data.Article);\n        });\n    }\n}\n","export const articleAssetPlayMutation = `\n    mutation ArticleAssetPlay($articleId: Int, $assetId: Int, $protocols: [ArticlePlayProtocolEnum]) {\n        ArticleAssetPlay(article_id: $articleId, asset_id: $assetId, protocols: $protocols) {\n            article_id\n            asset_id\n            entitlements {\n                mime_type\n                protocol\n                manifest\n                token\n                encryption_type\n                key_delivery_url\n            }\n            subtitles {\n                url\n                locale\n                locale_label\n            }\n            pulse_token\n            appa\n            appr\n            fairplay_certificate_url\n            user_subtitle_locale\n            user_audio_locale\n            aspect_ratio\n            issued_at\n        }\n    }\n`;\nexport const articleQuery = `\n    query Article($articleId: Int!) {\n        Article(id: $articleId) {\n            id\n            name\n            metas {\n                key\n                value\n            }\n            assets {\n                id\n                duration\n                linked_type\n                accessibility\n            }\n            posters {\n                type\n                url\n                title\n                base_url\n                file_name\n            }\n            images {\n                type\n                url\n                title\n                base_url\n                file_name\n            }\n        }\n    }\n`;\n","import { VideoPlayer } from './video-player/video-player';\nimport { ChromecastSender } from './chromecast/chromecast-sender';\nimport { ApiService } from './api/api-service';\nimport { getArticleBackgroundImage, getResizedUrl, toPlayConfigError } from './api/converters';\nexport class EmbedPlayer {\n    constructor(properties) {\n        this.projectId = properties.projectId;\n        this.apiBaseUrl = properties.apiBaseUrl;\n        this.chromecastReceiverAppId = properties.chromecastReceiverAppId ? properties.chromecastReceiverAppId : null;\n        this.apiService = new ApiService(this.apiBaseUrl, this.projectId);\n        this.videoPlayer = new VideoPlayer(this.apiBaseUrl, this.projectId);\n        this.castSender = new ChromecastSender();\n    }\n    initVideoPlayer(selector, posterImageUrl = '') {\n        const options = posterImageUrl ? { poster: posterImageUrl } : {};\n        this.videoPlayer.init(selector, options);\n    }\n    setVideoPlayerPoster(posterUrl) {\n        this.videoPlayer.setPoster(posterUrl);\n    }\n    setVideoPlayerPosterFromArticle(articleId, posterSize) {\n        return this.apiService.getArticle(articleId).then(article => {\n            this.videoPlayer.setPoster(getResizedUrl(getArticleBackgroundImage(article), posterSize));\n        });\n    }\n    play(playParams) {\n        if (!playParams.articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!playParams.assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        this.apiService.setToken(playParams.token ? playParams.token : null);\n        return this.apiService\n            .getArticleAssetPlayConfig(playParams.articleId, playParams.assetId, playParams.continueFromPreviousPosition)\n            .then(config => {\n            this.playVideo(config, playParams.autoplay, playParams.fullScreen);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    destroy() {\n        this.videoPlayer.destroy();\n    }\n    playVideo(config, autoplay, fullScreen) {\n        this.videoPlayer.play(config, autoplay, fullScreen);\n    }\n    getVideoPlayer() {\n        this.videoPlayer.getPlayer();\n    }\n    initChromecast() {\n        if (!this.chromecastReceiverAppId) {\n            return Promise.reject('No Chromecast receiver app id');\n        }\n        return this.castSender.init(this.chromecastReceiverAppId);\n    }\n    appendChromecastButton(selector) {\n        const castButtonContaner = selector instanceof Element ? selector : document.querySelector(selector);\n        const castButton = document.createElement('google-cast-launcher');\n        castButtonContaner.appendChild(castButton);\n    }\n    castVideo({ articleId, assetId, token, continueFromPreviousPosition }) {\n        if (!articleId) {\n            return Promise.reject('articleId property is missing');\n        }\n        if (!assetId) {\n            return Promise.reject('assetId property is missing');\n        }\n        this.apiService.setToken(token);\n        return Promise.all([\n            this.apiService.getArticleAssetPlayConfig(articleId, assetId, continueFromPreviousPosition),\n            this.apiService.getArticle(articleId),\n        ])\n            .then(([config, article]) => {\n            this.castSender.castVideo(config, article, continueFromPreviousPosition);\n            return config;\n        })\n            .catch(error => {\n            console.log(toPlayConfigError(error.code));\n            throw error;\n        });\n    }\n    getCastPlayer() {\n        return this.castSender.getCastPlayer();\n    }\n    getCastPlayerController() {\n        return this.castSender.getCastPlayerController();\n    }\n    isConnected() {\n        return this.castSender.isConnected();\n    }\n    stopCasting() {\n        this.castSender.stopCasting();\n    }\n}\n//*** Example of usage ***//\n// const player = new EmbeddablePlayer();\n//\n// player\n//     .play({\n//         selector: '.video-wrapper',\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         posterImageUrl: '',\n//         fullScreen: false\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n//*** Example of usage with chromecast ***//\n// const player = new EmbeddablePlayer();\n// player.setupChromecast(\"#cast-wrapper\", CHROMECAST_RECEIVER_APP_ID);\n//\n// player\n//     .castVideo({\n//         apiBaseUrl: '',\n//         projectId: '',\n//         articleId: '',\n//         assetId: '',\n//         token: '',\n//         continueFromPreviousPosition: true\n//     })\n//     .then(config => {\n//         console.log('Config', config);\n//     })\n//     .catch(error => {\n//         console.log('Error', error);\n//     });\n","/// <reference path=\"../../node_modules/@types/chromecast-caf-sender/index.d.ts\" />\nexport class ChromecastControls {\n    constructor(player, controller, selector) {\n        this.player = player;\n        this.playerController = controller;\n        this.controlInitialized = false;\n        this.totalDuration = player.duration || 0;\n        this.currentTime = player.currentTime || 0;\n        this.currentStatus = player.playerState;\n        this.createChromecastControlsTemplate(selector);\n        this.bindEvents();\n        this.setPlayButtonClass();\n        this.bindEventsToControls();\n        this.setProgressBarValues();\n        this.setTitle();\n    }\n    bindEvents() {\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.MEDIA_INFO_CHANGED, () => {\n            if (this.rootElement && this.player.mediaInfo) {\n                this.renderTracks();\n                this.renderTracksButton();\n                this.setTitle();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentTime = e.value;\n                this.totalDuration = this.player.duration;\n                this.setProgressBarValues();\n            }\n        });\n        this.playerController.addEventListener(cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED, e => {\n            if (this.rootElement) {\n                this.currentStatus = e.value;\n                this.checkChromecastContainerVisibility();\n                this.setPlayButtonClass();\n                this.setProgressBarValues();\n            }\n        });\n        this.checkChromecastContainerVisibility();\n    }\n    createChromecastControlsTemplate(selector) {\n        const chromecastControlsTemplateString = `\n            <div class=\"chromecast-controls\">\n               <div class=\"chromecast-controls__title\"></div>\n               <div class=\"chromecast-controls__progress-bar\">\n                 <div class=\"chromecast-controls__progress-bar__current\"></div>\n                 <input type=\"range\"\n                        value=\"0\"\n                        class=\"chromecast-controls__progress-bar__slider\" \n                        min=\"0\"\n                        max=\"100\"/>\n                 <div class=\"chromecast-controls__progress-bar__total\"></div>\n               </div>\n              <div class=\"chromecast-controls__buttons\">\n                <button class=\"control-button button__play play-pause-button\" type=\"button\"></button>\n                <button class=\"control-button button__stop\" type=\"button\"></button>\n                <div class=\"buttons-container tracks-button-container\" style=\"display: none\">\n                  <button class=\"control-button button__audio-tracks\" type=\"button\"></button>\n                  <div class=\"chromecast-controls__subtitles\" style=\"display: none\">\n                      <div class=\"chromecast-controls__subtitles__close-icon\">&#215;</div>\n                      <div class=\"container-wrapper container-wrapper_audio-tracks\">\n                        <div class=\"list-title\">Audio tracks</div>\n                      </div>\n                      <div class=\"container-wrapper container-wrapper_text-tracks\">\n                        <div class=\"list-title\">Text tracks</div>\n                      </div>\n                  </div>\n                </div>\n               </div>\n            </div>\n        `;\n        const element = !!selector ? document.querySelector(selector) : document.body;\n        element.insertAdjacentHTML('beforeend', chromecastControlsTemplateString);\n        this.rootElement = element.querySelector('.chromecast-controls');\n        this.rootElement.querySelector('.button__audio-tracks').addEventListener('click', () => this.toggleTracksDialogue());\n        this.rootElement\n            .querySelector('.chromecast-controls__subtitles__close-icon')\n            .addEventListener('click', () => this.toggleTracksDialogue());\n        this.rootElement.querySelector('.chromecast-controls__progress-bar__slider').addEventListener('input', event => {\n            this.seek(event.target.value);\n        });\n    }\n    setPlayButtonClass() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        if (this.currentStatus === chrome.cast.media.PlayerState.PAUSED) {\n            playAndPauseButton.classList.replace('button__pause', 'button__play');\n        }\n        else {\n            playAndPauseButton.classList.replace('button__play', 'button__pause');\n        }\n    }\n    bindEventsToControls() {\n        const playAndPauseButton = this.getElement('.play-pause-button');\n        const stopButton = this.getElement('.button__stop');\n        if (!this.controlInitialized) {\n            playAndPauseButton.addEventListener('click', () => this.playPause());\n            stopButton.addEventListener('click', () => this.stop());\n            this.controlInitialized = true;\n        }\n    }\n    renderTracksButton() {\n        const tracksButtonContainerElement = this.getElement('.tracks-button-container');\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        let audioTracks = [];\n        let textTracks = [];\n        if (this.player.mediaInfo && this.player.mediaInfo.tracks && sessionMediaInfo) {\n            audioTracks = this.getTracksByType('AUDIO');\n            textTracks = this.getTracksByType('TEXT');\n        }\n        if (audioTracks.length || textTracks.length) {\n            tracksButtonContainerElement.style.display = 'unset';\n        }\n        else {\n            tracksButtonContainerElement.style.display = 'none';\n        }\n    }\n    renderTracks() {\n        this.removeTracks();\n        const audioTracksContainerElement = this.getElement('.container-wrapper_audio-tracks');\n        const textTracksContainerElement = this.getElement('.container-wrapper_text-tracks');\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        let audioTracks = [];\n        let textTracks = [];\n        if (this.player.mediaInfo && this.player.mediaInfo.tracks && sessionMediaInfo) {\n            audioTracks = this.getTracksByType('AUDIO');\n            textTracks = this.getTracksByType('TEXT');\n        }\n        if (audioTracks.length) {\n            audioTracksContainerElement.appendChild(this.getTracksList(audioTracks, 'AUDIO'));\n        }\n        if (textTracks.length) {\n            textTracksContainerElement.appendChild(this.getTracksList(textTracks, 'TEXT'));\n        }\n    }\n    removeTracks() {\n        const tracksListElements = this.rootElement.getElementsByClassName('list-container');\n        if (tracksListElements.length) {\n            Array.from(tracksListElements).forEach(element => {\n                element.remove();\n            });\n        }\n    }\n    toggleTracksDialogue() {\n        const tracksContainer = this.getElement('.chromecast-controls__subtitles');\n        if (tracksContainer.style.display === 'none') {\n            this.renderTracks();\n            tracksContainer.style.display = 'unset';\n        }\n        else {\n            tracksContainer.style.display = 'none';\n            this.removeTracks();\n        }\n    }\n    getTracksList(tracks, type) {\n        const tracksListElement = document.createElement('ul');\n        tracksListElement.classList.add('list-container');\n        tracksListElement.addEventListener('click', event => this.setActiveTrack(event, type === 'AUDIO' ? 'AUDIO' : 'TEXT'));\n        tracks.forEach(track => {\n            const listItemElement = document.createElement('li');\n            listItemElement.classList.add('list-item');\n            if (track.active) {\n                listItemElement.classList.add('active');\n            }\n            else {\n                listItemElement.classList.remove('active');\n            }\n            listItemElement.innerText = track.locale;\n            listItemElement.value = track.id;\n            tracksListElement.appendChild(listItemElement);\n        });\n        return tracksListElement;\n    }\n    getActiveTracksByType(type) {\n        return this.getTracksByType(type)\n            .filter(track => track.active)\n            .map(track => track.id);\n    }\n    getTracksByType(type) {\n        const sessionMediaInfo = cast.framework.CastContext.getInstance()\n            .getCurrentSession()\n            .getMediaSession();\n        return this.player.mediaInfo.tracks\n            .filter(track => track.type === type)\n            .map(track => ({\n            id: track.trackId,\n            locale: track.language,\n            active: sessionMediaInfo.activeTrackIds && sessionMediaInfo.activeTrackIds.indexOf(track.trackId) !== -1,\n        }));\n    }\n    setTitle() {\n        if (this.player.mediaInfo) {\n            const titleElement = this.getElement('.chromecast-controls__title');\n            titleElement.innerText = this.player.mediaInfo.metadata.title;\n        }\n    }\n    getTransformedDurationValue(value) {\n        const hours = Math.floor(value / 3600);\n        const minutes = Math.floor((value - hours * 3600) / 60);\n        const seconds = Math.round(value - hours * 3600 - minutes * 60);\n        let result = '';\n        if (!value && value === 0) {\n            return '-';\n        }\n        if (hours > 0) {\n            result = hours + ':';\n            if (minutes < 10) {\n                result += '0';\n            }\n        }\n        result += minutes + ':';\n        if (seconds < 10) {\n            result += '0';\n        }\n        return result + seconds;\n    }\n    setProgressBarValues() {\n        if (this.rootElement) {\n            const currentTimeElement = this.getElement('.chromecast-controls__progress-bar__current');\n            const totalTimeElement = this.getElement('.chromecast-controls__progress-bar__total');\n            const progressBarElement = this.getElement('.chromecast-controls__progress-bar__slider');\n            currentTimeElement.innerText = this.getTransformedDurationValue(this.currentTime);\n            totalTimeElement.innerText = this.getTransformedDurationValue(this.totalDuration);\n            progressBarElement.max = this.totalDuration;\n            progressBarElement.value = this.currentTime;\n        }\n    }\n    checkChromecastContainerVisibility() {\n        if (this.currentStatus === chrome.cast.media.PlayerState.IDLE) {\n            this.rootElement.style.display = 'none';\n        }\n        else {\n            this.rootElement.style.display = 'block';\n        }\n    }\n    playPause() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.playOrPause();\n        }\n    }\n    seek(newTime) {\n        if (this.player && this.player.isConnected) {\n            this.player.currentTime = newTime;\n            this.playerController.seek();\n        }\n    }\n    stop() {\n        if (this.player && this.player.isConnected) {\n            this.playerController.stop();\n        }\n    }\n    setActiveTrack(event, type) {\n        if (event.target instanceof HTMLLIElement && event.target.nodeName === 'LI') {\n            event.stopPropagation();\n            const selectedTrackId = event.target.value;\n            const activeTracks = this.getActiveTracksByType(type === 'AUDIO' ? 'TEXT' : 'AUDIO');\n            if (selectedTrackId > 0 && activeTracks.indexOf(selectedTrackId) === -1) {\n                activeTracks.push(selectedTrackId);\n            }\n            this.setActiveTracks(activeTracks);\n        }\n    }\n    setActiveTracks(trackIds) {\n        if (this.player && this.player.isConnected) {\n            const media = cast.framework.CastContext.getInstance()\n                .getCurrentSession()\n                .getMediaSession();\n            const tracksInfoRequest = new chrome.cast.media.EditTracksInfoRequest(trackIds);\n            media.editTracksInfo(tracksInfoRequest, () => {\n                this.toggleTracksDialogue();\n            }, (error) => console.error('ChromeCast', error));\n        }\n    }\n    getElement(selector) {\n        return this.rootElement.querySelector(selector);\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","PlayingState","PlayerEventTypes","PlayerDeviceTypes","PlayerEventTypePayloads","PulseMode","ArticlePlayErrors","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","slice","concat","BrowserInfo","name","version","os","this","type","SearchBotDeviceInfo","bot","BotInfo","SEARCHBOT_OS_REGEX","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","_a","browser","regex","uaMatch","exec","matchUserAgent","match","versionParts","split","join","count","output","ii","push","createVersionParts","detectOS","searchBotMatch","PlayerLogProcessor","constructor","baseUrl","projectId","playLogs","apiCallInProgress","intervalHandle","apiUrl","replace","init","setInterval","processFirstPlayLog","destroy","clearInterval","processPlaySession","playSession","timeStamp","eventStack","eventStackPayload","sumDelta","lastEventWasProcessed","currentEvent","isEventTypeWithoutTimeDelta","eventType","convertEventToEventPayload","previousEvent","state","createDeltaEventPayload","lastEvent","lastLogEvent","splice","MAX_EVENTS","event_type","error","event_payload","playLogPayload","getPlayerLogPayloadWithPulseToken","pulseToken","event_stack","pulse_token","pulse_mode","isLive","live","offline","device_type","deviceType","forEach","e","processPlayLog","currentLog","removePlayLog","logToSend","eventStackIndex","isStopCutOff","stop","fetch","method","headers","Accept","body","JSON","stringify","then","catch","status","response","archive","find","log","logPayload","index","findIndex","textTrackChanged","audioTrackChanged","playStart","indexOf","createBaseEventPayload","playerEvent","timestamp","appa","playPosition","appr","Math","min","mediaDuration","play","convertEventTypeToEventTypePayload","baseEvent","audio_locale","audioTrack","subtitle_locale","textTrack","timeDelta","getEventTypePayloadFromEventState","time_delta","playing","paused","buffering","loading","idle","configure","PlayerLoggerService","playerLogProcessor","reset","onStart","localTimeDelta","onStopCallback","onCurrentTimeUpdated","currentTime","playerProperties","logEvent","timeupdate","onDurationUpdated","duration","onPlaying","startInterval","onPause","pause","onError","onStop","stopped","stopInterval","onTextTrackChanged","onAudioTrackChanged","updateProperties","getTimeStamp","Date","now","VideoPlayer","player","playerLoggerService","selector","options","videoContainer","Element","document","querySelector","Error","videoElement","createElement","setAttribute","appendChild","playOptions","fluid","autoplay","controls","controlBar","pictureInPictureToggle","currentTimeDisplay","durationDisplay","timeDivider","skipButtons","forward","volumePanel","inline","children","aspectRatio","videojs","eme","bindEvents","playConfig","fullscreen","firstPlayingEvent","currentSrc","articlePlayConfig","default","hlsSources","entitlements","filter","entitlement","configureHLSOnly","navigator","userAgent","willPlayHls","playSources","map","emeOptions","protectionInfo","p","keySystems","keyDeliveryUrl","emeHeaders","Authorization","authenticationToken","certificateUri","certificateUrl","getContentId","uri","link","href","hostname","getHostnameFromUri","getLicense","contentId","keyMessage","callback","payload","a","b","c","d","byteLength","charAt","binaryToBase64","encodeURIComponent","xhr","responseType","httpHandler","err","String","fromCharCode","apply","Uint8Array","trim","substr","ArrayBuffer","f","g","h","buffer","base64ToBinary","parseLicenseResponse","getEmeOptionsFromEntitlement","src","playOption","requestFullscreen","subtitles","track","addRemoteTextTrack","kind","srclang","label","enabled","subtitleLocale","setPoster","posterUrl","poster","ended","dispose","getPlayer","on","audioTracks","element","language","checkSelectedTracks","audioTrackList","setDefaultAudioTrack","setDefaultTextTrack","metadataLoaded","setTimeout","selectedAudioTrack","selectedTextTrack","tracks","textTracks","mode","currentTextTrack","currentAudioTrack","toLowerCase","audioLocale","toFile","file","url","base_url","fileName","file_name","toPlayConfigError","code","offlineError","notAuthenticated","needEntitlement","noPlayableAsset","maxConcurrentStreamNumberError","serverError","ChromecastSender","castContext","castPlayer","castPlayerController","chromecastReceiverAppId","Promise","resolve","reject","window","isAvailable","cast","framework","initializeCastApi","scriptElement","head","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","chrome","AutoJoinPolicy","ORIGIN_SCOPED","RemotePlayer","RemotePlayerController","getCastMediaInfo","article","option","trackId","castTrack","media","Track","TrackType","TEXT","trackContentId","trackContentType","subtype","TextTrackType","SUBTITLES","customData","contentType","supportedContentTypes","item","includes","protectionConfig","protection","token","mediaInfo","MediaInfo","streamType","StreamType","BUFFERED","metadata","GenericMediaMetadata","metadataType","MetadataType","GENERIC","title","metas","meta","m","value","getMetaValue","getArticleTitle","licenceUrlParam","getLicenseUrlFromSrc","audieLocalePram","preferredAudioLocale","licenseUrl","castVideo","continueFromPreviousPosition","isConnected","castSession","getCurrentSession","request","LoadRequest","activeTrackIds","loadMedia","message","stopCasting","endSession","getCastPlayer","getCastPlayerController","graphRequest","apiFetchUrl","query","variables","json","ApiService","setToken","getArticleAssetPlayConfig","articleId","assetId","protocols","data","errors","config","parse","issued_at","configEntitlements","encryption_type","dashWidevine","protocol","mssPlayReady","configEntitlement","manifest","mime_type","key_delivery_url","fairplay_certificate_url","locale","locale_label","user_subtitle_locale","user_audio_locale","isNaN","aspect_ratio","toPlayConfig","ArticleAssetPlay","getArticle","Article","posters","images","EmbedPlayer","properties","apiBaseUrl","apiService","videoPlayer","castSender","initVideoPlayer","posterImageUrl","setVideoPlayerPoster","setVideoPlayerPosterFromArticle","posterSize","fileData","size","width","height","getResizedUrl","getArticleBackgroundImage","playParams","playVideo","fullScreen","console","getVideoPlayer","initChromecast","appendChromecastButton","castButtonContaner","castButton","all","ChromecastControls","controller","playerController","controlInitialized","totalDuration","currentStatus","playerState","createChromecastControlsTemplate","setPlayButtonClass","bindEventsToControls","setProgressBarValues","setTitle","addEventListener","RemotePlayerEventType","MEDIA_INFO_CHANGED","rootElement","renderTracks","renderTracksButton","CURRENT_TIME_CHANGED","PLAYER_STATE_CHANGED","checkChromecastContainerVisibility","insertAdjacentHTML","toggleTracksDialogue","event","seek","target","playAndPauseButton","getElement","PlayerState","PAUSED","classList","stopButton","playPause","tracksButtonContainerElement","sessionMediaInfo","getMediaSession","getTracksByType","style","display","removeTracks","audioTracksContainerElement","textTracksContainerElement","getTracksList","tracksListElements","getElementsByClassName","remove","tracksContainer","tracksListElement","add","setActiveTrack","listItemElement","active","innerText","id","getActiveTracksByType","getTransformedDurationValue","hours","floor","minutes","seconds","round","result","currentTimeElement","totalTimeElement","progressBarElement","max","IDLE","playOrPause","newTime","HTMLLIElement","nodeName","stopPropagation","selectedTrackId","activeTracks","setActiveTracks","trackIds","tracksInfoRequest","EditTracksInfoRequest","editTracksInfo"],"sourceRoot":""}